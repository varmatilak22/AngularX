{
  "content": "Skip to main content\n\nmenu\n\nmenuDocs\n\n- Introduction\n\n  - [What is Angular?](https://angular.dev/overview)\n  - [Installation](https://angular.dev/installation)\n  - Essentials\n  - [Start coding! \ud83d\ude80](https://angular.dev/tutorials/learn-angular)\n- In-depth Guides\n\n  - Signals\n  - Components\n  - Templates\n  - Directives\n  - Dependency Injection\n  - Routing\n  - Forms\n  - HTTP Client\n  - Server-side & hybrid-rendering\n  - Testing\n  - Internationalization\n  - Experimental features\n- Developer Tools\n\n  - Angular CLI\n  - Libraries\n  - [DevTools](https://angular.dev/tools/devtools)\n  - [Language Service](https://angular.dev/tools/language-service)\n- Best Practices\n\n  - [Style Guide](https://angular.dev/style-guide)\n  - [Security](https://angular.dev/best-practices/security)\n  - [Accessibility](https://angular.dev/best-practices/a11y)\n  - Performance\n  - [Keeping up-to-date](https://angular.dev/update)\n- Extended Ecosystem\n\n  - [NgModules](https://angular.dev/guide/ngmodules/overview)\n  - Animations\n  - Using RxJS with Angular\n  - Service Workers & PWAs\n  - [Web workers](https://angular.dev/ecosystem/web-workers)\n  - [Custom build pipeline](https://angular.dev/ecosystem/custom-build-pipeline)\n  - [Angular Fire](https://github.com/angular/angularfire#readme)\n  - [Google Maps](https://github.com/angular/components/tree/main/src/google-maps#readme)\n  - [Google Pay](https://github.com/google-pay/google-pay-button#angular)\n  - [YouTube player](https://github.com/angular/components/blob/main/src/youtube-player/README.md)\n  - [Angular CDK](https://material.angular.io/cdk/categories)\n  - [Angular Material](https://material.angular.io/)\n\n- arrow\\_backService Workers & PWAs\n  - [Overview](https://angular.dev/ecosystem/service-workers)\n  - [Getting started](https://angular.dev/ecosystem/service-workers/getting-started)\n  - [Configuration file](https://angular.dev/ecosystem/service-workers/config)\n  - [Communicating with the service worker](https://angular.dev/ecosystem/service-workers/communications)\n  - [Push notifications](https://angular.dev/ecosystem/service-workers/push-notifications)\n  - [Service worker devops](https://angular.dev/ecosystem/service-workers/devops)\n  - [App shell pattern](https://angular.dev/ecosystem/service-workers/app-shell)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nPush notifications are a compelling way to engage users.\nThrough the power of service workers, notifications can be delivered to a device even when your application is not in focus.\n\nThe Angular service worker enables the display of push notifications and the handling of notification click events.\n\n**HELPFUL:** When using the Angular service worker, push notification interactions are handled using the `SwPush` service.\nTo learn more about the browser APIs involved see [Push API](https://developer.mozilla.org/docs/Web/API/Push_API) and [Using the Notifications API](https://developer.mozilla.org/docs/Web/API/Notifications_API/Using_the_Notifications_API).\n\n## [Notification payload](https://angular.dev/ecosystem/service-workers/push-notifications\\#notification-payload)\n\nInvoke push notifications by pushing a message with a valid payload.\nSee `SwPush` for guidance.\n\n**HELPFUL:** In Chrome, you can test push notifications without a backend.\nOpen Devtools -> Application -> Service Workers and use the `Push` input to send a JSON notification payload.\n\n## [Notification click handling](https://angular.dev/ecosystem/service-workers/push-notifications\\#notification-click-handling)\n\nThe default behavior for the `notificationclick` event is to close the notification and notify `SwPush.notificationClicks`.\n\nYou can specify an additional operation to be executed on `notificationclick` by adding an `onActionClick` property to the `data` object, and providing a `default` entry.\nThis is especially useful for when there are no open clients when a notification is clicked.\n\n```\n      {  \"notification\": {    \"title\": \"New Notification!\",    \"data\": {      \"onActionClick\": {        \"default\": {\"operation\": \"openWindow\", \"url\": \"foo\"}      }    }  }}\n\n```\n\ncheck\n\n### [Operations](https://angular.dev/ecosystem/service-workers/push-notifications\\#operations)\n\nThe Angular service worker supports the following operations:\n\n| Operations | Details |\n| :-- | :-- |\n| `openWindow` | Opens a new tab at the specified URL. |\n| `focusLastFocusedOrOpen` | Focuses the last focused client. If there is no client open, then it opens a new tab at the specified URL. |\n| `navigateLastFocusedOrOpen` | Focuses the last focused client and navigates it to the specified URL. If there is no client open, then it opens a new tab at the specified URL. |\n| `sendRequest` | Send a simple GET request to the specified URL. |\n\n**IMPORTANT:** URLs are resolved relative to the service worker's registration scope.\n\nIf an `onActionClick` item does not define a `url`, then the service worker's registration scope is used.\n\n### [Actions](https://angular.dev/ecosystem/service-workers/push-notifications\\#actions)\n\nActions offer a way to customize how the user can interact with a notification.\n\nUsing the `actions` property, you can define a set of available actions.\nEach action is represented as an action button that the user can click to interact with the notification.\n\nIn addition, using the `onActionClick` property on the `data` object, you can tie each action to an operation to be performed when the corresponding action button is clicked:\n\n```\n      {  \"notification\": {    \"title\": \"New Notification!\",    \"actions\": [      {\"action\": \"foo\", \"title\": \"Open new tab\"},      {\"action\": \"bar\", \"title\": \"Focus last\"},      {\"action\": \"baz\", \"title\": \"Navigate last\"},      {\"action\": \"qux\", \"title\": \"Send request in the background\"},      {\"action\": \"other\", \"title\": \"Just notify existing clients\"}    ],    \"data\": {      \"onActionClick\": {        \"default\": {\"operation\": \"openWindow\"},        \"foo\": {\"operation\": \"openWindow\", \"url\": \"/absolute/path\"},        \"bar\": {\"operation\": \"focusLastFocusedOrOpen\", \"url\": \"relative/path\"},        \"baz\": {\"operation\": \"navigateLastFocusedOrOpen\", \"url\": \"https://other.domain.com/\"},        \"qux\": {\"operation\": \"sendRequest\", \"url\": \"https://yet.another.domain.com/\"}      }    }  }}\n\n```\n\ncheck\n\n**IMPORTANT:** If an action does not have a corresponding `onActionClick` entry, then the notification is closed and `SwPush.notificationClicks` is notified on existing clients.\n\n## [More on Angular service workers](https://angular.dev/ecosystem/service-workers/push-notifications\\#more-on-angular-service-workers)\n\nYou might also be interested in the following:",
  "title": "Push notifications \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "angular",
    "https",
    "service",
    "dev",
    "workers",
    "notification",
    "ecosystem",
    "push",
    "notifications",
    "url"
  ],
  "sourceURL": "https://angular.dev/ecosystem/service-workers/push-notifications"
}