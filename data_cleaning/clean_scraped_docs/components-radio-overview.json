{
  "content": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for radio\n\n`<mat-radio-button>` provides the same functionality as a native `<input type=\"radio\">` enhanced with\nMaterial Design styling and animations.\n\nBasic radios\n\nlinkcodeopen\\_in\\_new\n\nOption 1\n\nOption 2\n\nAll radio-buttons with the same `name` comprise a set from which only one may be selected at a time.\n\n### [link](https://material.angular.io/components/radio/overview\\#radio-button-label)  Radio-button label\n\nThe radio-button label is provided as the content to the `<mat-radio-button>` element. The label can\nbe positioned before or after the radio-button by setting the `labelPosition` property to `'before'`\nor `'after'`.\n\nIf you don't want the label to appear next to the radio-button, you can use\n[`aria-label`](https://www.w3.org/TR/wai-aria/states_and_properties#aria-label) or\n[`aria-labelledby`](https://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby) to\nspecify an appropriate label.\n\n### [link](https://material.angular.io/components/radio/overview\\#radio-groups)  Radio groups\n\nRadio-buttons should typically be placed inside of an `<mat-radio-group>` unless the DOM structure\nwould make that impossible (e.g., radio-buttons inside of table cells). The radio-group has a\n`value` property that reflects the currently selected radio-button inside of the group.\n\nIndividual radio-buttons inside of a radio-group will inherit the `name` of the group.\n\n### [link](https://material.angular.io/components/radio/overview\\#use-with-angularforms)  Use with `@angular/forms`\n\n`<mat-radio-group>` is compatible with `@angular/forms` and supports both `FormsModule`\nand `ReactiveFormsModule`.\n\n### [link](https://material.angular.io/components/radio/overview\\#accessibility)  Accessibility\n\n`MatRadioButton` uses an internal `<input type=\"radio\">` to provide an accessible experience.\nThis internal radio button receives focus and is automatically labelled by the text content of the\n`<mat-radio-button>` element. Avoid adding other interactive controls into the content of\n`<mat-radio-button>`, as this degrades the experience for users of assistive technology.\n\nAlways provide an accessible label via `aria-label` or `aria-labelledby` for radio buttons without\ndescriptive text content. For dynamic labels and descriptions, `MatRadioButton` provides input\nproperties for binding `aria-label`, `aria-labelledby`, and `aria-describedby`. This means that you\nshould not use the `attr.` prefix when binding these properties, as demonstrated below.\n\n```html\n<mat-radio-button [aria-label]=\"getMultipleChoiceAnswer()\">\n</mat-radio-button>\n\n```\n\nPrefer placing all radio buttons inside of a `<mat-radio-group>` rather than creating standalone\nradio buttons because groups are easier to use exclusively with a keyboard.\n\nYou should provide an accessible label for all `<mat-radio-group>` elements via `aria-label` or\n`aria-labelledby`.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic radios example in StackBlitz\n\nCopy link to example\n\nView code",
  "title": "Radio button | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/components/radio/overview"
}