{
  "content": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for menu\n\n`<mat-menu>` is a floating panel containing list of options.\n\nBasic menu\n\nlinkcodeopen\\_in\\_new\n\nMenu\n\nBy itself, the `<mat-menu>` element does not render anything. The menu is attached to and opened\nvia application of the `matMenuTriggerFor` directive:\n\ncontent\\_copy\n\n```\n<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n```\n\n### [link](https://material.angular.io/components/menu/overview\\#toggling-the-menu-programmatically)  Toggling the menu programmatically\n\nThe menu exposes an API to open/close programmatically. Please note that in this case, an\n`matMenuTriggerFor` directive is still necessary to attach the menu to a trigger element in the DOM.\n\n```ts\nclass MyComponent {\n  @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\n\n  someMethod() {\n    this.trigger.openMenu();\n  }\n}\n\n```\n\n### [link](https://material.angular.io/components/menu/overview\\#icons)  Icons\n\nMenus support displaying `mat-icon` elements before the menu item text.\n\ncontent\\_copy\n\n```\n<button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item>\n    <mat-icon>dialpad</mat-icon>\n    <span>Redial</span>\n  </button>\n  <button mat-menu-item disabled>\n    <mat-icon>voicemail</mat-icon>\n    <span>Check voice mail</span>\n  </button>\n  <button mat-menu-item>\n    <mat-icon>notifications_off</mat-icon>\n    <span>Disable alerts</span>\n  </button>\n</mat-menu>\n\n```\n\n### [link](https://material.angular.io/components/menu/overview\\#customizing-menu-position)  Customizing menu position\n\nBy default, the menu will display below (y-axis), after (x-axis), without overlapping\nits trigger. The position can be changed using the `xPosition` ( `before | after`) and `yPosition`\n( `above | below`) attributes. The menu can be forced to overlap the trigger using the\n`overlapTrigger` attribute.\n\ncontent\\_copy\n\n```\n<mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n```\n\n### [link](https://material.angular.io/components/menu/overview\\#nested-menu)  Nested menu\n\nMaterial supports the ability for an `mat-menu-item` to open a sub-menu. To do so, you have to define\nyour root menu and sub-menus, in addition to setting the `[matMenuTriggerFor]` on the `mat-menu-item`\nthat should trigger the sub-menu:\n\ncontent\\_copy\n\n```\n<mat-menu #animals=\"matMenu\">\n  <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Vertebrates</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"invertebrates\">Invertebrates</button>\n</mat-menu>\n\n<mat-menu #vertebrates=\"matMenu\">\n  <button mat-menu-item [matMenuTriggerFor]=\"fish\">Fishes</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"amphibians\">Amphibians</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"reptiles\">Reptiles</button>\n  <button mat-menu-item>Birds</button>\n  <button mat-menu-item>Mammals</button>\n</mat-menu>\n```\n\n### [link](https://material.angular.io/components/menu/overview\\#lazy-rendering)  Lazy rendering\n\nBy default, the menu content will be initialized even when the panel is closed. To defer\ninitialization until the menu is open, the content can be provided as an `ng-template`\nwith the `matMenuContent` attribute:\n\n```html\n<mat-menu #appMenu=\"matMenu\">\n  <ng-template matMenuContent>\n    <button mat-menu-item>Settings</button>\n    <button mat-menu-item>Help</button>\n  </ng-template>\n</mat-menu>\n\n<button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n\n```\n\n### [link](https://material.angular.io/components/menu/overview\\#passing-in-data-to-a-menu)  Passing in data to a menu\n\nWhen using lazy rendering, additional context data can be passed to the menu panel via\nthe `matMenuTriggerData` input. This allows for a single menu instance to be rendered\nwith a different set of data, depending on the trigger that opened it:\n\n```html\n<mat-menu #appMenu=\"matMenu\">\n  <ng-template matMenuContent let-name=\"name\">\n    <button mat-menu-item>Settings</button>\n    <button mat-menu-item>Log off {{name}}</button>\n  </ng-template>\n</mat-menu>\n\n<button mat-icon-button [matMenuTriggerFor]=\"appMenu\" [matMenuTriggerData]=\"{name: 'Sally'}\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n\n<button mat-icon-button [matMenuTriggerFor]=\"appMenu\" [matMenuTriggerData]=\"{name: 'Bob'}\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n\n```\n\n### [link](https://material.angular.io/components/menu/overview\\#keyboard-interaction)  Keyboard interaction\n\n| Keyboard shortcut | Action |\n| --- | --- |\n| `Down Arrow` | Focus the next menu item. |\n| `Up Arrow` | Focus the previous menu item. |\n| `Left Arrow` | Close the current menu if it is a sub-menu. |\n| `Right Arrow` | Opens the current menu item's sub-menu. |\n| `Enter` | Activate the focused menu item. |\n| `Escape` | Close all open menus. |\n\n### [link](https://material.angular.io/components/menu/overview\\#accessibility)  Accessibility\n\nAngular Material's menu component consists of two connected parts: the trigger and the pop-up menu.\n\nThe menu trigger is a standard button element augmented with `aria-haspopup`, `aria-expanded`, and\n`aria-controls` to create the relationship to the pop-up panel.\n\nThe pop-up menu implements the `role=\"menu\"` pattern, handling keyboard interaction and focus\nmanagement. Upon opening, the trigger will focus the first focusable menu item. Upon close, the menu\nwill return focus to its trigger. Avoid creating a menu in which all items are disabled, instead\nhiding or disabling the menu trigger.\n\nAngular Material does not support the `menuitemcheckbox` or `menuitemradio` roles.\n\nAlways provide an accessible label via `aria-label` or `aria-labelledby` for any menu\ntriggers or menu items without descriptive text content.\n\nMatMenu should not contain any interactive controls aside from MatMenuItem.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic menu example in StackBlitz\n\nCopy link to example\n\nView code\n\nCopy snippet\n\nView full example",
  "title": "Menu | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/components/menu/overview"
}