{
  "content": "Skip to main content\n\nmenu\n\nmenuDocs\n\n- Introduction\n\n  - [What is Angular?](https://angular.dev/overview)\n  - [Installation](https://angular.dev/installation)\n  - Essentials\n  - [Start coding! \ud83d\ude80](https://angular.dev/tutorials/learn-angular)\n- In-depth Guides\n\n  - Signals\n  - Components\n  - Templates\n  - Directives\n  - Dependency Injection\n  - Routing\n  - Forms\n  - HTTP Client\n  - Server-side & hybrid-rendering\n  - Testing\n  - Internationalization\n  - Experimental features\n- Developer Tools\n\n  - Angular CLI\n  - Libraries\n  - [DevTools](https://angular.dev/tools/devtools)\n  - [Language Service](https://angular.dev/tools/language-service)\n- Best Practices\n\n  - [Style Guide](https://angular.dev/style-guide)\n  - [Security](https://angular.dev/best-practices/security)\n  - [Accessibility](https://angular.dev/best-practices/a11y)\n  - Performance\n  - [Keeping up-to-date](https://angular.dev/update)\n- Extended Ecosystem\n\n  - [NgModules](https://angular.dev/guide/ngmodules/overview)\n  - Animations\n  - Using RxJS with Angular\n  - Service Workers & PWAs\n  - [Web workers](https://angular.dev/ecosystem/web-workers)\n  - [Custom build pipeline](https://angular.dev/ecosystem/custom-build-pipeline)\n  - [Angular Fire](https://github.com/angular/angularfire#readme)\n  - [Google Maps](https://github.com/angular/components/tree/main/src/google-maps#readme)\n  - [Google Pay](https://github.com/google-pay/google-pay-button#angular)\n  - [YouTube player](https://github.com/angular/components/blob/main/src/youtube-player/README.md)\n  - [Angular CDK](https://material.angular.io/cdk/categories)\n  - [Angular Material](https://material.angular.io/)\n\n- arrow\\_backInternationalization\n  - [Overview](https://angular.dev/guide/i18n)\n  - [Add the localize package](https://angular.dev/guide/i18n/add-package)\n  - [Refer to locales by ID](https://angular.dev/guide/i18n/locale-id)\n  - [Format data based on locale](https://angular.dev/guide/i18n/format-data-locale)\n  - [Prepare component for translation](https://angular.dev/guide/i18n/prepare)\n  - [Work with translation files](https://angular.dev/guide/i18n/translation-files)\n  - [Merge translations into the app](https://angular.dev/guide/i18n/merge)\n  - [Deploy multiple locales](https://angular.dev/guide/i18n/deploy)\n  - [Import global variants of the locale data](https://angular.dev/guide/i18n/import-global-variants)\n  - [Manage marked text with custom IDs](https://angular.dev/guide/i18n/manage-marked-text)\n  - [Example Angular application](https://angular.dev/guide/i18n/example)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nTo merge the completed translations into your project, complete the following actions\n\n1. Use the [Angular CLI](https://angular.dev/guide/i18n/cli \"CLI\") to build a copy of the distributable files of your project\n2. Use the `\"localize\"` option to replace all of the i18n messages with the valid translations and build a localized variant application.\n    A variant application is a complete a copy of the distributable files of your application translated for a single locale.\n\nAfter you merge the translations, serve each distributable copy of the application using server-side language detection or different subdirectories.\n\n**HELPFUL:** For more information about how to serve each distributable copy of the application, see [deploying multiple locales](https://angular.dev/guide/i18n/guide/i18n/deploy).\n\nFor a compile-time translation of the application, the build process uses ahead-of-time (AOT) compilation to produce a small, fast, ready-to-run application.\n\n**HELPFUL:** For a detailed explanation of the build process, see [Building and serving Angular apps](https://angular.dev/guide/i18n/tools/cli/build \"Building\").\nThe build process works for translation files in the `.xlf` format or in another format that Angular understands, such as `.xtb`.\nFor more information about translation file formats used by Angular, see [Change the source language file format](https://angular.dev/guide/i18n/guide/i18n/translation-files#change-the-source-language-file-format \"Change\")\n\nTo build a separate distributable copy of the application for each locale, [define the locales in the build configuration](https://angular.dev/guide/i18n/guide/i18n/merge#define-locales-in-the-build-configuration \"Define\") in the [`angular.json`](https://angular.dev/guide/i18n/reference/configs/workspace-config \"Angular\") workspace build configuration file of your project.\n\nThis method shortens the build process by removing the requirement to perform a full application build for each locale.\n\nTo [generate application variants for each locale](https://angular.dev/guide/i18n/guide/i18n/merge#generate-application-variants-for-each-locale \"Generate\"), use the `\"localize\"` option in the [`angular.json`](https://angular.dev/guide/i18n/reference/configs/workspace-config \"Angular\") workspace build configuration file.\nAlso, to [build from the command line](https://angular.dev/guide/i18n/guide/i18n/merge#build-from-the-command-line \"Build\"), use the [`build`](https://angular.dev/guide/i18n/cli/build \"ng\") [Angular CLI](https://angular.dev/guide/i18n/cli \"CLI\") command with the `--localize` option.\n\n**HELPFUL:** Optionally, [apply specific build options for just one locale](https://angular.dev/guide/i18n/guide/i18n/merge#apply-specific-build-options-for-just-one-locale \"Apply\") for a custom locale configuration.\n\n## [Define locales in the build configuration](https://angular.dev/guide/i18n/merge\\#define-locales-in-the-build-configuration)\n\nUse the `i18n` project option in the [`angular.json`](https://angular.dev/guide/i18n/reference/configs/workspace-config \"Angular\") workspace build configuration file of your project to define locales for a project.\n\nThe following sub-options identify the source language and tell the compiler where to find supported translations for the project.\n\n| Suboption | Details |\n| :-- | :-- |\n| `sourceLocale` | The locale you use within the application source code ( `en-US` by default) |\n| `locales` | A map of locale identifiers to translation files |\n\n### [`angular.json` for `en-US` and `fr` example](https://angular.dev/guide/i18n/merge\\#angularjson-for-en-us-and-fr-example)\n\nFor example, the following excerpt of an [`angular.json`](https://angular.dev/guide/i18n/reference/configs/workspace-config \"Angular\") workspace build configuration file sets the source locale to `en-US` and provides the path to the French ( `fr`) locale translation file.\n\ncheck\n\n```\n      {  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",  \"version\": 1,  \"newProjectRoot\": \"projects\",  \"projects\": {    \"angular.io-example\": {      \"projectType\": \"application\",      \"root\": \"\",      \"sourceRoot\": \"src\",      \"prefix\": \"app\",\n...      \"i18n\": {        \"sourceLocale\": \"en-US\",        \"locales\": {          \"fr\": {            \"translation\": \"src/locale/messages.fr.xlf\",            \"subPath\": \"\"\n...          }        }      },      \"architect\": {        \"build\": {          \"builder\": \"@angular-devkit/build-angular:browser\",          \"options\": {            \"localize\": true,            \"outputPath\": \"dist\",            \"index\": \"src/index.html\",            \"main\": \"src/main.ts\",            \"polyfills\": [\"zone.js\"],            \"tsConfig\": \"tsconfig.app.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": [],            \"i18nMissingTranslation\": \"error\"          },          \"configurations\": {            \"production\": {              \"budgets\": [                {                  \"type\": \"initial\",                  \"maximumWarning\": \"500kb\",                  \"maximumError\": \"1mb\"                },                {                  \"type\": \"anyComponentStyle\",                  \"maximumWarning\": \"2kb\",                  \"maximumError\": \"4kb\"                }              ],              \"outputHashing\": \"all\"            },            \"development\": {              \"localize\": false,              \"buildOptimizer\": false,              \"optimization\": false,              \"vendorChunk\": true,              \"extractLicenses\": false,              \"sourceMap\": true,              \"namedChunks\": true            },            \"fr\": {              \"localize\": [\"fr\"]            }          },          \"defaultConfiguration\": \"production\"        },        \"serve\": {          \"builder\": \"@angular-devkit/build-angular:dev-server\",          \"configurations\": {            \"production\": {              \"buildTarget\": \"angular.io-example:build:production\"            },            \"development\": {              \"buildTarget\": \"angular.io-example:build:development\"            },            \"fr\": {              \"buildTarget\": \"angular.io-example:build:development,fr\"            }          },          \"defaultConfiguration\": \"development\"        },        \"extract-i18n\": {          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",          \"options\": {            \"buildTarget\": \"angular.io-example:build\"          }        },        \"test\": {          \"builder\": \"@angular-devkit/build-angular:karma\",          \"options\": {            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],            \"tsConfig\": \"tsconfig.spec.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": []          }        },        \"e2e\": {          \"builder\": \"@angular-devkit/build-angular:private-protractor\",          \"options\": {            \"protractorConfig\": \"e2e/protractor.conf.js\",            \"devServerTarget\": \"angular.io-example:serve:fr\"          },          \"configurations\": {            \"production\": {              \"devServerTarget\": \"angular.io-example:serve:production\"            }          }        }\n...      }    }  }}\n\n```\n\n## [Generate application variants for each locale](https://angular.dev/guide/i18n/merge\\#generate-application-variants-for-each-locale)\n\nTo use your locale definition in the build configuration, use the `\"localize\"` option in the [`angular.json`](https://angular.dev/guide/i18n/reference/configs/workspace-config \"Angular\") workspace build configuration file to tell the CLI which locales to generate for the build configuration.\n\n- Set `\"localize\"` to `true` for all the locales previously defined in the build configuration.\n- Set `\"localize\"` to an array of a subset of the previously defined locale identifiers to build only those locale versions.\n- Set `\"localize\"` to `false` to disable localization and not generate any locale-specific versions.\n\n**HELPFUL:** Ahead-of-time (AOT) compilation is required to localize component templates.\n\nIf you changed this setting, set `\"aot\"` to `true` in order to use AOT.\n\n**HELPFUL:** Due to the deployment complexities of i18n and the need to minimize rebuild time, the development server only supports localizing a single locale at a time.\nIf you set the `\"localize\"` option to `true`, define more than one locale, and use `ng serve`; then an error occurs.\nIf you want to develop against a specific locale, set the `\"localize\"` option to a specific locale.\nFor example, for French ( `fr`), specify `\"localize\": [\"fr\"]`.\n\nThe CLI loads and registers the locale data, places each generated version in a locale-specific directory to keep it separate from other locale versions, and puts the directories within the configured `outputPath` for the project.\nFor each application variant the `lang` attribute of the `html` element is set to the locale.\nThe CLI also adjusts the HTML base HREF for each version of the application by adding the locale to the configured `baseHref`.\n\nSet the `\"localize\"` property as a shared configuration to effectively inherit for all the configurations.\nAlso, set the property to override other configurations.\n\n### [`angular.json` include all locales from build example](https://angular.dev/guide/i18n/merge\\#angularjson-include-all-locales-from-build-example)\n\nThe following example displays the `\"localize\"` option set to `true` in the [`angular.json`](https://angular.dev/guide/i18n/reference/configs/workspace-config \"Angular\") workspace build configuration file, so that all locales defined in the build configuration are built.\n\ncheck\n\n```\n      {  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",  \"version\": 1,  \"newProjectRoot\": \"projects\",  \"projects\": {    \"angular.io-example\": {      \"projectType\": \"application\",      \"root\": \"\",      \"sourceRoot\": \"src\",      \"prefix\": \"app\",      \"i18n\": {        \"sourceLocale\": \"en-US\",        \"locales\": {          \"fr\": {            \"translation\": \"src/locale/messages.fr.xlf\",            \"subPath\": \"\"          }        }      },      \"architect\": {        \"build\": {          \"builder\": \"@angular-devkit/build-angular:browser\",          \"options\": {            \"localize\": true,            \"outputPath\": \"dist\",            \"index\": \"src/index.html\",            \"main\": \"src/main.ts\",            \"polyfills\": [\"zone.js\"],            \"tsConfig\": \"tsconfig.app.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": [],            \"i18nMissingTranslation\": \"error\"\n...          },          \"configurations\": {            \"production\": {              \"budgets\": [                {                  \"type\": \"initial\",                  \"maximumWarning\": \"500kb\",                  \"maximumError\": \"1mb\"                },                {                  \"type\": \"anyComponentStyle\",                  \"maximumWarning\": \"2kb\",                  \"maximumError\": \"4kb\"                }              ],              \"outputHashing\": \"all\"            },            \"development\": {              \"localize\": false,              \"buildOptimizer\": false,              \"optimization\": false,              \"vendorChunk\": true,              \"extractLicenses\": false,              \"sourceMap\": true,              \"namedChunks\": true            },            \"fr\": {              \"localize\": [\"fr\"]            }          },          \"defaultConfiguration\": \"production\"        },        \"serve\": {          \"builder\": \"@angular-devkit/build-angular:dev-server\",          \"configurations\": {            \"production\": {              \"buildTarget\": \"angular.io-example:build:production\"            },            \"development\": {              \"buildTarget\": \"angular.io-example:build:development\"            },            \"fr\": {              \"buildTarget\": \"angular.io-example:build:development,fr\"            }          },          \"defaultConfiguration\": \"development\"        },        \"extract-i18n\": {          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",          \"options\": {            \"buildTarget\": \"angular.io-example:build\"          }        },        \"test\": {          \"builder\": \"@angular-devkit/build-angular:karma\",          \"options\": {            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],            \"tsConfig\": \"tsconfig.spec.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": []          }        },        \"e2e\": {          \"builder\": \"@angular-devkit/build-angular:private-protractor\",          \"options\": {            \"protractorConfig\": \"e2e/protractor.conf.js\",            \"devServerTarget\": \"angular.io-example:serve:fr\"          },          \"configurations\": {            \"production\": {              \"devServerTarget\": \"angular.io-example:serve:production\"            }          }        }      }    }  }}\n\n```\n\n## [Build from the command line](https://angular.dev/guide/i18n/merge\\#build-from-the-command-line)\n\nAlso, use the `--localize` option with the [`ng build`](https://angular.dev/guide/i18n/cli/build \"ng\") command and your existing `production` configuration.\nThe CLI builds all locales defined in the build configuration.\nIf you set the locales in build configuration, it is similar to when you set the `\"localize\"` option to `true`.\n\n**HELPFUL:** For more information about how to set the locales, see [Generate application variants for each locale](https://angular.dev/guide/i18n/guide/i18n/merge#generate-application-variants-for-each-locale \"Generate\").\n\ncheck\n\n```\n      ng add @angular/localizeng extract-i18nng extract-i18n --output-path src/localeng extract-i18n --format=xlfng extract-i18n --format=xlf2ng extract-i18n --format=xmbng extract-i18n --format=jsonng extract-i18n --format=arbng extract-i18n --out-file source.xlfng build --localizeng serve --configuration=frng build --configuration=production,fr\n\n```\n\n## [Apply specific build options for just one locale](https://angular.dev/guide/i18n/merge\\#apply-specific-build-options-for-just-one-locale)\n\nTo apply specific build options to only one locale, specify a single locale to create a custom locale-specific configuration.\n\n**IMPORTANT:** Use the [Angular CLI](https://angular.dev/guide/i18n/cli \"CLI\") development server ( `ng serve`) with only a single locale.\n\n### [build for French example](https://angular.dev/guide/i18n/merge\\#build-for-french-example)\n\nThe following example displays a custom locale-specific configuration using a single locale.\n\ncheck\n\n```\n      {  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",  \"version\": 1,  \"newProjectRoot\": \"projects\",  \"projects\": {    \"angular.io-example\": {      \"projectType\": \"application\",      \"root\": \"\",      \"sourceRoot\": \"src\",      \"prefix\": \"app\",      \"i18n\": {        \"sourceLocale\": \"en-US\",        \"locales\": {          \"fr\": {            \"translation\": \"src/locale/messages.fr.xlf\",            \"subPath\": \"\"          }        }      },      \"architect\": {        \"build\": {          \"builder\": \"@angular-devkit/build-angular:browser\",          \"options\": {            \"localize\": true,            \"outputPath\": \"dist\",            \"index\": \"src/index.html\",            \"main\": \"src/main.ts\",            \"polyfills\": [\"zone.js\"],            \"tsConfig\": \"tsconfig.app.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": [],            \"i18nMissingTranslation\": \"error\"          },\n...          \"configurations\": {            \"production\": {              \"budgets\": [                {                  \"type\": \"initial\",                  \"maximumWarning\": \"500kb\",                  \"maximumError\": \"1mb\"                },                {                  \"type\": \"anyComponentStyle\",                  \"maximumWarning\": \"2kb\",                  \"maximumError\": \"4kb\"                }              ],              \"outputHashing\": \"all\"            },            \"development\": {              \"localize\": false,              \"buildOptimizer\": false,              \"optimization\": false,              \"vendorChunk\": true,              \"extractLicenses\": false,              \"sourceMap\": true,              \"namedChunks\": true            },\n...            \"fr\": {              \"localize\": [\"fr\"]            }          },          \"defaultConfiguration\": \"production\"\n...        },        \"serve\": {          \"builder\": \"@angular-devkit/build-angular:dev-server\",          \"configurations\": {            \"production\": {              \"buildTarget\": \"angular.io-example:build:production\"            },            \"development\": {              \"buildTarget\": \"angular.io-example:build:development\"            },\n...            \"fr\": {              \"buildTarget\": \"angular.io-example:build:development,fr\"            }          },          \"defaultConfiguration\": \"development\"\n...        },        \"extract-i18n\": {          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",          \"options\": {            \"buildTarget\": \"angular.io-example:build\"          }        },        \"test\": {          \"builder\": \"@angular-devkit/build-angular:karma\",          \"options\": {            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],            \"tsConfig\": \"tsconfig.spec.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": []          }        },        \"e2e\": {          \"builder\": \"@angular-devkit/build-angular:private-protractor\",          \"options\": {            \"protractorConfig\": \"e2e/protractor.conf.js\",            \"devServerTarget\": \"angular.io-example:serve:fr\"          },          \"configurations\": {            \"production\": {              \"devServerTarget\": \"angular.io-example:serve:production\"            }          }        }\n...      }    }  }}\n\n```\n\nPass this configuration to the `ng serve` or `ng build` commands.\nThe following code example displays how to serve the French language file.\n\ncheck\n\n```\n      ng add @angular/localizeng extract-i18nng extract-i18n --output-path src/localeng extract-i18n --format=xlfng extract-i18n --format=xlf2ng extract-i18n --format=xmbng extract-i18n --format=jsonng extract-i18n --format=arbng extract-i18n --out-file source.xlfng build --localizeng serve --configuration=frng build --configuration=production,fr\n\n```\n\nFor production builds, use configuration composition to run both configurations.\n\ncheck\n\n```\n      ng add @angular/localizeng extract-i18nng extract-i18n --output-path src/localeng extract-i18n --format=xlfng extract-i18n --format=xlf2ng extract-i18n --format=xmbng extract-i18n --format=jsonng extract-i18n --format=arbng extract-i18n --out-file source.xlfng build --localizeng serve --configuration=frng build --configuration=production,fr\n\n```\n\ncheck\n\n```\n      {  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",  \"version\": 1,  \"newProjectRoot\": \"projects\",  \"projects\": {    \"angular.io-example\": {      \"projectType\": \"application\",      \"root\": \"\",      \"sourceRoot\": \"src\",      \"prefix\": \"app\",      \"i18n\": {        \"sourceLocale\": \"en-US\",        \"locales\": {          \"fr\": {            \"translation\": \"src/locale/messages.fr.xlf\",            \"subPath\": \"\"          }        }      },      \"architect\": {        \"build\": {          \"builder\": \"@angular-devkit/build-angular:browser\",          \"options\": {            \"localize\": true,            \"outputPath\": \"dist\",            \"index\": \"src/index.html\",            \"main\": \"src/main.ts\",            \"polyfills\": [\"zone.js\"],            \"tsConfig\": \"tsconfig.app.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": [],            \"i18nMissingTranslation\": \"error\"\n...          },          \"configurations\": {            \"production\": {              \"budgets\": [                {                  \"type\": \"initial\",                  \"maximumWarning\": \"500kb\",                  \"maximumError\": \"1mb\"                },                {                  \"type\": \"anyComponentStyle\",                  \"maximumWarning\": \"2kb\",                  \"maximumError\": \"4kb\"                }              ],              \"outputHashing\": \"all\"            },            \"development\": {              \"localize\": false,              \"buildOptimizer\": false,              \"optimization\": false,              \"vendorChunk\": true,              \"extractLicenses\": false,              \"sourceMap\": true,              \"namedChunks\": true            },\n...            \"fr\": {              \"localize\": [\"fr\"]            }          },          \"defaultConfiguration\": \"production\"\n...        },        \"serve\": {          \"builder\": \"@angular-devkit/build-angular:dev-server\",          \"configurations\": {            \"production\": {              \"buildTarget\": \"angular.io-example:build:production\"            },            \"development\": {              \"buildTarget\": \"angular.io-example:build:development\"            },\n...            \"fr\": {              \"buildTarget\": \"angular.io-example:build:development,fr\"            }          },          \"defaultConfiguration\": \"development\"\n...        },        \"extract-i18n\": {          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",          \"options\": {            \"buildTarget\": \"angular.io-example:build\"          }        },        \"test\": {          \"builder\": \"@angular-devkit/build-angular:karma\",          \"options\": {            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],            \"tsConfig\": \"tsconfig.spec.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": []          }        },        \"e2e\": {          \"builder\": \"@angular-devkit/build-angular:private-protractor\",          \"options\": {            \"protractorConfig\": \"e2e/protractor.conf.js\",            \"devServerTarget\": \"angular.io-example:serve:fr\"          },          \"configurations\": {            \"production\": {              \"devServerTarget\": \"angular.io-example:serve:production\"            }          }        }\n...      }    }  }}\n\n```\n\n## [Report missing translations](https://angular.dev/guide/i18n/merge\\#report-missing-translations)\n\nWhen a translation is missing, the build succeeds but generates a warning such as `Missing translation for message \"{translation_text}\"`.\nTo configure the level of warning that is generated by the Angular compiler, specify one of the following levels.\n\n| Warning level | Details | Output |\n| :-- | :-- | :-- |\n| `error` | Throw an error and the build fails | n/a |\n| `ignore` | Do nothing | n/a |\n| `warning` | Displays the default warning in the console or shell | `Missing translation for message \"{translation_text}\"` |\n\nSpecify the warning level in the `options` section for the `build` target of your [`angular.json`](https://angular.dev/guide/i18n/reference/configs/workspace-config \"Angular\") workspace build configuration file.\n\n### [`angular.json` `error` warning example](https://angular.dev/guide/i18n/merge\\#angularjson-error-warning-example)\n\nThe following example displays how to set the warning level to `error`.\n\ncheck\n\n```\n      {  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",  \"version\": 1,  \"newProjectRoot\": \"projects\",  \"projects\": {    \"angular.io-example\": {      \"projectType\": \"application\",      \"root\": \"\",      \"sourceRoot\": \"src\",      \"prefix\": \"app\",      \"i18n\": {        \"sourceLocale\": \"en-US\",        \"locales\": {          \"fr\": {            \"translation\": \"src/locale/messages.fr.xlf\",            \"subPath\": \"\"          }        }      },      \"architect\": {        \"build\": {          \"builder\": \"@angular-devkit/build-angular:browser\",          \"options\": {            \"localize\": true,            \"outputPath\": \"dist\",            \"index\": \"src/index.html\",            \"main\": \"src/main.ts\",            \"polyfills\": [\"zone.js\"],            \"tsConfig\": \"tsconfig.app.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": [],\n...            \"i18nMissingTranslation\": \"error\"          },          \"configurations\": {            \"production\": {              \"budgets\": [                {                  \"type\": \"initial\",                  \"maximumWarning\": \"500kb\",                  \"maximumError\": \"1mb\"                },                {                  \"type\": \"anyComponentStyle\",                  \"maximumWarning\": \"2kb\",                  \"maximumError\": \"4kb\"                }              ],              \"outputHashing\": \"all\"            },            \"development\": {              \"localize\": false,              \"buildOptimizer\": false,              \"optimization\": false,              \"vendorChunk\": true,              \"extractLicenses\": false,              \"sourceMap\": true,              \"namedChunks\": true            },            \"fr\": {              \"localize\": [\"fr\"]            }          },          \"defaultConfiguration\": \"production\"        },        \"serve\": {          \"builder\": \"@angular-devkit/build-angular:dev-server\",          \"configurations\": {            \"production\": {              \"buildTarget\": \"angular.io-example:build:production\"            },            \"development\": {              \"buildTarget\": \"angular.io-example:build:development\"            },            \"fr\": {              \"buildTarget\": \"angular.io-example:build:development,fr\"            }          },          \"defaultConfiguration\": \"development\"        },        \"extract-i18n\": {          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",          \"options\": {            \"buildTarget\": \"angular.io-example:build\"          }        },        \"test\": {          \"builder\": \"@angular-devkit/build-angular:karma\",          \"options\": {            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],            \"tsConfig\": \"tsconfig.spec.json\",            \"assets\": [\"src/favicon.ico\", \"src/assets\"],            \"styles\": [\"src/styles.css\"],            \"scripts\": []          }        },        \"e2e\": {          \"builder\": \"@angular-devkit/build-angular:private-protractor\",          \"options\": {            \"protractorConfig\": \"e2e/protractor.conf.js\",            \"devServerTarget\": \"angular.io-example:serve:fr\"          },          \"configurations\": {            \"production\": {              \"devServerTarget\": \"angular.io-example:serve:production\"            }          }        }      }    }  }}\n\n```\n\n**HELPFUL:** When you compile your Angular project into an Angular application, the instances of the `i18n` attribute are replaced with instances of the [`$localize`](https://angular.dev/guide/i18n/api/localize/init/$localize \"$localize\") tagged message string.\nThis means that your Angular application is translated after compilation.\nThis also means that you can create localized versions of your Angular application without re-compiling your entire Angular project for each locale.\n\nWhen you translate your Angular application, the _translation transformation_ replaces and reorders the parts (static strings and expressions) of the template literal string with strings from a collection of translations.\nFor more information, see [`$localize`](https://angular.dev/guide/i18n/api/localize/init/$localize \"$localize\").\n\n**TL;DR:** Compile once, then translate for each locale.\n\n## [What's next](https://angular.dev/guide/i18n/merge\\#whats-next)",
  "title": "Merge translations into the app \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "angular",
    "build",
    "i18n",
    "https",
    "dev",
    "src",
    "guide",
    "example",
    "locale",
    "fr"
  ],
  "sourceURL": "https://angular.dev/guide/i18n/merge"
}