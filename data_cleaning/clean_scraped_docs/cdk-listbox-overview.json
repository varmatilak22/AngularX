{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\n## Overview for listbox\n\nThe `@angular/cdk/listbox` module provides directives to help create custom listbox interactions\nbased on the [WAI ARIA listbox pattern](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/ \"WAI ARIA Listbox Pattern\").\n\nBy using `@angular/cdk/listbox` you get all the expected behaviors for an accessible experience,\nincluding bidi layout support, keyboard interaction, and focus management. All directives apply\ntheir associated ARIA roles to their host element.\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#supported-aria-roles)  Supported ARIA Roles\n\nThe directives in `@angular/cdk/listbox` set the appropriate roles on their host element.\n\n| Directive | ARIA Role |\n| --- | --- |\n| cdkOption | option |\n| cdkListbox | listbox |\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#css-styles-and-classes)  CSS Styles and Classes\n\nThe `@angular/cdk/listbox` is designed to be highly customizable to your needs. It therefore does not\nmake any assumptions about how elements should be styled. You are expected to apply any required\nCSS styles, but the directives do apply CSS classes to make it easier for you to add custom styles.\nThe available CSS classes are listed below, by directive.\n\n| Directive | CSS Class | Applied... |\n| :-- | --- | --- |\n| cdkOption | .cdk-option | Always |\n| cdkOption | .cdk-option-active | If the option is active |\n| cdkListbox | .cdk-listbox | Always |\n\nIn addition to CSS classes, these directives add aria attributes that can be targeted in CSS.\n\n| Directive | Attribute Selector | Applied... |\n| :-- | --- | --- |\n| cdkOption | \\[aria-disabled=\"true\"\\] | If the option is disabled |\n| cdkOption | \\[aria-disabled=\"false\"\\] | If the option is not disabled |\n| cdkOption | \\[aria-selected=\"true\"\\] | If the option is selected |\n| cdkOption | \\[aria-selected=\"false\"\\] | If the option is not selected |\n| cdkListbox | \\[aria-disabled=\"true\"\\] | If the listbox is disabled |\n| cdkListbox | \\[aria-disabled=\"false\"\\] | If the listbox is not disabled |\n| cdkListbox | \\[aria-multiselectable=\"true\"\\] | If the listbox is multiple selection |\n| cdkListbox | \\[aria-multiselectable=\"false\"\\] | If the listbox is single selection |\n| cdkListbox | \\[aria-orientation=\"horizontal\"\\] | If the listbox is oriented horizontally |\n| cdkListbox | \\[aria-orientation=\"vertical\"\\] | If the listbox is oriented vertically |\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#getting-started)  Getting started\n\nImport the `CdkListboxModule` into the `NgModule` in which you want to create a listbox. You can\nthen apply listbox directives to build your custom listbox. A typical listbox consists of the\nfollowing directives:\n\n- `cdkListbox` \\- Added to the container element containing the options to be selected\n- `cdkOption` \\- Added to each selectable option in the listbox\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-fav-color-label\">\n  Favorite color\n</label>\n<ul cdkListbox\n    aria-labelledby=\"example-fav-color-label\"\n    class=\"example-listbox\">\n  <li cdkOption=\"red\" class=\"example-option\">Red</li>\n  <li cdkOption=\"green\" class=\"example-option\">Green</li>\n  <li cdkOption=\"blue\" class=\"example-option\">Blue</li>\n</ul>\n```\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#option-values)  Option values\n\nEach option in a listbox is bound to the value it represents when selected, e.g.\n`<li cdkOption=\"red\">Red</li>`. Within a single listbox, each option must have a unique value. If\nan option is not explicitly given a value, its value is considered to be `''` (empty string), e.g.\n`<li cdkOption>No color preference</li>`.\n\ncontent\\_copy\n\n```\n<li cdkOption=\"red\" class=\"example-option\">Red</li>\n```\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#single-vs-multiple-selection)  Single vs multiple selection\n\nListboxes only support a single selected option at a time by default, but adding\n`cdkListboxMultiple` will enable selecting more than one option.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-fav-cuisine-label\">\n  Favorite cuisines\n</label>\n<ul cdkListbox\n    cdkListboxMultiple\n    aria-labelledby=\"example-fav-cuisine-label\"\n    class=\"example-listbox\">\n  <li cdkOption=\"chinese\" class=\"example-option\">Chinese</li>\n  <li cdkOption=\"french\" class=\"example-option\">French</li>\n  <li cdkOption=\"italian\" class=\"example-option\">Italian</li>\n  <li cdkOption=\"japanese\" class=\"example-option\">Japanese</li>\n</ul>\n```\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#listbox-value)  Listbox value\n\nThe listbox's value is an array containing the values of the selected option(s). This is true even\nfor the single selection listbox, whose value is an array containing a single element. The listbox's\nvalue can be bound using `[cdkListboxValue]` and `(cdkListboxValueChange)`.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-starter-pokemon-label\">\n  Starter Pokemon\n</label>\n<ul cdkListbox\n    [cdkListboxValue]=\"starter\"\n    (cdkListboxValueChange)=\"starter = $event.value\"\n    aria-labelledby=\"example-starter-pokemon-label\"\n    class=\"example-listbox\">\n  @for (pokemon of starters; track pokemon) {\n    <li [cdkOption]=\"pokemon\" class=\"example-option\">{{pokemon}}</li>\n  }\n</ul>\n```\n\nInternally the listbox compares the listbox value against the individual option values using\n`Object.is` to determine which options should appear selected. If your option values are complex\nobjects, you should provide a custom comparison function instead. This can be set via the\n`cdkListboxCompareWith` input on the listbox.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-appointment-label\">\n  Appointment Time\n</label>\n<ul cdkListbox\n    [cdkListboxValue]=\"appointment\"\n    [cdkListboxCompareWith]=\"compareDate\"\n    (cdkListboxValueChange)=\"appointment = $event.value\"\n    aria-labelledby=\"example-appointment-label\"\n    class=\"example-listbox\">\n  @for (time of slots; track time) {\n    <li [cdkOption]=\"time\" class=\"example-option\">{{formatTime(time)}}</li>\n  }\n</ul>\n```\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#angular-forms-support)  Angular Forms support\n\nThe CDK Listbox supports both template driven forms and reactive forms.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-toppings-label\">\n  Choose Toppings\n</label>\n<ul cdkListbox\n    cdkListboxMultiple\n    [(ngModel)]=\"order\"\n    aria-labelledby=\"example-toppings-label\"\n    class=\"example-listbox\">\n  @for (topping of toppings; track topping) {\n    <li [cdkOption]=\"topping\" class=\"example-option\">{{topping}}</li>\n  }\n</ul>\n```\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-language-label\">\n  Preferred Language\n</label>\n<ul cdkListbox\n    [formControl]=\"languageCtrl\"\n    aria-labelledby=\"example-language-label\"\n    class=\"example-listbox\">\n  @for (language of languages; track language) {\n    <li [cdkOption]=\"language\" class=\"example-option\">{{language}}</li>\n  }\n</ul>\n```\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#disabling-options)  Disabling options\n\nYou can disable options for selection by setting `cdkOptionDisabled`.\nIn addition, the entire listbox control can be disabled by setting `cdkListboxDisabled` on the\nlistbox element.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-wine-type-label\">\n  Wine Selection\n</label>\n<ul cdkListbox\n    [cdkListboxDisabled]=\"!canDrinkCtrl.value\"\n    aria-labelledby=\"example-wine-type-label\"\n    class=\"example-listbox\">\n  <li cdkOption=\"cabernet\"\n      class=\"example-option\">\n    Cabernet Sauvignon\n  </li>\n  <li cdkOption=\"syrah\"\n      class=\"example-option\">\n    Syrah\n  </li>\n  <li cdkOption=\"zinfandel\"\n      cdkOptionDisabled\n      class=\"example-option\">\n    Zinfandel <span class=\"example-sold-out\">(sold out)</span>\n  </li>\n  <li cdkOption=\"riesling\"\n      class=\"example-option\">\n    Riesling\n  </li>\n</ul>\n```\n\n### [link](https://material.angular.io/cdk/listbox/overview\\#accessibility)  Accessibility\n\nThe directives defined in `@angular/cdk/listbox` follow accessibility best practices as defined\nin the [ARIA spec](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/ \"WAI ARIA Listbox Pattern\"). Keyboard interaction is supported as defined in the\n[ARIA listbox keyboard interaction spec](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/#keyboard-interaction-11 \"WAI ARIA Listbox Keyboard Interaction\") _without_ the optional selection follows focus\nlogic (TODO: should we make this an option?).\n\n#### [link](https://material.angular.io/cdk/listbox/overview\\#listbox-label)  Listbox label\n\nAlways give the listbox a meaningful label for screen readers. If your listbox has a visual label,\nyou can associate it with the listbox using `aria-labelledby`, otherwise you should provide a\nscreen-reader-only label with `aria-label`.\n\n#### [link](https://material.angular.io/cdk/listbox/overview\\#roving-tabindex-vs-active-descendant)  Roving tabindex vs active descendant\n\nBy default, the CDK listbox uses the [roving tabindex](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets#technique_1_roving_tabindex \"MDN Roving Tabindex Technique\") strategy to manage focus.\nIf you prefer to use the [aria-activedescendant](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets#technique_2_aria-activedescendant \"MDN aria-activedescendant Technique\") strategy instead, set\n`useActiveDescendant=true` on the listbox.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-spatula-label\">\n  Spatula Features\n</label>\n<ul cdkListbox\n    cdkListboxMultiple\n    cdkListboxUseActiveDescendant\n    aria-labelledby=\"example-spatula-label\"\n    class=\"example-listbox\">\n  @for (feature of features; track feature) {\n    <li [cdkOption]=\"feature\" class=\"example-option\">{{feature}}</li>\n  }\n</ul>\n```\n\n#### [link](https://material.angular.io/cdk/listbox/overview\\#orientation)  Orientation\n\nListboxes assume a vertical orientation by default, but can be customized by setting the\n`cdkListboxOrientation` input. Note that this only affects the keyboard navigation. You\nwill still need to adjust your CSS styles to change the visual appearance.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-shirt-size-label\">\n  Shirt Size\n</label>\n<ul cdkListbox\n    cdkListboxOrientation=\"horizontal\"\n    aria-labelledby=\"example-shirt-size-label\"\n    class=\"example-listbox\">\n  @for (size of sizes; track size) {\n    <li [cdkOption]=\"size\" class=\"example-option\">{{size}}</li>\n  }\n</ul>\n```\n\n#### [link](https://material.angular.io/cdk/listbox/overview\\#option-typeahead)  Option typeahead\n\nThe CDK listbox supports typeahead based on the option text. If the typeahead text for your options\nneeds to be different than the display text (e.g. to exclude emoji), this can be accomplished by\nsetting the `cdkOptionTypeaheadLabel` on the option.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-satisfaction-label\">\n  How was your service?\n</label>\n<ul cdkListbox\n    aria-labelledby=\"example-satisfaction-label\"\n    class=\"example-listbox\">\n  <li\n      [cdkOption]=\"1\"\n      cdkOptionTypeaheadLabel=\"great\"\n      class=\"example-option\">\n    \ud83d\ude00 Great\n  </li>\n  <li [cdkOption]=\"0\"\n      cdkOptionTypeaheadLabel=\"okay\"\n      class=\"example-option\">\n    \ud83d\ude10 Okay\n  </li>\n  <li [cdkOption]=\"-1\"\n      cdkOptionTypeaheadLabel=\"bad\"\n      class=\"example-option\">\n    \ud83d\ude41 Bad\n  </li>\n</ul>\n```\n\n#### [link](https://material.angular.io/cdk/listbox/overview\\#keyboard-navigation-options)  Keyboard navigation options\n\nWhen using keyboard navigation to navigate through the options, the navigation wraps when attempting\nto navigate past the start or end of the options. To change this, set\n`cdkListboxNavigationWrapDisabled` on the listbox.\n\nKeyboard navigation skips disabled options by default. To change this set\n`cdkListboxNavigatesDisabledOptions` on the listbox.\n\ncontent\\_copy\n\n```\n<label class=\"example-listbox-label\" id=\"example-flavor-label\">\n  Flavor\n</label>\n<ul cdkListbox\n    cdkListboxNavigatesDisabledOptions\n    cdkListboxNavigationWrapDisabled\n    aria-labelledby=\"example-flavor-label\"\n    class=\"example-listbox\">\n  <li cdkOption=\"chocolate\"\n      class=\"example-option\">\n    Chocolate\n  </li>\n  <li cdkOption=\"pumpkin-spice\"\n      cdkOptionDisabled\n      class=\"example-option\">\n    Pumpkin Spice (seasonal)\n  </li>\n  <li cdkOption=\"strawberry\"\n      class=\"example-option\">\n    Strawberry\n  </li>\n  <li cdkOption=\"vanilla\"\n      class=\"example-option\">\n    Vanilla\n  </li>\n</ul>\n```\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy snippet\n\nView full example",
  "title": "Listbox | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/listbox/overview"
}