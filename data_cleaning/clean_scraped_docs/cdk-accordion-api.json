{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\nAPI for accordion\n\n## API reference for Angular CDK accordion\n\n`\n          import {CdkAccordionModule} from '@angular/cdk/accordion';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/cdk/accordion/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/cdk/accordion/api\\#CdkAccordionItem) `CdkAccordionItem`\n\nA basic directive expected to be extended and decorated as a component. Sets up all\nevents and attributes needed to be managed by a CdkAccordion parent.\n\nSelector:cdk-accordion-item\\[cdkAccordionItem\\]\n\nExported as:cdkAccordionItem\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input({ transform: booleanAttribute })<br> <br>`disabled: boolean` | Whether the AccordionItem is disabled. |\n| @Input({ transform: booleanAttribute })<br> <br>`expanded: boolean` | Whether the AccordionItem is expanded. |\n| @Output()<br>`closed: EventEmitter<void>` | Event emitted every time the AccordionItem is closed. |\n| @Output()<br>`destroyed: EventEmitter<void>` | Event emitted when the AccordionItem is destroyed. |\n| @Output()<br>`opened: EventEmitter<void>` | Event emitted every time the AccordionItem is opened. |\n| `accordion: inject<CdkAccordion>(CDK_ACCORDION, { optional: true, skipSelf: true })!` |  |\n| `id: string` | The unique AccordionItem id. |\n\n##### Methods\n\n| close |\n| --- |\n| Sets the expanded state of the accordion item to false. |\n\n| open |\n| --- |\n| Sets the expanded state of the accordion item to true. |\n\n| toggle |\n| --- |\n| Toggles the expanded state of the accordion item. |\n\n#### [link](https://material.angular.io/cdk/accordion/api\\#CdkAccordion) `CdkAccordion`\n\nDirective whose purpose is to manage the expanded state of CdkAccordionItem children.\n\nSelector:cdk-accordion\\[cdkAccordion\\]\n\nExported as:cdkAccordion\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input({ transform: booleanAttribute })<br> <br>`multi: boolean` | Whether the accordion should allow multiple expanded accordion items simultaneously. |\n| `id: string` | A readonly id value to use for unique selection coordination. |\n\n##### Methods\n\n| closeAll |\n| --- |\n| Closes all enabled accordion items. |\n\n| openAll |\n| --- |\n| Opens all enabled accordion items in an accordion where multi is enabled. |\n\n### [link](https://material.angular.io/cdk/accordion/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/cdk/accordion/api\\#CDK_ACCORDION) `CDK_ACCORDION`\n\nInjection token that can be used to reference instances of `CdkAccordion`. It serves\nas alternative token to the actual `CdkAccordion` class which could cause unnecessary\nretention of the class and its directive metadata.\n\n```docs-markdown-code\nconst CDK_ACCORDION: InjectionToken<CdkAccordion>;\n\n```\n\nAccordion\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
  "title": "Accordion | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/accordion/api"
}