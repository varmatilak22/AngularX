{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\nAPI for stepper\n\n## API reference for Angular CDK stepper\n\n`\n          import {CdkStepperModule} from '@angular/cdk/stepper';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/cdk/stepper/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#CdkStep) `CdkStep`\n\nSelector:cdk-step\n\nExported as:cdkStep\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input('aria-label')<br> <br>`ariaLabel: string` | Aria label for the tab. |\n| @Input('aria-labelledby')<br> <br>`ariaLabelledby: string` | Reference to the element that the tab is labelled by.<br>Will be cleared if `aria-label` is set at the same time. |\n| @Input({ transform: booleanAttribute })<br> <br>`completed: boolean` | Whether step is marked as completed. |\n| @Input({ transform: booleanAttribute })<br> <br>`editable: boolean` | Whether the user can return to this step once it has been marked as completed. |\n| @Input()<br>`errorMessage: string` | Error message to display when there's an error. |\n| @Input({ transform: booleanAttribute })<br> <br>`hasError: boolean` | Whether step has an error. |\n| @Input()<br>`label: string` | Plain text label of the step. |\n| @Input({ transform: booleanAttribute })<br> <br>`optional: boolean` | Whether the completion of step is optional. |\n| @Input()<br>`state: StepState` | State of the step. |\n| @Input()<br>`stepControl: AbstractControl` | The top level abstract control of the step. |\n| @Output('interacted')<br> <br>`interactedStream: EventEmitter<CdkStep>` | Emits when the user has attempted to move away from the step. |\n| `content: TemplateRef<any>` | Template for step content. |\n| `interacted: false` | Whether user has attempted to move away from the step. |\n| `stepLabel: CdkStepLabel` | Template for step label if it exists. |\n\n##### Methods\n\n| reset |\n| --- |\n| Resets the step to its initial state. Note that this includes resetting form data. |\n\n| select |\n| --- |\n| Selects this step component. |\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#CdkStepper) `CdkStepper`\n\nSelector:\\[cdkStepper\\]\n\nExported as:cdkStepper\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input({ transform: booleanAttribute })<br> <br>`linear: boolean` | Whether the validity of previous steps should be checked or not. |\n| @Input()<br>`orientation: StepperOrientation` | Orientation of the stepper. |\n| @Input()<br>`selected: CdkStep | undefined` | The step that is selected. |\n| @Input({ transform: numberAttribute })<br> <br>`selectedIndex: number` | The index of the selected step. |\n| @Output()<br>`selectedIndexChange: EventEmitter<number>` | Output to support two-way binding on `[(selectedIndex)]` |\n| @Output()<br>`selectionChange: EventEmitter<StepperSelectionEvent>` | Event emitted when the selected step has changed. |\n| `steps: QueryList<CdkStep>` | Steps that belong to the current stepper, excluding ones from nested steppers. |\n\n##### Methods\n\n| next |\n| --- |\n| Selects and focuses the next step in list. |\n\n| previous |\n| --- |\n| Selects and focuses the previous step in list. |\n\n| reset |\n| --- |\n| Resets the stepper to its initial state. Note that this includes clearing form data. |\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#CdkStepLabel) `CdkStepLabel`\n\nSelector:\\[cdkStepLabel\\]\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `template: inject<TemplateRef<any>>(TemplateRef)` |  |\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#CdkStepperNext) `CdkStepperNext`\n\nButton that moves to the next step in a stepper workflow.\n\nSelector:button\\[cdkStepperNext\\]\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input()<br>`type: string` | Type of the next button. Defaults to \"submit\" if not specified. |\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#CdkStepperPrevious) `CdkStepperPrevious`\n\nButton that moves to the previous step in a stepper workflow.\n\nSelector:button\\[cdkStepperPrevious\\]\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input()<br>`type: string` | Type of the previous button. Defaults to \"button\" if not specified. |\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#CdkStepHeader) `CdkStepHeader`\n\nSelector:\\[cdkStepHeader\\]\n\n##### Methods\n\n| focus |\n| --- |\n| Focuses the step header. |\n\n### [link](https://material.angular.io/cdk/stepper/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#StepperSelectionEvent) `StepperSelectionEvent`\n\nChange event emitted on selection changes.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `previouslySelectedIndex: number` | Index of the step previously selected. |\n| `previouslySelectedStep: CdkStep` | The step instance previously selected. |\n| `selectedIndex: number` | Index of the step now selected. |\n| `selectedStep: CdkStep` | The step instance now selected. |\n\n### [link](https://material.angular.io/cdk/stepper/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#StepperOptions) `StepperOptions`\n\nConfigurable options for stepper.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `displayDefaultIndicatorType: boolean` | Whether the stepper should display the default indicator type<br>or not.<br>Default behavior is assumed to be true. |\n| `showError: boolean` | Whether the stepper should display an error state or not.<br>Default behavior is assumed to be false. |\n\n### [link](https://material.angular.io/cdk/stepper/api\\#type_aliases)  Type aliases\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#StepContentPositionState) `StepContentPositionState`\n\nPosition state of the content of each step in stepper that is used for transitioning\nthe content into correct position upon step selection change.\n\n```docs-markdown-code\ntype StepContentPositionState = 'previous' | 'current' | 'next';\n\n```\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#StepperOrientation) `StepperOrientation`\n\nPossible orientation of a stepper.\n\n```docs-markdown-code\ntype StepperOrientation = 'horizontal' | 'vertical';\n\n```\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#StepState) `StepState`\n\nThe state of each step.\n\n```docs-markdown-code\ntype StepState = 'number' | 'edit' | 'done' | 'error' | string;\n\n```\n\n### [link](https://material.angular.io/cdk/stepper/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#STEP_STATE) `STEP_STATE`\n\nEnum to represent the different states of the steps.\n\n```docs-markdown-code\nconst STEP_STATE: { NUMBER: string; EDIT: string; DONE: string; ERROR: string; };\n\n```\n\n#### [link](https://material.angular.io/cdk/stepper/api\\#STEPPER_GLOBAL_OPTIONS) `STEPPER_GLOBAL_OPTIONS`\n\nInjectionToken that can be used to specify the global stepper options.\n\n```docs-markdown-code\nconst STEPPER_GLOBAL_OPTIONS: InjectionToken<StepperOptions>;\n\n```\n\nStepper\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
  "title": "Stepper | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/stepper/api"
}