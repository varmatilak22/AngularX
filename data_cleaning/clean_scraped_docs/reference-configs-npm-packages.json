{
  "content": "Skip to main content\n\nmenu\n\nmenuAPI\n\n- [Roadmap](https://angular.dev/roadmap)\n- [Get involved](https://github.com/angular/angular/blob/main/CONTRIBUTING.md)\n- API Reference\n- CLI Reference\n- Error Encyclopedia\n- Extended Diagnostics\n- [Versioning and releases](https://angular.dev/reference/releases)\n- [Version compatibility](https://angular.dev/reference/versions)\n- [Update guide](https://angular.dev/update-guide)\n- Configurations\n- Migrations\n\n- arrow\\_backConfigurations\n  - [File structure](https://angular.dev/reference/configs/file-structure)\n  - [Workspace configuration](https://angular.dev/reference/configs/workspace-config)\n  - [Angular compiler options](https://angular.dev/reference/configs/angular-compiler-options)\n  - [npm dependencies](https://angular.dev/reference/configs/npm-packages)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nThe Angular Framework, Angular CLI, and components used by Angular applications are packaged as [npm packages](https://docs.npmjs.com/getting-started/what-is-npm \"What\") and distributed using the [npm registry](https://docs.npmjs.com/).\n\nYou can download and install these npm packages by using the [npm CLI client](https://docs.npmjs.com/cli/install).\nBy default, Angular CLI uses the npm client.\n\n**HELPFUL:** See [Local Environment Setup](https://angular.dev/reference/configs/tools/cli/setup-local \"Setting\") for information about the required versions and installation of `Node.js` and `npm`.\n\nIf you already have projects running on your machine that use other versions of Node.js and npm, consider using [nvm](https://github.com/creationix/nvm) to manage the multiple versions of Node.js and npm.\n\n## [`package.json`](https://angular.dev/reference/configs/npm-packages\\#packagejson)\n\n`npm` installs the packages identified in a [`package.json`](https://docs.npmjs.com/files/package.json) file.\n\nThe CLI command `ng new` creates a `package.json` file when it creates the new workspace.\nThis `package.json` is used by all projects in the workspace, including the initial application project that is created by the CLI when it creates the workspace.\nLibraries created with `ng generate library` will include their own `package.json` file.\n\nInitially, this `package.json` includes _a starter set of packages_, some of which are required by Angular and others that support common application scenarios.\nYou add packages to `package.json` as your application evolves.\n\n## [Default Dependencies](https://angular.dev/reference/configs/npm-packages\\#default-dependencies)\n\nThe following Angular packages are included as dependencies in the default `package.json` file for a new Angular workspace.\nFor a complete list of Angular packages, see the [API reference](https://angular.dev/reference/configs/api).\n\n| Package name | Details |\n| :-- | :-- |\n| [`@angular/animations`](https://angular.dev/reference/configs/api#animations) | Angular's animations library makes it easy to define and apply animation effects such as page and list transitions. For more information, see the [Animations guide](https://angular.dev/reference/configs/guide/animations). |\n| [`@angular/common`](https://angular.dev/reference/configs/api#common) | The commonly-needed services, pipes, and directives provided by the Angular team. |\n| `@angular/compiler` | Angular's template compiler. It understands Angular templates and can convert them to code that makes the application run. |\n| `@angular/compiler-cli` | Angular's compiler which is invoked by the Angular CLI's `ng build` and `ng serve` commands. It processes Angular templates with `@angular/compiler` inside a standard TypeScript compilation. |\n| [`@angular/core`](https://angular.dev/reference/configs/api#core) | Critical runtime parts of the framework that are needed by every application. Includes all metadata decorators such as `@Component`, dependency injection, and component lifecycle hooks. |\n| [`@angular/forms`](https://angular.dev/reference/configs/api#forms) | Support for both [template-driven](https://angular.dev/reference/configs/guide/forms) and [reactive forms](https://angular.dev/reference/configs/guide/forms/reactive-forms). See [Introduction to forms](https://angular.dev/reference/configs/guide/forms). |\n| [`@angular/platform-browser`](https://angular.dev/reference/configs/api#platform-browser) | Everything DOM and browser related, especially the pieces that help render into the DOM. |\n| [`@angular/platform-browser-dynamic`](https://angular.dev/reference/configs/api#platform-browser-dynamic) | Includes [providers](https://angular.dev/reference/configs/api/core/Provider) and methods to compile and run the application on the client using the [JIT compiler](https://angular.dev/reference/configs/tools/cli/aot-compiler#choosing-a-compiler). |\n| [`@angular/router`](https://angular.dev/reference/configs/api#router) | The router module navigates among your application pages when the browser URL changes. For more information, see [Routing and Navigation](https://angular.dev/reference/configs/guide/routing). |\n| [`@angular/cli`](https://github.com/angular/angular-cli) | Contains the Angular CLI binary for running `ng` commands. |\n| [`@angular-devkit/build-angular`](https://github.com/angular/angular-cli) | Contains default CLI builders for bundling, testing, and serving Angular applications and libraries. |\n| `rxjs` | A library for reactive programming using `Observables`. |\n| [`zone.js`](https://github.com/angular/zone.js) | Angular relies on \\`zone.js\\`\\` to run Angular's change detection processes when native JavaScript operations raise events. |\n| [`typescript`](https://www.npmjs.com/package/typescript) | The TypeScript compiler, language server, and built-in type definitions. |",
  "title": "npm dependencies \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "angular",
    "https",
    "reference",
    "dev",
    "configs",
    "cli",
    "npm",
    "api",
    "com",
    "compiler"
  ],
  "sourceURL": "https://angular.dev/reference/configs/npm-packages"
}