{
  "content": "Skip to main content\n\nmenu\n\nmenuDocs\n\n- Introduction\n\n  - [What is Angular?](https://angular.dev/overview)\n  - [Installation](https://angular.dev/installation)\n  - Essentials\n  - [Start coding! \ud83d\ude80](https://angular.dev/tutorials/learn-angular)\n- In-depth Guides\n\n  - Signals\n  - Components\n  - Templates\n  - Directives\n  - Dependency Injection\n  - Routing\n  - Forms\n  - HTTP Client\n  - Server-side & hybrid-rendering\n  - Testing\n  - Internationalization\n  - Experimental features\n- Developer Tools\n\n  - Angular CLI\n  - Libraries\n  - [DevTools](https://angular.dev/tools/devtools)\n  - [Language Service](https://angular.dev/tools/language-service)\n- Best Practices\n\n  - [Style Guide](https://angular.dev/style-guide)\n  - [Security](https://angular.dev/best-practices/security)\n  - [Accessibility](https://angular.dev/best-practices/a11y)\n  - Performance\n  - [Keeping up-to-date](https://angular.dev/update)\n- Extended Ecosystem\n\n  - [NgModules](https://angular.dev/guide/ngmodules/overview)\n  - Animations\n  - Using RxJS with Angular\n  - Service Workers & PWAs\n  - [Web workers](https://angular.dev/ecosystem/web-workers)\n  - [Custom build pipeline](https://angular.dev/ecosystem/custom-build-pipeline)\n  - [Angular Fire](https://github.com/angular/angularfire#readme)\n  - [Google Maps](https://github.com/angular/components/tree/main/src/google-maps#readme)\n  - [Google Pay](https://github.com/google-pay/google-pay-button#angular)\n  - [YouTube player](https://github.com/angular/components/blob/main/src/youtube-player/README.md)\n  - [Angular CDK](https://material.angular.io/cdk/categories)\n  - [Angular Material](https://material.angular.io/)\n\n- arrow\\_backDependency Injection\n  - [Overview](https://angular.dev/guide/di)\n  - [Understanding dependency injection](https://angular.dev/guide/di/dependency-injection)\n  - [Creating an injectable service](https://angular.dev/guide/di/creating-injectable-service)\n  - [Defining dependency providers](https://angular.dev/guide/di/dependency-injection-providers)\n  - [Injection context](https://angular.dev/guide/di/dependency-injection-context)\n  - [Hierarchical injectors](https://angular.dev/guide/di/hierarchical-dependency-injection)\n  - [Optimizing injection tokens](https://angular.dev/guide/di/lightweight-injection-tokens)\n  - [DI in action](https://angular.dev/guide/di/di-in-action)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nIn-depth Guides\n\nDependency Injection\n\n# Dependency injection in Angular\n\n[edit](https://github.com/angular/angular/edit/main/adev/src/content/guide/di/overview.md \"Edit this page\")\n\n\"DI\" is a design pattern and mechanism for creating and delivering some parts of an app to other parts of an app that require them.\n\n**TIP:** Check out Angular's [Essentials](https://angular.dev/guide/essentials/dependency-injection) before diving into this comprehensive guide.\n\nWhen you develop a smaller part of your system, like a module or a class, you may need to use features from other classes. For example, you may need an HTTP service to make backend calls. Dependency Injection, or DI, is a design pattern and mechanism for creating and delivering some parts of an application to other parts of an application that require them. Angular supports this design pattern and you can use it in your applications to increase flexibility and modularity.\n\nIn Angular, dependencies are typically services, but they also can be values, such as strings or functions. An injector for an application (created automatically during bootstrap) instantiates dependencies when needed, using a configured provider of the service or value.\n\n## [Learn about Angular dependency injection](https://angular.dev/guide/di\\#learn-about-angular-dependency-injection)\n\n[**Understanding dependency injection** \\\\\n\\\\\nLearn basic principles of dependency injection in Angular.\\\\\n\\\\\nLearn more](https://angular.dev/guide/di/dependency-injection) [**Creating and injecting service** \\\\\n\\\\\nDescribes how to create a service and inject it in other services and components.\\\\\n\\\\\nLearn more](https://angular.dev/guide/di/creating-injectable-service) [**Configuring dependency providers** \\\\\n\\\\\nDescribes how to configure dependencies using the providers field on the @Component and @NgModule decorators. Also describes how to use InjectionToken to provide and inject values in DI, which can be helpful when you want to use a value other than classes as dependencies.\\\\\n\\\\\nLearn more](https://angular.dev/guide/di/dependency-injection-providers) [**Injection context** \\\\\n\\\\\nDescribes what an injection context is and how to use the DI system where you need it.\\\\\n\\\\\nLearn more](https://angular.dev/guide/di/dependency-injection-context) [**Hierarchical injectors** \\\\\n\\\\\nHierarchical DI enables you to share dependencies between different parts of the application only when and if you need to. This is an advanced topic.\\\\\n\\\\\nLearn more](https://angular.dev/guide/di/hierarchical-dependency-injection)",
  "title": "Dependency Injection \u2022 Overview \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "angular",
    "https",
    "dev",
    "injection",
    "di",
    "dependency",
    "guide",
    "learn",
    "service",
    "google"
  ],
  "sourceURL": "https://angular.dev/guide/di"
}