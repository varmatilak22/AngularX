{
  "content": "# Installation and Code Generation\n\nAngular Material comes packaged with Angular CLI schematics to make\ncreating Material applications easier.\n\n## [link](https://material.angular.io/guide/schematics\\#install-schematics)  Install Schematics\n\nSchematics are included with both `@angular/cdk` and `@angular/material`. Once you install the npm\npackages, they will be available through the Angular CLI.\n\nUsing the command below will install Angular Material, the [Component Dev Kit](https://material.angular.io/cdk) (CDK),\nand [Angular Animations](https://angular.dev/guide/animations) in your project. Then it will run the\ninstallation schematic.\n\n```\nng add @angular/material\n\n```\n\nIn case you just want to install the `@angular/cdk`, there are also schematics for the [Component Dev Kit](https://material.angular.io/cdk)\n\n```\nng add @angular/cdk\n\n```\n\nThe Angular Material `ng add` schematic helps you set up an Angular CLI project that uses Material. Running `ng add` will:\n\n- Ensure [project dependencies](https://material.angular.io/guide/guide/getting-started#step-1-install-angular-material-angular-cdk-and-angular-animations) are placed in `package.json`\n- Add either a prebuilt theme or a custom theme\n- Add Roboto fonts to your `index.html`\n- Add the [Material Icon font](https://material.angular.io/guide/guide/getting-started#step-6-optional-add-material-icons) to your `index.html`\n- Add global styles to\n  - Remove margins from `body`\n  - Set `height: 100%` on `html` and `body`\n  - Make Roboto the default font of your app\n\n## [link](https://material.angular.io/guide/schematics\\#component-schematics)  Component schematics\n\nIn addition to the installation schematic, Angular Material comes with multiple schematics that can be\nused to easily generate Material Design components:\n\n| Name | Description |\n| --- | --- |\n| `address-form` | Component with a form group that uses Material Design form controls to prompt for a shipping address |\n| `navigation` | Creates a component with a responsive Material Design sidenav and a toolbar for showing the app name |\n| `dashboard` | Component with multiple Material Design cards and menus which are aligned in a grid layout |\n| `table` | Generates a component with a Material Design data table that supports sorting and pagination |\n| `tree` | Component that interactively visualizes a nested folder structure by using the `<mat-tree>` component |\n\nAdditionally, the Angular CDK also comes with a collection of component schematics:\n\n| Name | Description |\n| --- | --- |\n| `drag-drop` | Component that uses the `@angular/cdk/drag-drop` directives for creating an interactive to-do list |\n\n### [link](https://material.angular.io/guide/schematics\\#address-form-schematic)  Address form schematic\n\nRunning the `address-form` schematic generates a new Angular component that can be used to get\nstarted with a Material Design form group consisting of:\n\n- Material Design form fields\n- Material Design radio controls\n- Material Design buttons\n\n```\nng generate @angular/material:address-form <component-name>\n\n```\n\n### [link](https://material.angular.io/guide/schematics\\#navigation-schematic)  Navigation schematic\n\nThe `navigation` schematic will create a new component that includes\na toolbar with the app name, and a responsive side nav based on Material\nbreakpoints.\n\n```\nng generate @angular/material:navigation <component-name>\n\n```\n\n### [link](https://material.angular.io/guide/schematics\\#table-schematic)  Table schematic\n\nThe table schematic will create a component that renders an Angular Material `<table>` which has\nbeen pre-configured with a datasource for sorting and pagination.\n\n```\nng generate @angular/material:table <component-name>\n\n```\n\n### [link](https://material.angular.io/guide/schematics\\#dashboard-schematic)  Dashboard schematic\n\nThe `dashboard` schematic will create a new component that contains\na dynamic grid list of Material Design cards.\n\n```\nng generate @angular/material:dashboard <component-name>\n\n```\n\n### [link](https://material.angular.io/guide/schematics\\#tree-schematic)  Tree schematic\n\nThe `tree` schematic can be used to quickly generate an Angular component that uses the Angular\nMaterial `<mat-tree>` component to visualize a nested folder structure.\n\n```\nng generate @angular/material:tree <component-name>\n\n```\n\n### [link](https://material.angular.io/guide/schematics\\#drag-and-drop-schematic)  Drag and Drop schematic\n\nThe `drag-drop` schematic is provided by the `@angular/cdk` and can be used to generate a component\nthat uses the CDK drag and drop directives.\n\n```\nng generate @angular/cdk:drag-drop <component-name>\n\n```\n\n### [link](https://material.angular.io/guide/schematics\\#material-3-theme-schematic)  Material 3 Theme schematic\n\nThe `theme-color` schematic will generate a file with Material 3 palettes from the specified colors\nthat can be used in a theme file. It also generates high contrast color override mixins if\nspecified.\n\n```\nng generate @angular/material:theme-color\n\n```\n\nLearn more about this schematic in its [documentation](https://github.com/angular/components/blob/main/src/material/schematics/ng-generate/theme-color/README.md).\n\nGuide Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation",
  "title": "Schematics | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/guide/schematics"
}