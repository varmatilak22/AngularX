{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\n## Overview for collections\n\nThe `collections` package provides a set of utilities for managing collections.\n\n### [link](https://material.angular.io/cdk/collections/overview\\#selectionmodel) `SelectionModel`\n\n`SelectionModel` is a utility for powering selection of one or more options from a list.\nThis model is used in components such as the selection list, table selections and chip lists.\n\n#### [link](https://material.angular.io/cdk/collections/overview\\#basic-usage)  Basic Usage\n\n```javascript\nconst model = new SelectionModel(\n  true,   // multiple selection or not\n  [2,1,3] // initial selected values\n);\n\n// select a value\nmodel.select(4);\nconsole.log(model.selected.length) //->  4\n\n// deselect a value\nmodel.deselect(4);\nconsole.log(model.selected.length) //->  3\n\n// toggle a value\nmodel.toggle(4);\nconsole.log(model.selected.length) //->  4\n\n// check for selection\nconsole.log(model.isSelected(4)) //-> true\n\n// sort the selections\nconsole.log(model.sort()) //-> [1,2,3,4]\n\n// listen for changes\nmodel.changed.subscribe(s => console.log(s));\n\n```\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation",
  "title": "Collections | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/collections/overview"
}