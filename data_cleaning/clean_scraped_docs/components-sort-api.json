{
  "content": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\nAPI for sort\n\n## API reference for Angular Material sort\n\n`\n          import {MatSortModule} from '@angular/material/sort';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/sort/api\\#services)  Services\n\n#### [link](https://material.angular.io/components/sort/api\\#MatSortHeaderIntl) `MatSortHeaderIntl`\n\nTo modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\ninclude it in a custom provider.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `changes: Subject<void>` | Stream that emits whenever the labels here are changed. Use this to notify<br>components if the labels have changed after initialization. |\n\n### [link](https://material.angular.io/components/sort/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/components/sort/api\\#MatSortHeader) `MatSortHeader`\n\nApplies sorting behavior (click to change sort) and styles to an element, including an\narrow to display the current sort direction.\n\nMust be provided with an id and contained within a parent MatSort directive.\n\nIf used on header cells in a CdkTable, it will automatically default its id from its containing\ncolumn definition.\n\nSelector:\\[mat-sort-header\\]\n\nExported as:matSortHeader\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input()<br>`arrowPosition: SortHeaderArrowPosition` | Sets the position of the arrow that displays when sorted. |\n| @Input({ transform: booleanAttribute })<br> <br>`disableClear: boolean` | Overrides the disable clear value of the containing MatSort for this MatSortable. |\n| @Input({ transform: booleanAttribute })<br> <br>`disabled: boolean` | whether the sort header is disabled. |\n| @Input('mat-sort-header')<br> <br>`id: string` | ID of this sort header. If used within the context of a CdkColumnDef, this will default to<br>the column's name. |\n| @Input()<br>`sortActionDescription: string` | Description applied to MatSortHeader's button element with aria-describedby. This text should<br>describe the action that will occur when the user clicks the sort header. |\n| @Input()<br>`start: SortDirection` | Overrides the sort start value of the containing MatSort for this MatSortable. |\n\n#### [link](https://material.angular.io/components/sort/api\\#MatSort) `MatSort`\n\nContainer for MatSortables to manage the sort state and provide default sort parameters.\n\nSelector:\\[matSort\\]\n\nExported as:matSort\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input('matSortActive')<br> <br>`active: string` | The id of the most recently sorted MatSortable. |\n| @Input('matSortDirection')<br> <br>`direction: SortDirection` | The sort direction of the currently active MatSortable. |\n| @Input({ alias: 'matSortDisableClear', transform: booleanAttribute })<br> <br>`disableClear: boolean` | Whether to disable the user from clearing the sort by finishing the sort direction cycle.<br>May be overridden by the MatSortable's disable clear input. |\n| @Input({ alias: 'matSortDisabled', transform: booleanAttribute })<br> <br>`disabled: boolean` | Whether the sortable is disabled. |\n| @Input('matSortStart')<br> <br>`start: SortDirection` | The direction to set when an MatSortable is initially sorted.<br>May be overridden by the MatSortable's sort start. |\n| @Output('matSortChange')<br> <br>`sortChange: EventEmitter<Sort>` | Event emitted when the user changes either the active sort or sort direction. |\n| `initialized: Observable<void>` | Emits when the paginator is initialized. |\n| `sortables: Map<string, MatSortable>` | Collection of all registered sortables that this directive manages. |\n\n##### Methods\n\n| deregister |\n| --- |\n| Unregister function to be used by the contained MatSortables. Removes the MatSortable from the<br>collection of contained MatSortables. |\n| Parameters |\n| --- |\n| sortable<br> `MatSortable` |  |\n\n| getNextSortDirection |\n| --- |\n| Returns the next sort direction of the active sortable, checking for potential overrides. |\n| Parameters |\n| --- |\n| sortable<br> `MatSortable` |  |\n| Returns |\n| --- |\n| `SortDirection` |  |\n\n| register |\n| --- |\n| Register function to be used by the contained MatSortables. Adds the MatSortable to the<br>collection of MatSortables. |\n| Parameters |\n| --- |\n| sortable<br> `MatSortable` |  |\n\n| sort |\n| --- |\n| Sets the active sort id and determines the new sort direction. |\n| Parameters |\n| --- |\n| sortable<br> `MatSortable` |  |\n\n### [link](https://material.angular.io/components/sort/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/sort/api\\#MatSortable) `MatSortable`\n\nInterface for a directive that holds sorting state consumed by `MatSortHeader`.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `disableClear: boolean` | Whether to disable clearing the sorting state. |\n| `id: string` | The id of the column being sorted. |\n| `start: SortDirection` | Starting sort direction. |\n\n#### [link](https://material.angular.io/components/sort/api\\#Sort) `Sort`\n\nThe current sort state.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `active: string` | The id of the column being sorted. |\n| `direction: SortDirection` | The sort direction. |\n\n#### [link](https://material.angular.io/components/sort/api\\#MatSortDefaultOptions) `MatSortDefaultOptions`\n\nDefault options for `mat-sort`.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `arrowPosition: SortHeaderArrowPosition` | Position of the arrow that displays when sorted. |\n| `disableClear: boolean` | Whether to disable clearing the sorting state. |\n\n### [link](https://material.angular.io/components/sort/api\\#type_aliases)  Type aliases\n\n#### [link](https://material.angular.io/components/sort/api\\#SortDirection) `SortDirection`\n\n```docs-markdown-code\ntype SortDirection = 'asc' | 'desc' | '';\n\n```\n\n#### [link](https://material.angular.io/components/sort/api\\#SortHeaderArrowPosition) `SortHeaderArrowPosition`\n\nPosition of the arrow that displays when sorted.\n\n```docs-markdown-code\ntype SortHeaderArrowPosition = 'before' | 'after';\n\n```\n\n### [link](https://material.angular.io/components/sort/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/components/sort/api\\#MAT_SORT_DEFAULT_OPTIONS) `MAT_SORT_DEFAULT_OPTIONS`\n\nInjection token to be used to override the default options for `mat-sort`.\n\n```docs-markdown-code\nconst MAT_SORT_DEFAULT_OPTIONS: InjectionToken<MatSortDefaultOptions>;\n\n```\n\n## API reference for Angular Material sort-testing\n\n`\n          import {MatSortHarness} from '@angular/material/sort/testing';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/sort/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/components/sort/api\\#MatSortHarness) `MatSortHarness`extends [ComponentHarness](https://material.angular.io/components/sort/cdk/testing/api\\#ComponentHarness)\n\nHarness for interacting with a standard `mat-sort` in tests.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `static\u00a0hostSelector: '.mat-sort'` |  |\n\n##### Methods\n\n| async<br> <br>getActiveHeader |\n| --- |\n| Gets the selected header in the `mat-sort`. |\n| Returns |\n| --- |\n| `Promise<MatSortHeaderHarness | null>` |  |\n\n| async<br> <br>getSortHeaders |\n| --- |\n| Gets all of the sort headers in the `mat-sort`. |\n| Parameters |\n| --- |\n| filter<br> `SortHeaderHarnessFilters = {}` |  |\n| Returns |\n| --- |\n| `Promise<MatSortHeaderHarness[]>` |  |\n\n| async<br> <br>host |\n| --- |\n| Gets a `Promise` for the `TestElement` representing the host element of the component. |\n| Returns |\n| --- |\n| `Promise<TestElement>` |  |\n\n| static<br> <br>with |\n| --- |\n| Gets a `HarnessPredicate` that can be used to search for a `mat-sort` with specific attributes. |\n| Parameters |\n| --- |\n| options<br> `SortHarnessFilters = {}` | Options for narrowing the search. |\n| Returns |\n| --- |\n| `HarnessPredicate<MatSortHarness>` | a `HarnessPredicate` configured with the given options. |\n\n#### [link](https://material.angular.io/components/sort/api\\#MatSortHeaderHarness) `MatSortHeaderHarness`extends [ComponentHarness](https://material.angular.io/components/sort/cdk/testing/api\\#ComponentHarness)\n\nHarness for interacting with a standard Angular Material sort header in tests.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `static\u00a0hostSelector: '.mat-sort-header'` |  |\n\n##### Methods\n\n| async<br> <br>click |\n| --- |\n| Clicks the header to change its sorting direction. Only works if the header is enabled. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| async<br> <br>getLabel |\n| --- |\n| Gets the label of the sort header. |\n| Returns |\n| --- |\n| `Promise<string>` |  |\n\n| async<br> <br>getSortDirection |\n| --- |\n| Gets the sorting direction of the header. |\n| Returns |\n| --- |\n| `Promise<SortDirection>` |  |\n\n| async<br> <br>host |\n| --- |\n| Gets a `Promise` for the `TestElement` representing the host element of the component. |\n| Returns |\n| --- |\n| `Promise<TestElement>` |  |\n\n| async<br> <br>isActive |\n| --- |\n| Gets whether the sort header is currently being sorted by. |\n| Returns |\n| --- |\n| `Promise<boolean>` |  |\n\n| async<br> <br>isDisabled |\n| --- |\n| Whether the sort header is disabled. |\n| Returns |\n| --- |\n| `Promise<boolean>` |  |\n\n| static<br> <br>with |\n| --- |\n| Gets a `HarnessPredicate` that can be used to<br>search for a sort header with specific attributes. |\n| Parameters |\n| --- |\n| options<br> `SortHeaderHarnessFilters = {}` |  |\n| Returns |\n| --- |\n| `HarnessPredicate<MatSortHeaderHarness>` |  |\n\n### [link](https://material.angular.io/components/sort/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/sort/api\\#SortHarnessFilters) `SortHarnessFilters`\n\n#### [link](https://material.angular.io/components/sort/api\\#SortHeaderHarnessFilters) `SortHeaderHarnessFilters`\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `label: string | RegExp` |  |\n| `sortDirection: SortDirection` |  |\n\nSort header\n\nTesting\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
  "title": "Sort header | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/components/sort/api"
}