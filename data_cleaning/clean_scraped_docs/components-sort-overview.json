{
  "content": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for sort\n\nThe `matSort` and `mat-sort-header` are used, respectively, to add sorting state and display\nto tabular data.\n\nSorting overview\n\nlinkcodeopen\\_in\\_new\n\n| Dessert (100g) | Calories | Fat (g) | Carbs (g) | Protein (g) |\n| --- | --- | --- | --- | --- |\n| Frozen yogurt | 159 | 6 | 24 | 4 |\n| Ice cream sandwich | 237 | 9 | 37 | 4 |\n| Eclair | 262 | 16 | 24 | 6 |\n| Cupcake | 305 | 4 | 67 | 4 |\n| Gingerbread | 356 | 16 | 49 | 4 |\n\n### [link](https://material.angular.io/components/sort/overview\\#adding-sort-to-table-headers)  Adding sort to table headers\n\nTo add sorting behavior and styling to a set of table headers, add the `<mat-sort-header>` component\nto each header and provide an `id` that will identify it. These headers should be contained within a\nparent element with the `matSort` directive, which will emit a `matSortChange` event when the user\ntriggers sorting on the header.\n\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\n`matSort` will emit a `matSortChange` event that contains the ID of the header triggered and the\ndirection to sort ( `asc` or `desc`).\n\n#### [link](https://material.angular.io/components/sort/overview\\#changing-the-sort-order)  Changing the sort order\n\nBy default, a sort header starts its sorting at `asc` and then `desc`. Triggering the sort header\nafter `desc` will remove sorting.\n\nTo reverse the sort order for all headers, set the `matSortStart` to `desc` on the `matSort`\ndirective. To reverse the order only for a specific header, set the `start` input only on the header\ninstead.\n\nTo prevent the user from clearing the sort state from an already sorted column, set\n`matSortDisableClear` to `true` on the `matSort` to affect all headers, or set `disableClear` to\n`true` on a specific header.\n\n#### [link](https://material.angular.io/components/sort/overview\\#disabling-sorting)  Disabling sorting\n\nIf you want to prevent the user from changing the sorting order of any column, you can use the\n`matSortDisabled` binding on the `mat-sort`, or the `disabled` on a single `mat-sort-header`.\n\n#### [link](https://material.angular.io/components/sort/overview\\#using-sort-with-the-mat-table)  Using sort with the mat-table\n\nWhen used on a `mat-table` header, it is not required to set a `mat-sort-header` id on because\nby default it will use the id of the column.\n\nTable with sorting\n\nlinkcodeopen\\_in\\_new\n\n| No. | Name | Weight | Symbol |\n| --- | --- | --- | --- |\n| 1 | Hydrogen | 1.0079 | H |\n| 2 | Helium | 4.0026 | He |\n| 3 | Lithium | 6.941 | Li |\n| 4 | Beryllium | 9.0122 | Be |\n| 5 | Boron | 10.811 | B |\n| 6 | Carbon | 12.0107 | C |\n| 7 | Nitrogen | 14.0067 | N |\n| 8 | Oxygen | 15.9994 | O |\n| 9 | Fluorine | 18.9984 | F |\n| 10 | Neon | 20.1797 | Ne |\n\n### [link](https://material.angular.io/components/sort/overview\\#accessibility)  Accessibility\n\nWhen you apply `MatSortHeader` to a header cell element, the component wraps the content of the\nheader cell inside a button. The text content of the header cell then becomes the accessible\nlabel for the sort button. However, the header cell text typically describes the column and does\nnot indicate that interacting with the control performs a sorting action. To clearly communicate\nthat the header performs sorting, always use the `sortActionDescription` input to provide a\ndescription for the button element, such as \"Sort by last name\".\n\n`MatSortHeader` applies the `aria-sort` attribute to communicate the active sort state to\nassistive technology. However, most screen readers do not announce changes to the value of\n`aria-sort`, meaning that screen reader users do not receive feedback that sorting occurred. To\nremedy this, use the `matSortChange` event on the `MatSort` directive to announce state\nupdates with the `LiveAnnouncer` service from `@angular/cdk/a11y`.\n\nIf your application contains many tables and sort headers, consider creating a custom\ndirectives to consistently apply `sortActionDescription` and announce sort state changes.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Sorting overview example in StackBlitz\n\nCopy link to example\n\nView code\n\nEdit Table with sorting example in StackBlitz\n\nSort\n\nSort by number\n\nSort by name\n\nSort by weight\n\nSort by symbol",
  "title": "Sort header | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/components/sort/overview"
}