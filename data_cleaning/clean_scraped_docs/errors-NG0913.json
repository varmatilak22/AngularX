{
  "content": "Skip to main content\n\nmenu\n\nmenuAPI\n\n- [Roadmap](https://angular.dev/roadmap)\n- [Get involved](https://github.com/angular/angular/blob/main/CONTRIBUTING.md)\n- API Reference\n- CLI Reference\n- Error Encyclopedia\n- Extended Diagnostics\n- [Versioning and releases](https://angular.dev/reference/releases)\n- [Version compatibility](https://angular.dev/reference/versions)\n- [Update guide](https://angular.dev/update-guide)\n- Configurations\n- Migrations\n\n- arrow\\_backError Encyclopedia\n  - [Overview](https://angular.dev/errors)\n  - [NG0100: Expression Changed After Checked](https://angular.dev/errors/NG0100)\n  - [NG01101: Wrong Async Validator Return Type](https://angular.dev/errors/NG01101)\n  - [NG01203: Missing value accessor](https://angular.dev/errors/NG01203)\n  - [NG0200: Circular Dependency in DI](https://angular.dev/errors/NG0200)\n  - [NG0201: No Provider Found](https://angular.dev/errors/NG0201)\n  - [NG0203: \\`inject()\\` must be called from an injection context](https://angular.dev/errors/NG0203)\n  - [NG0209: Invalid multi provider](https://angular.dev/errors/NG0209)\n  - [NG02200: Missing Iterable Differ](https://angular.dev/errors/NG02200)\n  - [NG02800: JSONP support in HttpClient configuration](https://angular.dev/errors/NG02800)\n  - [NG0300: Selector Collision](https://angular.dev/errors/NG0300)\n  - [NG0301: Export Not Found](https://angular.dev/errors/NG0301)\n  - [NG0302: Pipe Not Found](https://angular.dev/errors/NG0302)\n  - [NG0403: Bootstrapped NgModule doesn't specify which component to initialize](https://angular.dev/errors/NG0403)\n  - [NG0500: Hydration Node Mismatch](https://angular.dev/errors/NG0500)\n  - [NG05000: Hydration with unsupported Zone.js instance](https://angular.dev/errors/NG05000)\n  - [NG0501: Hydration Missing Siblings](https://angular.dev/errors/NG0501)\n  - [NG0502: Hydration Missing Node](https://angular.dev/errors/NG0502)\n  - [NG0503: Hydration Unsupported Projection of DOM Nodes](https://angular.dev/errors/NG0503)\n  - [NG0504: Skip hydration flag is applied to an invalid node](https://angular.dev/errors/NG0504)\n  - [NG0505: No hydration info in server response](https://angular.dev/errors/NG0505)\n  - [NG0506: Application remains unstable](https://angular.dev/errors/NG0506)\n  - [NG0507: HTML content was altered after server-side rendering](https://angular.dev/errors/NG0507)\n  - [NG05104: Root element was not found](https://angular.dev/errors/NG05104)\n  - [NG0602: Disallowed function call inside reactive context](https://angular.dev/errors/NG0602)\n  - [NG0750: @defer dependencies failed to load](https://angular.dev/errors/NG0750)\n  - [NG0751: @defer behavior when HMR is enabled](https://angular.dev/errors/NG0751)\n  - [NG0910: Unsafe bindings on an iframe element](https://angular.dev/errors/NG0910)\n  - [NG0912: Component ID generation collision](https://angular.dev/errors/NG0912)\n  - [NG0913: Runtime Performance Warnings](https://angular.dev/errors/NG0913)\n  - [NG0950: Required input is accessed before a value is set.](https://angular.dev/errors/NG0950)\n  - [NG0951: Child query result is required but no value is available.](https://angular.dev/errors/NG0951)\n  - [NG0955: Track expression resulted in duplicated keys for a given collection.](https://angular.dev/errors/NG0955)\n  - [NG0956: Tracking expression caused re-creation of the DOM structure.](https://angular.dev/errors/NG0956)\n  - [NG1001: Argument Not Literal](https://angular.dev/errors/NG1001)\n  - [NG2003: Missing Token](https://angular.dev/errors/NG2003)\n  - [NG2009: Invalid Shadow DOM selector](https://angular.dev/errors/NG2009)\n  - [NG3003: Import Cycle Detected](https://angular.dev/errors/NG3003)\n  - [NG6100: NgModule.id Set to module.id anti-pattern](https://angular.dev/errors/NG6100)\n  - [NG8001: Invalid Element](https://angular.dev/errors/NG8001)\n  - [NG8002: Invalid Attribute](https://angular.dev/errors/NG8002)\n  - [NG8003: Missing Reference Target](https://angular.dev/errors/NG8003)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\n### [Oversized images](https://angular.dev/errors/NG0913\\#oversized-images)\n\nWhen images are loaded, the **intrinsic size** of the downloaded file is checked against the actual size of the image on the page. The actual size is calculated using the **rendered size** of the image with CSS applied, multiplied by the [pixel device ratio](https://web.dev/codelab-density-descriptors/#pixel-density). If the downloaded image is much larger (more than 1200px too large in either dimension), this warning is triggered. Downloading oversized images can slow down page loading and have a negative effect on [Core Web Vitals](https://web.dev/vitals/).\n\n### [Lazy-loaded LCP element](https://angular.dev/errors/NG0913\\#lazy-loaded-lcp-element)\n\nThe largest contentful element on a page during load is considered the \"LCP Element\", which relates to [Largest Contentful Paint](https://web.dev/lcp/), one of the Core Web Vitals. Lazy loading an LCP element will have a strong negative effect on page performance. With this strategy, the browser has to complete layout calculations to determine whether the element is in the viewport before starting the image download. As a result, a warning is triggered when Angular detects that the LCP element has been given the `loading=\"lazy\"` attribute.\n\n@debugging\nUse the image URL provided in the console warning to find the `<img>` element in question.\n\n### [Ways to fix oversized images](https://angular.dev/errors/NG0913\\#ways-to-fix-oversized-images)\n\n- Use a smaller source image\n- Add a [`srcset`](https://web.dev/learn/design/responsive-images/#responsive-images-with-srcset) if multiple sizes are needed for different layouts.\n- Switch to use Angular's built-in image directive ( [`NgOptimizedImage`](https://angular.io/api/common/NgOptimizedImage)), which generates [srcsets automatically](https://angular.io/guide/image-directive#request-images-at-the-correct-size-with-automatic-srcset).\n\n### [Ways to fix lazy-loaded LCP element](https://angular.dev/errors/NG0913\\#ways-to-fix-lazy-loaded-lcp-element)\n\n- Change the `loading` attribute to a different value such as `\"eager\"`.\n- Switch to use Angular's built-in image directive ( [`NgOptimizedImage`](https://angular.io/api/common/NgOptimizedImage)), which allows for easily [prioritizing LCP images](https://angular.io/guide/image-directive#step-4-mark-images-as-priority).\n\n### [Disabling Image Performance Warnings](https://angular.dev/errors/NG0913\\#disabling-image-performance-warnings)\n\nBoth warnings can be disabled individually, site-wide, using a provider at the root of your application:\n\n```\n      providers: [  {    provide: IMAGE_CONFIG,    useValue: {      disableImageSizeWarning: true,       disableImageLazyLoadWarning: true    }  },],\n\n```\n\ncheck",
  "title": "NG0913: Runtime Performance Warnings \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "https",
    "angular",
    "dev",
    "errors",
    "element",
    "image",
    "images",
    "lcp",
    "hydration",
    "ng0913"
  ],
  "sourceURL": "https://angular.dev/errors/NG0913"
}