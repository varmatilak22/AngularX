{
  "content": "Skip to main content\n\nmenu\n\nmenuDocs\n\n- Introduction\n\n  - [What is Angular?](https://angular.dev/overview)\n  - [Installation](https://angular.dev/installation)\n  - Essentials\n  - [Start coding! \ud83d\ude80](https://angular.dev/tutorials/learn-angular)\n- In-depth Guides\n\n  - Signals\n  - Components\n  - Templates\n  - Directives\n  - Dependency Injection\n  - Routing\n  - Forms\n  - HTTP Client\n  - Server-side & hybrid-rendering\n  - Testing\n  - Internationalization\n  - Experimental features\n- Developer Tools\n\n  - Angular CLI\n  - Libraries\n  - [DevTools](https://angular.dev/tools/devtools)\n  - [Language Service](https://angular.dev/tools/language-service)\n- Best Practices\n\n  - [Style Guide](https://angular.dev/style-guide)\n  - [Security](https://angular.dev/best-practices/security)\n  - [Accessibility](https://angular.dev/best-practices/a11y)\n  - Performance\n  - [Keeping up-to-date](https://angular.dev/update)\n- Extended Ecosystem\n\n  - [NgModules](https://angular.dev/guide/ngmodules/overview)\n  - Animations\n  - Using RxJS with Angular\n  - Service Workers & PWAs\n  - [Web workers](https://angular.dev/ecosystem/web-workers)\n  - [Custom build pipeline](https://angular.dev/ecosystem/custom-build-pipeline)\n  - [Angular Fire](https://github.com/angular/angularfire#readme)\n  - [Google Maps](https://github.com/angular/components/tree/main/src/google-maps#readme)\n  - [Google Pay](https://github.com/google-pay/google-pay-button#angular)\n  - [YouTube player](https://github.com/angular/components/blob/main/src/youtube-player/README.md)\n  - [Angular CDK](https://material.angular.io/cdk/categories)\n  - [Angular Material](https://material.angular.io/)\n\n- arrow\\_backUsing RxJS with Angular\n  - [Signals interop](https://angular.dev/ecosystem/rxjs-interop)\n  - [Component output interop](https://angular.dev/ecosystem/rxjs-interop/output-interop)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\n**TIP:** This guide assumes you're familiar with [component and directive outputs](https://angular.dev/ecosystem/rxjs-interop/guide/components/outputs).\n\nThe `@angular/rxjs-interop` package offers two APIs related to component and directive outputs.\n\n## [Creating an output based on an RxJs Observable](https://angular.dev/ecosystem/rxjs-interop/output-interop\\#creating-an-output-based-on-an-rxjs-observable)\n\nThe `outputFromObservable` lets you create a component or directive output that emits based on an RxJS observable:\n\n```\n      import {Directive} from '@angular/core';import {outputFromObservable} from '@angular/core/rxjs-interop';@Directive({/*...*/})class Draggable {  pointerMoves$: Observable<PointerMovements> = listenToPointerMoves();  // Whenever `pointerMoves$` emits, the `pointerMove` event fires.  pointerMove = outputFromObservable(this.pointerMoves$);}\n\n```\n\ncheck\n\nThe `outputFromObservable` function has special meaning to the Angular compiler. **You may only call `outputFromObservable` in component and directive property initializers.**\n\nWhen you `subscribe` to the output, Angular automatically forwards the subscription to the underlying observable. Angular stops forwarding values when the component or directive is destroyed.\n\n**HELPFUL:** Consider using `output()` directly if you can emit values imperatively.\n\n## [Creating an RxJS Observable from a component or directive output](https://angular.dev/ecosystem/rxjs-interop/output-interop\\#creating-an-rxjs-observable-from-a-component-or-directive-output)\n\nThe `outputToObservable` function lets you create an RxJS observable from a component output.\n\n```\n      import {outputToObservable} from '@angular/core/rxjs-interop';@Component(/*...*/)class CustomSlider {  valueChange = output<number>();}// Instance reference to `CustomSlider`.const slider: CustomSlider = createSlider();outputToObservable(slider.valueChange) // Observable<number>  .pipe(...)  .subscribe(...);\n\n```\n\ncheck\n\n**HELPFUL:** Consider using the `subscribe` method on `OutputRef` directly if it meets your needs.",
  "title": "Component output interop \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "angular",
    "https",
    "dev",
    "rxjs",
    "interop",
    "output",
    "component",
    "directive",
    "observable",
    "ecosystem"
  ],
  "sourceURL": "https://angular.dev/ecosystem/rxjs-interop/output-interop"
}