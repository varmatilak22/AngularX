{
  "content": "Skip to main content\n\nmenu\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nunfold\\_more\nYour first Angular appCreate home component\nReveal Answer\n\n[chevron\\_left](https://angular.dev/tutorials/first-app/01-hello-world) [chevron\\_right](https://angular.dev/tutorials/first-app/03-HousingLocation)\n\nReveal Answer\n\nunfold\\_more\nYour first Angular appCreate home component\nReveal Answer\n\n[chevron\\_left](https://angular.dev/tutorials/first-app/01-hello-world) [chevron\\_right](https://angular.dev/tutorials/first-app/03-HousingLocation)\n\nReveal Answer\n\nThis tutorial lesson demonstrates how to create a new [component](https://angular.dev/guide/components) for your Angular app.\n\nComponents in Angular - Learning Angular (Part 3) - YouTube\n\nAngular\n\n159K subscribers\n\n[Components in Angular - Learning Angular (Part 3)](https://www.youtube.com/watch?v=R0nRX8jD2D0)\n\nAngular\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n0:00\n\n0:00 / 9:19\n\u2022Live\n\n\u2022\n\n[Watch on YouTube](https://www.youtube.com/watch?v=R0nRX8jD2D0 \"Watch on YouTube\")\n\n## [What you'll learn](https://angular.dev/tutorials/first-app/02-HomeComponent\\#what-youll-learn)\n\nYour app has a new component: `HomeComponent`.\n\n## [Conceptual preview of Angular components](https://angular.dev/tutorials/first-app/02-HomeComponent\\#conceptual-preview-of-angular-components)\n\nAngular apps are built around components, which are Angular's building blocks.\nComponents contain the code, HTML layout, and CSS style information that provide the function and appearance of an element in the app.\nIn Angular, components can contain other components. An app's functions and appearance can be divided and partitioned into components.\n\nIn Angular, components have metadata that define its properties.\nWhen you create your `HomeComponent`, you use these properties:\n\n- `selector`: to describe how Angular refers to the component in templates.\n- `standalone`: to describe whether the component requires a `NgModule`.\n- `imports`: to describe the component's dependencies.\n- `template`: to describe the component's HTML markup and layout.\n- `styleUrls`: to list the URLs of the CSS files that the component uses in an array.\n\n1. ### [Create the `HomeComponent`](https://angular.dev/tutorials/first-app/02-HomeComponent\\#create-the-homecomponent)\n\n\nIn this step, you create a new component for your app.\n\nIn the **Terminal** pane of your IDE:\n1. In your project directory, navigate to the `first-app` directory.\n\n2. Run this command to create a new `HomeComponent`\n\n\n\n      ```\n            ng generate component home\n\n      ```\n\n      check\n\n3. Run this command to build and serve your app.\n\n       NOTE: This step is only for your local environment!\n\n\n\n      ```\n            ng serve\n\n      ```\n\n      check\n\n4. Open a browser and navigate to `http://localhost:4200` to find the application.\n\n5. Confirm that the app builds without error.\n\n       HELPFUL: It should render the same as it did in the previous lesson because even though you added a new component, you haven't included it in any of the app's templates, yet.\n\n6. Leave `ng serve` running as you complete the next steps.\n2. ### [Add the new component to your app's layout](https://angular.dev/tutorials/first-app/02-HomeComponent\\#add-the-new-component-to-your-apps-layout)\n\n\nIn this step, you add the new component, `HomeComponent` to your app's root component, `AppComponent`, so that it displays in your app's layout.\n\nIn the **Edit** pane of your IDE:\n1. Open `app.component.ts` in the editor.\n\n2. In `app.component.ts`, import `HomeComponent` by adding this line to the file level imports.\n\n\n\n\n      check\n\n      ```\n            import {Component} from '@angular/core';import {HomeComponent} from './home/home.component';@Component({  selector: 'app-root',  imports: [HomeComponent],  template: `    <main>      <header class=\"brand-name\">        <img class=\"brand-logo\" src=\"/assets/logo.svg\" alt=\"logo\" aria-hidden=\"true\" />      </header>      <section class=\"content\">        <app-home></app-home>      </section>    </main>  `,  styleUrls: ['./app.component.css'],})export class AppComponent {  title = 'homes';}\n\n      ```\n\n3. In `app.component.ts`, in `@Component`, update the `imports` array property and add `HomeComponent`.\n\n\n\n\n      check\n\n      ```\n            import {Component} from '@angular/core';import {HomeComponent} from './home/home.component';@Component({  selector: 'app-root',  imports: [HomeComponent],  template: `    <main>      <header class=\"brand-name\">        <img class=\"brand-logo\" src=\"/assets/logo.svg\" alt=\"logo\" aria-hidden=\"true\" />      </header>      <section class=\"content\">        <app-home></app-home>      </section>    </main>  `,  styleUrls: ['./app.component.css'],})export class AppComponent {  title = 'homes';}\n\n      ```\n\n4. In `app.component.ts`, in `@Component`, update the `template` property to include the following HTML code.\n\n\n\n\n      check\n\n      ```\n            import {Component} from '@angular/core';import {HomeComponent} from './home/home.component';@Component({  selector: 'app-root',  imports: [HomeComponent],  template: `    <main>      <header class=\"brand-name\">        <img class=\"brand-logo\" src=\"/assets/logo.svg\" alt=\"logo\" aria-hidden=\"true\" />      </header>      <section class=\"content\">        <app-home></app-home>      </section>    </main>  `,  styleUrls: ['./app.component.css'],})export class AppComponent {  title = 'homes';}\n\n      ```\n\n5. Save your changes to `app.component.ts`.\n\n6. If `ng serve` is running, the app should update.\n       If `ng serve` is not running, start it again.\n       _Hello world_ in your app should change to _home works!_ from the `HomeComponent`.\n\n7. Check the running app in the browser and confirm that the app has been updated.\n      ![browser frame of page displaying the text 'home works!'](https://angular.dev/assets/images/tutorials/first-app/homes-app-lesson-02-step-2.png)\n3. ### [Add features to `HomeComponent`](https://angular.dev/tutorials/first-app/02-HomeComponent\\#add-features-to-homecomponent)\n\n\nIn this step you add features to `HomeComponent`.\n\nIn the previous step, you added the default `HomeComponent` to your app's template so its default HTML appeared in the app.\nIn this step, you add a search filter and button that is used in a later lesson.\nFor now, that's all that `HomeComponent` has.\nNote that, this step just adds the search elements to the layout without any functionality, yet.\n\nIn the **Edit** pane of your IDE:\n1. In the `first-app` directory, open `home.component.ts` in the editor.\n\n2. In `home.component.ts`, in `@Component`, update the `template` property with this code.\n\n\n\n\n      check\n\n      ```\n            import {Component} from '@angular/core';import {CommonModule} from '@angular/common';@Component({  selector: 'app-home',  imports: [CommonModule],  template: `    <section>      <form>        <input type=\"text\" placeholder=\"Filter by city\" />        <button class=\"primary\" type=\"button\">Search</button>      </form>    </section>  `,  styleUrls: ['./home.component.css'],})export class HomeComponent {}\n\n      ```\n\n3. Next, open `home.component.css` in the editor and update the content with these styles.\n\n       NOTE: In the browser, these can go in `src/app/home/home.component.ts` in the `styles` array.\n\n\n\n\n\n      ### Replace in src/app/home/home.component.css\n\n\n\n\n\n      ```\n            .results {  display: grid;  column-gap: 14px;  row-gap: 14px;  grid-template-columns: repeat(auto-fill, minmax(400px, 400px));  margin-top: 50px;  justify-content: space-around;}input[type=\"text\"] {  border: solid 1px var(--primary-color);  padding: 10px;  border-radius: 8px;  margin-right: 4px;  display: inline-block;  width: 30%;}button {  padding: 10px;  border: solid 1px var(--primary-color);  background: var(--primary-color);  color: white;  border-radius: 8px;}@media (min-width: 500px) and (max-width: 768px) {  .results {      grid-template-columns: repeat(2, 1fr);  }  input[type=\"text\"] {      width: 70%;  }   }@media (max-width: 499px) {  .results {      grid-template-columns: 1fr;  }    }\n\n      ```\n\n      check\n\n4. Confirm that the app builds without error.\n       You should find the filter query box and button in your app and they should be styled.\n       Correct any errors before you continue to the next step.\n      ![browser frame of homes-app displaying logo, filter text input box and search button](https://angular.dev/assets/images/tutorials/first-app/homes-app-lesson-02-step-3.png)\n\n**SUMMARY:** In this lesson, you created a new component for your app and gave it a filter edit control and button.\n\nFor more information about the topics covered in this lesson, visit:\n\napp/app.component.ts\n\nadd\n\nlaunchdownload\n\n99\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n\u203a\n\nimport{Component}from'@angular/core';\n\n@Component({\n\nselector:'app-root',\n\nimports:\\[\\],\n\ntemplate:\\`\n\n<h1>Hello world!</h1>\n\n\\`,\n\nstyleUrls:\\['./app.component.css'\\],\n\n})\n\nexportclassAppComponent{\n\ntitle='homes';\n\n}\n\nPreview\n\nBooting\n\nConsole\n\nTerminal\n\nrefresh\n\nStackBlitz[iframe](cid:frame-48695CAA0378D2111FDAA1BBEF6E08D9@mhtml.blink)",
  "title": "Create home component \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "app",
    "component",
    "angular",
    "homecomponent",
    "home",
    "https",
    "class",
    "dev",
    "template",
    "components"
  ],
  "sourceURL": "https://angular.dev/tutorials/first-app/02-HomeComponent"
}