{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\n## Overview for text-field\n\nThe `text-field` package provides useful utilities for working with text input fields such as\n`<input>` and `<textarea>`.\n\n### [link](https://material.angular.io/cdk/text-field/overview\\#automatically-resizing-a-textarea)  Automatically resizing a `<textarea>`\n\nThe `cdkTextareaAutosize` directive can be applied to any `<textarea>` to make it automatically\nresize to fit its content. The minimum and maximum number of rows to expand to can be set via the\n`cdkAutosizeMinRows` and `cdkAutosizeMaxRows` properties respectively.\n\nThe resize logic can be triggered programmatically by calling `resizeToFitContent`. This method\ntakes an optional boolean parameter `force` that defaults to `false`. Passing true will force the\n`<textarea>` to resize even if its text content has not changed, this can be useful if the styles\naffecting the `<textarea>` have changed.\n\nAuto-resizing textarea\n\nlinkcodeopen\\_in\\_new\n\nFont size\n\n16px\n\nAutosize textarea\n\n### [link](https://material.angular.io/cdk/text-field/overview\\#monitoring-the-autofill-state-of-an-input)  Monitoring the autofill state of an `<input>`\n\nThe `AutofillMonitor` is an injectable service that allows the user to monitor the autofill state of\nan `<input>`. It has a `monitor` method that takes an element to monitor and returns an\n`Observable` of autofill event objects with a `target` and `isAutofilled` property. The observable\nemits every time the autofill state of the given `<input>` changes. Any element you monitor should\neventually be unmonitored by calling `stopMonitoring` with the same element.\n\nMonitoring autofill state with AutofillMonitor\n\nlinkcodeopen\\_in\\_new\n\nFirst name\n\nLast name\n\nSubmit\n\nTo simplify this process, there is also a `cdkAutofill` directive that automatically handles\nmonitoring and unmonitoring and doubles as an `@Output` binding that emits when the autofill state\nchanges.\n\nMonitoring autofill state with cdkAutofill\n\nlinkcodeopen\\_in\\_new\n\nFirst name\n\nLast name\n\nSubmit\n\nNote: This service requires some CSS to install animation hooks when the autofill statechanges. If\nyou are using Angular Material, this CSS is included as part of the `mat-core` mixin. If you are not\nusing Angular Material, you should include this CSS with the `text-field-autofill` mixin.\n\n```scss\n@use '@angular/cdk';\n\n@include cdk.text-field-autofill();\n\n```\n\n### [link](https://material.angular.io/cdk/text-field/overview\\#styling-the-autofill-state-of-an-input)  Styling the autofill state of an `<input>`\n\nIt can be difficult to override the browser default `background` and `color` properties on an\nautofilled `<input>`. To make this simpler, the CDK includes a mixin `text-field-autofill-color`\nwhich can be used to set these properties. It takes a `background` value as the first parameter and\nan optional `color` value as the second parameter.\n\n```scss\n@use '@angular/cdk';\n\n// Set custom autofill inputs to have no background and red text.\ninput.custom-autofill {\n  @include cdk.text-field-autofill-color(transparent, red);\n}\n\n```\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Auto-resizing textarea example in StackBlitz\n\nCopy link to example\n\nView code\n\nEdit Monitoring autofill state with AutofillMonitor example in StackBlitz\n\nEdit Monitoring autofill state with cdkAutofill example in StackBlitz",
  "title": "Text field | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/text-field/overview"
}