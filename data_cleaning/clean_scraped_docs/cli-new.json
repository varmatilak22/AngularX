{
  "content": "Skip to main content\n\nmenu\n\nmenuAPI\n\n- [Roadmap](https://angular.dev/roadmap)\n- [Get involved](https://github.com/angular/angular/blob/main/CONTRIBUTING.md)\n- API Reference\n- CLI Reference\n- Error Encyclopedia\n- Extended Diagnostics\n- [Versioning and releases](https://angular.dev/reference/releases)\n- [Version compatibility](https://angular.dev/reference/versions)\n- [Update guide](https://angular.dev/update-guide)\n- Configurations\n- Migrations\n\n- arrow\\_backCLI Reference\n  - [Overview](https://angular.dev/cli)\n  - [ng add](https://angular.dev/cli/add)\n  - ng analytics\n  - [ng build](https://angular.dev/cli/build)\n  - ng cache\n  - ng completion\n  - [ng config](https://angular.dev/cli/config)\n  - [ng deploy](https://angular.dev/cli/deploy)\n  - [ng e2e](https://angular.dev/cli/e2e)\n  - [ng extract-i18n](https://angular.dev/cli/extract-i18n)\n  - ng generate\n  - [ng lint](https://angular.dev/cli/lint)\n  - [ng new](https://angular.dev/cli/new)\n  - [ng run](https://angular.dev/cli/run)\n  - [ng serve](https://angular.dev/cli/serve)\n  - [ng test](https://angular.dev/cli/test)\n  - [ng update](https://angular.dev/cli/update)\n  - [ng version](https://angular.dev/cli/version)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\n```\n\nng newng [name][options]\n```\n\ncheck\n\n```\n\nng nng [name][options]\n```\n\ncheck\n\nCreates and initializes a new Angular application that is the default project for a new workspace.\n\nProvides interactive prompts for optional configuration, such as adding routing support.\nAll prompts can safely be allowed to default.\n\n- The new workspace folder is given the specified project name, and contains configuration files at the top level.\n\n- By default, the files for a new initial application (with the same name as the workspace) are placed in the `src/` subfolder.\n\n- The new application's configuration appears in the `projects` section of the `angular.json` workspace configuration file, under its project name.\n\n- Subsequent applications that you generate in the workspace reside in the `projects/` subfolder.\n\n\nIf you plan to have multiple applications in the workspace, you can create an empty workspace by using the `--no-create-application` option.\nYou can then use `ng generate application` to create an initial application.\nThis allows a workspace name different from the initial app name, and ensures that all applications reside in the `/projects` subfolder, matching the structure of the configuration file.\n\n## [Arguments](https://angular.dev/cli/new\\#arguments)\n\n`name`\n\nThe name for the new workspace and the initial project. This name will be used for the root directory and various identifiers throughout the project.\n\nValue Type `string`\n\n## [Options](https://angular.dev/cli/new\\#options)\n\n`collection`\n\nAlias `c `\n\nA collection of schematics to use in generating the initial application.\n\nValue Type `string`\n\n`commit`\n\nConfigure the initial Git commit for the new repository.\n\nValue Type `boolean` Default `true`\n\n`create-application`\n\nCreate a new initial application project in the new workspace. When false, creates an empty workspace with no initial application. You can then use the `ng generate application` command to create applications in the `projects` directory.\n\nValue Type `boolean` Default `true`\n\n`defaults`\n\nDisable interactive input prompts for options with a default.\n\nValue Type `boolean` Default `false`\n\n`directory`\n\nThe directory where the new workspace and project should be created. If not specified, the workspace will be created in the current directory.\n\nValue Type `string`\n\n`dry-run`\n\nAlias `d `\n\nRun through and reports activity without writing out results.\n\nValue Type `boolean` Default `false`\n\n`experimental-zoneless`\n\nCreate an initial application that does not utilize `zone.js`.\n\nValue Type `boolean` Default `false`\n\n`force`\n\nForce overwriting of existing files.\n\nValue Type `boolean` Default `false`\n\n`help`\n\nShows a help message for this command in the console.\n\nValue Type `boolean`\n\n`inline-style`\n\nAlias `s `\n\nInclude the styles for the initial application's root component directly within the `app.component.ts` file. By default, a separate stylesheet file (e.g., `app.component.css`) is created.\n\nValue Type `boolean`\n\n`inline-template`\n\nAlias `t `\n\nInclude the HTML template for the initial application's root component directly within the `app.component.ts` file. By default, a separate template file (e.g., `app.component.html`) is created.\n\nValue Type `boolean`\n\n`interactive`\n\nEnable interactive input prompts.\n\nValue Type `boolean` Default `true`\n\n`minimal`\n\nGenerate a minimal Angular workspace without any testing frameworks. This is intended for learning purposes and simple experimentation, not for production applications.\n\nValue Type `boolean` Default `false`\n\n`new-project-root`\n\nThe path where new projects will be created within the workspace, relative to the workspace root. By default, new projects are created in the `projects` directory.\n\nValue Type `string` Default `projects`\n\n`package-manager`\n\nThe package manager used to install dependencies.\n\nValue Type `string`\n\n`prefix`\n\nAlias `p `\n\nThe prefix to apply to generated selectors for the initial project. For example, if the prefix is `my-app` and you generate a component named `my-component`, the selector will be `my-app-my-component`.\n\nValue Type `string` Default `app`\n\n`routing`\n\nEnable routing in the initial application project. This sets up the necessary files and modules for managing navigation between different views in your application.\n\nValue Type `boolean`\n\n`server-routing`\n\nCreate a server application in the initial project using the Server Routing and App Engine APIs (Developer Preview).\n\nValue Type `boolean`\n\n`skip-git`\n\nAlias `g `\n\nDo not initialize a Git repository in the new workspace. By default, a Git repository is initialized to help you track changes to your project.\n\nValue Type `boolean` Default `false`\n\n`skip-install`\n\nSkip the automatic installation of packages. You will need to manually install the dependencies later.\n\nValue Type `boolean` Default `false`\n\n`skip-tests`\n\nAlias `S `\n\nSkip the generation of unit test files `spec.ts`.\n\nValue Type `boolean` Default `false`\n\n`ssr`\n\nConfigure the initial application for Server-Side Rendering (SSR) and Static Site Generation (SSG/Prerendering).\n\nValue Type `boolean`\n\n`standalone`\n\nCreates an application based upon the standalone API, without NgModules.\n\nValue Type `boolean` Default `true`\n\n`strict`\n\nEnable stricter type checking and stricter bundle budgets settings. This setting helps improve maintainability and catch bugs ahead of time. For more information, see [https://angular.dev/tools/cli/template-typecheck#strict-mode](https://angular.dev/tools/cli/template-typecheck#strict-mode)\n\nValue Type `boolean` Default `true`\n\n`style`\n\nThe type of stylesheet files to be created for components in the initial project.\n\nValue Type `string`\n\n`view-encapsulation`\n\nSets the view encapsulation mode for components in the initial project. This determines how component styles are scoped and applied. Options include: `Emulated` (default, styles are scoped to the component), `None` (styles are global), and `ShadowDom` (styles are encapsulated using Shadow DOM).\n\nValue Type `string`\n\nJump to details",
  "title": "ng new \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "type",
    "angular",
    "value",
    "default",
    "https",
    "dev",
    "ng",
    "application",
    "boolean",
    "cli"
  ],
  "sourceURL": "https://angular.dev/cli/new"
}