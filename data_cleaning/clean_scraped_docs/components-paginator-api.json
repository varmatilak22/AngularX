{
  "content": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\nAPI for paginator\n\n## API reference for Angular Material paginator\n\n`\n          import {MatPaginatorModule} from '@angular/material/paginator';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/paginator/api\\#services)  Services\n\n#### [link](https://material.angular.io/components/paginator/api\\#MatPaginatorIntl) `MatPaginatorIntl`\n\nTo modify the labels and text displayed, create a new instance of MatPaginatorIntl and\ninclude it in a custom provider\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `changes: Subject<void>` | Stream to emit from when labels are changed. Use this to notify components when the labels have<br>changed after initialization. |\n| `firstPageLabel: string` | A label for the button that moves to the first page. |\n| `getRangeLabel: (page: number, pageSize: number, length: number) => string` | A label for the range of items within the current page and the length of the whole list. |\n| `itemsPerPageLabel: string` | A label for the page size selector. |\n| `lastPageLabel: string` | A label for the button that moves to the last page. |\n| `nextPageLabel: string` | A label for the button that increments the current page. |\n| `previousPageLabel: string` | A label for the button that decrements the current page. |\n\n### [link](https://material.angular.io/components/paginator/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/components/paginator/api\\#MatPaginator) `MatPaginator`\n\nComponent to provide navigation between paged information. Displays the size of the current\npage, user-selectable options to change that size, what items are being shown, and\nnavigational button to go to the previous or next page.\n\nSelector:mat-paginator\n\nExported as:matPaginator\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input()<br>`color: ThemePalette` | Theme color of the underlying form controls. This API is supported in M2<br>themes only,it has no effect in M3 themes. For color customization in M3, see [https://material.angular.io/components/paginator/styling](https://material.angular.io/components/paginator/styling).<br>For information on applying color variants in M3, see<br>[https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants](https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants) |\n| @Input({ transform: booleanAttribute })<br> <br>`disabled: boolean` | Whether the paginator is disabled. |\n| @Input({ transform: booleanAttribute })<br> <br>`hidePageSize: boolean` | Whether to hide the page size selection UI from the user. |\n| @Input({ transform: numberAttribute })<br> <br>`length: number` | The length of the total number of items that are being paginated. Defaulted to 0. |\n| @Input({ transform: numberAttribute })<br> <br>`pageIndex: number` | The zero-based page index of the displayed list of items. Defaulted to 0. |\n| @Input({ transform: numberAttribute })<br> <br>`pageSize: number` | Number of items to display on a page. By default set to 50. |\n| @Input()<br>`pageSizeOptions: number[]` | The set of provided page size options to display to the user. |\n| @Input()<br>`selectConfig: MatPaginatorSelectConfig` | Used to configure the underlying `MatSelect` inside the paginator. |\n| @Input({ transform: booleanAttribute })<br> <br>`showFirstLastButtons: boolean` | Whether to show the first/last buttons UI to the user. |\n| @Output()<br>`page: EventEmitter<PageEvent>` | Event emitted when the paginator changes the page size or page index. |\n| `initialized: Observable<void>` | Emits when the paginator is initialized. |\n\n##### Methods\n\n| firstPage |\n| --- |\n| Move to the first page if not already there. |\n\n| getNumberOfPages |\n| --- |\n| Calculate the number of pages |\n| Returns |\n| --- |\n| `number` |  |\n\n| hasNextPage |\n| --- |\n| Whether there is a next page. |\n| Returns |\n| --- |\n| `boolean` |  |\n\n| hasPreviousPage |\n| --- |\n| Whether there is a previous page. |\n| Returns |\n| --- |\n| `boolean` |  |\n\n| lastPage |\n| --- |\n| Move to the last page if not already there. |\n\n| nextPage |\n| --- |\n| Advances to the next page if it exists. |\n\n| previousPage |\n| --- |\n| Move back to the previous page if it exists. |\n\n### [link](https://material.angular.io/components/paginator/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/components/paginator/api\\#PageEvent) `PageEvent`\n\nChange event object that is emitted when the user selects a\ndifferent page size or navigates to another page.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `length: number` | The current total number of items being paged. |\n| `pageIndex: number` | The current page index. |\n| `pageSize: number` | The current page size. |\n| `previousPageIndex: number` | Index of the page that was selected previously. |\n\n### [link](https://material.angular.io/components/paginator/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/paginator/api\\#MatPaginatorSelectConfig) `MatPaginatorSelectConfig`\n\nObject that can used to configure the underlying `MatSelect` inside a `MatPaginator`.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `disableOptionCentering: boolean` | Whether to center the active option over the trigger. |\n| `panelClass: string | string[] | Set<string> | {<br>    [key: string]: any;<br>}` | Classes to be passed to the select panel. |\n\n#### [link](https://material.angular.io/components/paginator/api\\#MatPaginatorDefaultOptions) `MatPaginatorDefaultOptions`\n\nObject that can be used to configure the default options for the paginator module.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `formFieldAppearance: MatFormFieldAppearance` | The default form-field appearance to apply to the page size options selector. |\n| `hidePageSize: boolean` | Whether to hide the page size selection UI from the user. |\n| `pageSize: number` | Number of items to display on a page. By default set to 50. |\n| `pageSizeOptions: number[]` | The set of provided page size options to display to the user. |\n| `showFirstLastButtons: boolean` | Whether to show the first/last buttons UI to the user. |\n\n### [link](https://material.angular.io/components/paginator/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/components/paginator/api\\#MAT_PAGINATOR_DEFAULT_OPTIONS) `MAT_PAGINATOR_DEFAULT_OPTIONS`\n\nInjection token that can be used to provide the default options for the paginator module.\n\n```docs-markdown-code\nconst MAT_PAGINATOR_DEFAULT_OPTIONS: InjectionToken<MatPaginatorDefaultOptions>;\n\n```\n\n## API reference for Angular Material paginator-testing\n\n`\n          import {MatPaginatorHarness} from '@angular/material/paginator/testing';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/paginator/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/components/paginator/api\\#MatPaginatorHarness) `MatPaginatorHarness`extends [ComponentHarness](https://material.angular.io/components/paginator/cdk/testing/api\\#ComponentHarness)\n\nHarness for interacting with a mat-paginator in tests.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `static\u00a0hostSelector: '.mat-mdc-paginator'` | Selector used to find paginator instances. |\n\n##### Methods\n\n| async<br> <br>getPageSize |\n| --- |\n| Gets the page size of the paginator. |\n| Returns |\n| --- |\n| `Promise<number>` |  |\n\n| async<br> <br>getRangeLabel |\n| --- |\n| Gets the text of the range label of the paginator. |\n| Returns |\n| --- |\n| `Promise<string>` |  |\n\n| async<br> <br>goToFirstPage |\n| --- |\n| Goes to the first page in the paginator. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| async<br> <br>goToLastPage |\n| --- |\n| Goes to the last page in the paginator. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| async<br> <br>goToNextPage |\n| --- |\n| Goes to the next page in the paginator. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| async<br> <br>goToPreviousPage |\n| --- |\n| Goes to the previous page in the paginator. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| async<br> <br>host |\n| --- |\n| Gets a `Promise` for the `TestElement` representing the host element of the component. |\n| Returns |\n| --- |\n| `Promise<TestElement>` |  |\n\n| async<br> <br>isNextPageDisabled |\n| --- |\n| Returns whether or not the next page button is disabled. |\n| Returns |\n| --- |\n| `Promise<boolean>` |  |\n\n| async<br> <br>isPreviousPageDisabled |\n| --- |\n| Returns |\n| --- |\n| `Promise<boolean>` |  |\n\n| async<br> <br>setPageSize |\n| --- |\n| Sets the page size of the paginator. |\n| Parameters |\n| --- |\n| size<br> `number` | Page size that should be select. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| static<br> <br>with |\n| --- |\n| Gets a `HarnessPredicate` that can be used to search for a paginator with specific attributes. |\n| Parameters |\n| --- |\n| options<br> `PaginatorHarnessFilters = {}` | Options for filtering which paginator instances are considered a match. |\n| Returns |\n| --- |\n| `HarnessPredicate<T>` | a `HarnessPredicate` configured with the given options. |\n\n### [link](https://material.angular.io/components/paginator/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/paginator/api\\#PaginatorHarnessFilters) `PaginatorHarnessFilters`\n\nA set of criteria that can be used to filter a list of `MatPaginatorHarness` instances.\n\nPaginator\n\nTesting\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
  "title": "Paginator | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/components/paginator/api"
}