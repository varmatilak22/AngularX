{
  "content": "Skip to main content\n\nmenu\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nunfold\\_more\nYour first Angular appCreate an interface\nReveal Answer\n\n[chevron\\_left](https://angular.dev/tutorials/first-app/03-HousingLocation) [chevron\\_right](https://angular.dev/tutorials/first-app/05-inputs)\n\nReveal Answer\n\nunfold\\_more\nYour first Angular appCreate an interface\nReveal Answer\n\n[chevron\\_left](https://angular.dev/tutorials/first-app/03-HousingLocation) [chevron\\_right](https://angular.dev/tutorials/first-app/05-inputs)\n\nReveal Answer\n\nThis tutorial lesson demonstrates how to create an interface and include it in a component of your app.\n\nCustomizing components and directives (Part 4) - YouTube\n\nAngular\n\n159K subscribers\n\n[Customizing components and directives (Part 4)](https://www.youtube.com/watch?v=eM3zi_n7lNs)\n\nAngular\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nMore videos\n\n## More videos\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=eM3zi_n7lNs&embeds_referring_euri=https%3A%2F%2Fangular.dev%2F)\n\n0:00\n\n0:00 / 12:18\n\u2022Live\n\n\u2022\n\n[Watch on YouTube](https://www.youtube.com/watch?v=eM3zi_n7lNs \"Watch on YouTube\")\n\n## [What you'll learn](https://angular.dev/tutorials/first-app/04-interfaces\\#what-youll-learn)\n\n- Your app has a new interface that it can use as a data type.\n- Your app has an instance of the new interface with sample data.\n\n## [Conceptual preview of interfaces](https://angular.dev/tutorials/first-app/04-interfaces\\#conceptual-preview-of-interfaces)\n\n[Interfaces](https://www.typescriptlang.org/docs/handbook/interfaces.html) are custom data types for your app.\n\nAngular uses TypeScript to take advantage of working in a strongly typed programming environment.\nStrong type checking reduces the likelihood of one element in your app sending incorrectly formatted data to another.\nSuch type-mismatch errors are caught by the TypeScript compiler and many such errors can also be caught in your IDE.\n\nIn this lesson, you'll create an interface to define properties that represent data about a single housing location.\n\n1. ### [Create a new Angular interface](https://angular.dev/tutorials/first-app/04-interfaces\\#create-a-new-angular-interface)\n\n\nThis step creates a new interface in your app.\n\nIn the **Terminal** pane of your IDE:\n1. In your project directory, navigate to the `first-app` directory.\n\n2. In the `first-app` directory, run this command to create the new interface.\n\n\n\n      ```\n            ng generate interface housinglocation\n\n      ```\n\n      check\n\n3. Run `ng serve` to build the app and serve it to `http://localhost:4200`.\n\n4. In a browser, open `http://localhost:4200` to see your app.\n\n5. Confirm that the app builds without error.\n       Correct any errors before you continue to the next step.\n2. ### [Add properties to the new interface](https://angular.dev/tutorials/first-app/04-interfaces\\#add-properties-to-the-new-interface)\n\n\nThis step adds the properties to the interface that your app needs to represent a housing location.\n\n\n1. In the **Terminal** pane of your IDE, start the `ng serve` command, if it isn't already running, to build the app and serve it to `http://localhost:4200`.\n\n2. In the **Edit** pane of your IDE, open the `src/app/housinglocation.ts` file.\n\n3. In `housinglocation.ts`, replace the default content with the following code to make your new interface to match this example.\n\n\n\n\n      check\n\n      ```\n            export interface HousingLocation {  id: number;  name: string;  city: string;  state: string;  photo: string;  availableUnits: number;  wifi: boolean;  laundry: boolean;}\n\n      ```\n\n4. Save your changes and confirm the app does not display any errors. Correct any errors before you continue to the next step.\n\n\nAt this point, you've defined an interface that represents data about a housing location including an `id`, `name`, and location information.\n\n3. ### [Create a test house for your app](https://angular.dev/tutorials/first-app/04-interfaces\\#create-a-test-house-for-your-app)\n\n\nYou have an interface, but you aren't using it yet.\n\nIn this step, you create an instance of the interface and assign some sample data to it.\nYou won't see this sample data appear in your app yet.\nThere are a few more lessons to complete before that happens.\n1. In the **Terminal** pane of your IDE, run the `ng serve` command, if it isn't already running, to build the app and serve your app to `http://localhost:4200`.\n\n2. In the **Edit** pane of your IDE, open `src/app/home/home.component.ts`.\n\n3. In `src/app/home/home.component.ts`, add this import statement after the existing `import` statements so that `HomeComponent` can use the new interface.\n\n\n\n\n      check\n\n      ```\n            import {Component} from '@angular/core';import {CommonModule} from '@angular/common';import {HousingLocationComponent} from '../housing-location/housing-location.component';import {HousingLocation} from '../housinglocation';@Component({  selector: 'app-home',  imports: [CommonModule, HousingLocationComponent],  template: `    <section>      <form>        <input type=\"text\" placeholder=\"Filter by city\" />        <button class=\"primary\" type=\"button\">Search</button>      </form>    </section>    <section class=\"results\">      <app-housing-location></app-housing-location>    </section>  `,  styleUrls: ['./home.component.css'],})export class HomeComponent {  readonly baseUrl = 'https://angular.dev/assets/images/tutorials/common';  housingLocation: HousingLocation = {    id: 9999,    name: 'Test Home',    city: 'Test city',    state: 'ST',    photo: `${this.baseUrl}/example-house.jpg`,    availableUnits: 99,    wifi: true,    laundry: false,  };}\n\n      ```\n\n4. In `src/app/home/home.component.ts`, replace the empty `export class HomeComponent {}` definition with this code to create a single instance of the new interface in the component.\n\n\n\n\n      check\n\n      ```\n            import {Component} from '@angular/core';import {CommonModule} from '@angular/common';import {HousingLocationComponent} from '../housing-location/housing-location.component';import {HousingLocation} from '../housinglocation';@Component({  selector: 'app-home',  imports: [CommonModule, HousingLocationComponent],  template: `    <section>      <form>        <input type=\"text\" placeholder=\"Filter by city\" />        <button class=\"primary\" type=\"button\">Search</button>      </form>    </section>    <section class=\"results\">      <app-housing-location></app-housing-location>    </section>  `,  styleUrls: ['./home.component.css'],})export class HomeComponent {  readonly baseUrl = 'https://angular.dev/assets/images/tutorials/common';  housingLocation: HousingLocation = {    id: 9999,    name: 'Test Home',    city: 'Test city',    state: 'ST',    photo: `${this.baseUrl}/example-house.jpg`,    availableUnits: 99,    wifi: true,    laundry: false,  };}\n\n      ```\n\n5. Confirm that your `home.component.ts` file matches like this example.\n\n\n\n\n      check\n\n      ```\n            import {Component} from '@angular/core';import {CommonModule} from '@angular/common';import {HousingLocationComponent} from '../housing-location/housing-location.component';import {HousingLocation} from '../housinglocation';@Component({  selector: 'app-home',  imports: [CommonModule, HousingLocationComponent],  template: `    <section>      <form>        <input type=\"text\" placeholder=\"Filter by city\" />        <button class=\"primary\" type=\"button\">Search</button>      </form>    </section>    <section class=\"results\">      <app-housing-location></app-housing-location>    </section>  `,  styleUrls: ['./home.component.css'],})export class HomeComponent {  readonly baseUrl = 'https://angular.dev/assets/images/tutorials/common';  housingLocation: HousingLocation = {    id: 9999,    name: 'Test Home',    city: 'Test city',    state: 'ST',    photo: `${this.baseUrl}/example-house.jpg`,    availableUnits: 99,    wifi: true,    laundry: false,  };}\n\n      ```\n\n\n\n\n\n\n       By adding the `housingLocation` property of type `HousingLocation` to the `HomeComponent` class, we're able to confirm that the data matches the description of the interface. If the data didn't satisfy the description of the interface, the IDE has enough information to give us helpful errors.\n\n6. Save your changes and confirm the app does not have any errors. Open the browser and confirm that your application still displays the message \"housing-location works!\"\n      ![browser frame of homes-app displaying logo, filter text input box and search button and the message 'housing-location works!'](https://angular.dev/assets/images/tutorials/first-app/homes-app-lesson-03-step-2.png)\n7. Correct any errors before you continue to the next step.\n\n**SUMMARY:** In this lesson, you created an interface that created a new data type for your app.\nThis new data type makes it possible for you to specify where `HousingLocation` data is required.\nThis new data type also makes it possible for your IDE and the TypeScript compiler can ensure that `HousingLocation` data is used where it's required.\n\nFor more information about the topics covered in this lesson, visit:\n\napp/home/home.component.ts editdelete\n\nadd\n\nlaunchdownload\n\n99\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n\u203a\n\n\u2304\n\n\u2304\n\n\u2304\n\nimport{Component}from'@angular/core';\n\nimport{CommonModule}from'@angular/common';\n\nimport{HousingLocationComponent}from'../housing-location/housing-location.component';\n\n@Component({\n\nselector:'app-home',\n\nimports:\\[CommonModule,HousingLocationComponent\\],\n\ntemplate:\\`\n\n<section>\n\n<form>\n\n<inputtype=\"text\"placeholder=\"Filter by city\"/>\n\n<buttonclass=\"primary\"type=\"button\">Search</button>\n\n</form>\n\n</section>\n\n<sectionclass=\"results\">\n\n<app-housing-location></app-housing-location>\n\n</section>\n\n\\`,\n\nstyleUrls:\\['./home.component.css'\\],\n\n})\n\nexportclassHomeComponent{}\n\nPreview\n\nBooting\n\nConsole\n\nTerminal\n\nrefresh\n\nStackBlitz",
  "title": "Create an interface \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "app",
    "angular",
    "interface",
    "component",
    "housinglocation",
    "location",
    "housing",
    "home",
    "https",
    "import"
  ],
  "sourceURL": "https://angular.dev/tutorials/first-app/04-interfaces"
}