{
  "content": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\nAPI for ripple\n\n## API reference for Angular Material ripple\n\n`\n          import {MatRippleModule} from '@angular/material/core';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/ripple/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/components/ripple/api\\#MatRipple) `MatRipple`\n\nSelector:\\[mat-ripple\\]\\[matRipple\\]\n\nExported as:matRipple\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input('matRippleAnimation')<br> <br>`animation: RippleAnimationConfig` | Configuration for the ripple animation. Allows modifying the enter and exit animation<br>duration of the ripples. The animation durations will be overwritten if the<br>`NoopAnimationsModule` is being used. |\n| @Input('matRippleCentered')<br> <br>`centered: boolean` | Whether the ripple always originates from the center of the host element's bounds, rather<br>than originating from the location of the click event. |\n| @Input('matRippleColor')<br> <br>`color: string` | Custom color for all ripples. |\n| @Input('matRippleDisabled')<br> <br>`disabled: boolean` | Whether click events will not trigger the ripple. Ripples can be still launched manually<br>by using the `launch()` method. |\n| @Input('matRippleRadius')<br> <br>`radius: number` | If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius<br>will be the distance from the center of the ripple to the furthest corner of the host element's<br>bounding rectangle. |\n| @Input('matRippleTrigger')<br> <br>`trigger: HTMLElement` | The element that triggers the ripple when click events are received.<br>Defaults to the directive's host element. |\n| @Input('matRippleUnbounded')<br> <br>`unbounded: boolean` | Whether the ripples should be visible outside the component's bounds. |\n\n##### Methods\n\n| fadeOutAll |\n| --- |\n| Fades out all currently showing ripple elements. |\n\n| fadeOutAllNonPersistent |\n| --- |\n| Fades out all currently showing non-persistent ripple elements. |\n\n| launch |\n| --- |\n| Launches a manual ripple using the specified ripple configuration. |\n| Parameters |\n| --- |\n| config<br> `RippleConfig` | Configuration for the manual ripple. |\n| Returns |\n| --- |\n| `RippleRef` |  |\n\n| launch |\n| --- |\n| Launches a manual ripple at the specified coordinates relative to the viewport. |\n| Parameters |\n| --- |\n| x<br> `number` | Coordinate along the X axis at which to fade-in the ripple. Coordinate<br>should be relative to the viewport. |\n| y<br> `number` | Coordinate along the Y axis at which to fade-in the ripple. Coordinate<br>should be relative to the viewport. |\n| config?<br> `RippleConfig` | Optional ripple configuration for the manual ripple. |\n| Returns |\n| --- |\n| `RippleRef` |  |\n\n### [link](https://material.angular.io/components/ripple/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/components/ripple/api\\#RippleRef) `RippleRef`\n\nReference to a previously launched ripple element.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `config: RippleConfig` | Ripple configuration used for the ripple. |\n| `element: HTMLElement` | Reference to the ripple HTML element. |\n| `state: RippleState` | Current state of the ripple. |\n\n##### Methods\n\n| fadeOut |\n| --- |\n| Fades out the ripple element. |\n\n### [link](https://material.angular.io/components/ripple/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/ripple/api\\#RippleGlobalOptions) `RippleGlobalOptions`\n\nConfigurable options for `matRipple`.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `animation: RippleAnimationConfig` | Default configuration for the animation duration of the ripples. There are two phases with<br>different durations for the ripples: `enter` and `leave`. The durations will be overwritten<br>by the value of `matRippleAnimation` or if the `NoopAnimationsModule` is included. |\n| `disabled: boolean` | Whether ripples should be disabled. Ripples can be still launched manually by using<br>the `launch()` method. Therefore focus indicators will still show up. |\n| `namespace: string` | A namespace to use for ripple loader to allow multiple instances to exist on the same page. |\n| `terminateOnPointerUp: boolean` | Whether ripples should start fading out immediately after the mouse or touch is released. By<br>default, ripples will wait for the enter animation to complete and for mouse or touch release. |\n\n#### [link](https://material.angular.io/components/ripple/api\\#RippleAnimationConfig) `RippleAnimationConfig`\n\nInterface that describes the configuration for the animation of a ripple.\nThere are two animation phases with different durations for the ripples.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `enterDuration: number` | Duration in milliseconds for the enter animation (expansion from point of contact). |\n| `exitDuration: number` | Duration in milliseconds for the exit animation (fade-out). |\n\n### [link](https://material.angular.io/components/ripple/api\\#type_aliases)  Type aliases\n\n#### [link](https://material.angular.io/components/ripple/api\\#RippleConfig) `RippleConfig`\n\n```docs-markdown-code\ntype RippleConfig = {\n    color?: string;\n    centered?: boolean;\n    radius?: number;\n    persistent?: boolean;\n    animation?: RippleAnimationConfig;\n    terminateOnPointerUp?: boolean;\n};\n\n```\n\n### [link](https://material.angular.io/components/ripple/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/components/ripple/api\\#defaultRippleAnimationConfig) `defaultRippleAnimationConfig`\n\nDefault ripple animation configuration for ripples without an explicit\nanimation config specified.\n\n```docs-markdown-code\nconst defaultRippleAnimationConfig: { enterDuration: number; exitDuration: number; };\n\n```\n\n#### [link](https://material.angular.io/components/ripple/api\\#MAT_RIPPLE_GLOBAL_OPTIONS) `MAT_RIPPLE_GLOBAL_OPTIONS`\n\nInjection token that can be used to specify the global ripple options.\n\n```docs-markdown-code\nconst MAT_RIPPLE_GLOBAL_OPTIONS: InjectionToken<RippleGlobalOptions>;\n\n```\n\nRipples\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
  "title": "Ripples | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/components/ripple/api"
}