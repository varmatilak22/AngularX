{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\nAPI for collections\n\n## API reference for Angular CDK collections\n\nImport symbols from `@angular/cdk/collections`\n\n### [link](https://material.angular.io/cdk/collections/api\\#services)  Services\n\n#### [link](https://material.angular.io/cdk/collections/api\\#UniqueSelectionDispatcher) `UniqueSelectionDispatcher`\n\nClass to coordinate unique selection based on name.\nIntended to be consumed as an Angular service.\nThis service is needed because native radio change events are only fired on the item currently\nbeing selected, and we still need to uncheck the previous selection.\n\nThis service does not _store_ any IDs and names because they may change at any time, so it is\nless error-prone if they are simply passed through when the events occur.\n\n##### Methods\n\n| listen |\n| --- |\n| Listen for future changes to item selection. |\n| Parameters |\n| --- |\n| listener<br> `UniqueSelectionDispatcherListener` |  |\n| Returns |\n| --- |\n| `() => void` | Function used to deregister listener |\n\n| notify |\n| --- |\n| Notify other items that selection for the given name has been set. |\n| Parameters |\n| --- |\n| id<br> `string` | ID of the item. |\n| name<br> `string` | Name of the item. |\n\n### [link](https://material.angular.io/cdk/collections/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/cdk/collections/api\\#ArrayDataSource) `ArrayDataSource`extends [DataSource](https://material.angular.io/cdk/collections/api)\n\nDataSource wrapper for a native array.\n\n##### Methods\n\n| connect |\n| --- |\n| Returns |\n| --- |\n| `Observable<readonly T[]>` |  |\n\n| disconnect |\n| --- |\n\n#### [link](https://material.angular.io/cdk/collections/api\\#DataSource) `DataSource`\n\n##### Methods\n\n| connect |\n| --- |\n| Connects a collection viewer (such as a data-table) to this data source. Note that<br>the stream provided will be accessed during change detection and should not directly change<br>values that are bound in template views. |\n| Parameters |\n| --- |\n| collectionViewer<br> `CollectionViewer` | The component that exposes a view over the data provided by this<br>data source. |\n| Returns |\n| --- |\n| `Observable<readonly T[]>` | Observable that emits a new value when the data changes. |\n\n| disconnect |\n| --- |\n| Disconnects a collection viewer (such as a data-table) from this data source. Can be used<br>to perform any clean-up or tear-down operations when a view is being destroyed. |\n| Parameters |\n| --- |\n| collectionViewer<br> `CollectionViewer` | The component that exposes a view over the data provided by this<br>data source. |\n\n#### [link](https://material.angular.io/cdk/collections/api\\#SelectionModel) `SelectionModel`\n\nClass to be used to power selecting one or more options from a list.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `changed: Subject<SelectionChange<T>>` | Event emitted when the value has changed. |\n| `compareWith: (o1: T, o2: T) => boolean` |  |\n| `selected: T[]` | Selected values. |\n\n##### Methods\n\n| clear |\n| --- |\n| Clears all of the selected values. |\n| Parameters |\n| --- |\n| flushEvent<br> `boolean = true` | Whether to flush the changes in an event.<br>If false, the changes to the selection will be flushed along with the next event. |\n| Returns |\n| --- |\n| `boolean | void` | Whether the selection changed as a result of this call |\n\n| deselect |\n| --- |\n| Deselects a value or an array of values. |\n| Parameters |\n| --- |\n| values<br> `` | The values to deselect |\n| ...values<br> `T[]` |  |\n| Returns |\n| --- |\n| `boolean | void` | Whether the selection changed as a result of this call |\n\n| hasValue |\n| --- |\n| Determines whether the model has a value. |\n| Returns |\n| --- |\n| `boolean` |  |\n\n| isEmpty |\n| --- |\n| Determines whether the model does not have a value. |\n| Returns |\n| --- |\n| `boolean` |  |\n\n| isMultipleSelection |\n| --- |\n| Gets whether multiple values can be selected. |\n\n| isSelected |\n| --- |\n| Determines whether a value is selected. |\n| Parameters |\n| --- |\n| value<br> `T` |  |\n| Returns |\n| --- |\n| `boolean` |  |\n\n| select |\n| --- |\n| Selects a value or an array of values. |\n| Parameters |\n| --- |\n| values<br> `` | The values to select |\n| ...values<br> `T[]` |  |\n| Returns |\n| --- |\n| `boolean | void` | Whether the selection changed as a result of this call |\n\n| setSelection |\n| --- |\n| Sets the selected values |\n| Parameters |\n| --- |\n| values<br> `` | The new selected values |\n| ...values<br> `T[]` |  |\n| Returns |\n| --- |\n| `boolean | void` | Whether the selection changed as a result of this call |\n\n| sort |\n| --- |\n| Sorts the selected values based on a predicate function. |\n| Parameters |\n| --- |\n| predicate?<br> `(a: T, b: T) => number` |  |\n\n| toggle |\n| --- |\n| Toggles a value between selected and deselected. |\n| Parameters |\n| --- |\n| value<br> `T` | The value to toggle |\n| Returns |\n| --- |\n| `boolean | void` | Whether the selection changed as a result of this call |\n\n### [link](https://material.angular.io/cdk/collections/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/cdk/collections/api\\#CollectionViewer) `CollectionViewer`\n\nInterface for any component that provides a view of some data collection and wants to provide\ninformation regarding the view and any changes made.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `viewChange: Observable<ListRange>` | A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the<br>data. The `start` index is inclusive, while the `end` is exclusive. |\n\n#### [link](https://material.angular.io/cdk/collections/api\\#TreeDataNodeFlattener) `TreeDataNodeFlattener`\n\nInterface for a class that can flatten hierarchical structured data and re-expand the flattened\ndata back into its original structure. Should be used in conjunction with the cdk-tree.\n\n##### Methods\n\n| expandFlattenedNodes |\n| --- |\n| Expands a flattened array of data into its hierarchical form using the provided expansion<br>model. |\n| Parameters |\n| --- |\n| nodes<br> `T[]` |  |\n| expansionModel<br> `SelectionModel<T>` |  |\n| Returns |\n| --- |\n| `T[]` |  |\n\n| flattenNodes |\n| --- |\n| Transforms a set of hierarchical structured data into a flattened data array. |\n| Parameters |\n| --- |\n| structuredData<br> `any[]` |  |\n| Returns |\n| --- |\n| `T[]` |  |\n\n| nodeDescendents |\n| --- |\n| Put node descendants of node in array.<br>If `onlyExpandable` is true, then only process expandable descendants. |\n| Parameters |\n| --- |\n| node<br> `T` |  |\n| nodes<br> `T[]` |  |\n| onlyExpandable<br> `boolean` |  |\n\n### [link](https://material.angular.io/cdk/collections/api\\#functions)  Functions\n\n| isDataSource |\n| --- |\n| Checks whether an object is a data source. |\n| Parameters |\n| --- |\n| value<br> `any` |  |\n| Returns |\n| --- |\n| `value is DataSource<any>` |  |\n\n### [link](https://material.angular.io/cdk/collections/api\\#type_aliases)  Type aliases\n\n#### [link](https://material.angular.io/cdk/collections/api\\#UniqueSelectionDispatcherListener) `UniqueSelectionDispatcherListener`\n\n```docs-markdown-code\ntype UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n\n```\n\n#### [link](https://material.angular.io/cdk/collections/api\\#ListRange) `ListRange`\n\nRepresents a range of numbers with a specified start and end.\n\n```docs-markdown-code\ntype ListRange = {\n    start: number;\n    end: number;\n};\n\n```\n\nCollections\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation",
  "title": "Collections | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/collections/api"
}