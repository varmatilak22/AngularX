{
  "content": "Skip to main content\n\nmenu\n\nmenuDocs\n\n- Introduction\n\n  - [What is Angular?](https://angular.dev/overview)\n  - [Installation](https://angular.dev/installation)\n  - Essentials\n  - [Start coding! \ud83d\ude80](https://angular.dev/tutorials/learn-angular)\n- In-depth Guides\n\n  - Signals\n  - Components\n  - Templates\n  - Directives\n  - Dependency Injection\n  - Routing\n  - Forms\n  - HTTP Client\n  - Server-side & hybrid-rendering\n  - Testing\n  - Internationalization\n  - Experimental features\n- Developer Tools\n\n  - Angular CLI\n  - Libraries\n  - [DevTools](https://angular.dev/tools/devtools)\n  - [Language Service](https://angular.dev/tools/language-service)\n- Best Practices\n\n  - [Style Guide](https://angular.dev/style-guide)\n  - [Security](https://angular.dev/best-practices/security)\n  - [Accessibility](https://angular.dev/best-practices/a11y)\n  - Performance\n  - [Keeping up-to-date](https://angular.dev/update)\n- Extended Ecosystem\n\n  - [NgModules](https://angular.dev/guide/ngmodules/overview)\n  - Animations\n  - Using RxJS with Angular\n  - Service Workers & PWAs\n  - [Web workers](https://angular.dev/ecosystem/web-workers)\n  - [Custom build pipeline](https://angular.dev/ecosystem/custom-build-pipeline)\n  - [Angular Fire](https://github.com/angular/angularfire#readme)\n  - [Google Maps](https://github.com/angular/components/tree/main/src/google-maps#readme)\n  - [Google Pay](https://github.com/google-pay/google-pay-button#angular)\n  - [YouTube player](https://github.com/angular/components/blob/main/src/youtube-player/README.md)\n  - [Angular CDK](https://material.angular.io/cdk/categories)\n  - [Angular Material](https://material.angular.io/)\n\n- arrow\\_backAngular CLI\n  - [Overview](https://angular.dev/tools/cli)\n  - [Local set-up](https://angular.dev/tools/cli/setup-local)\n  - [Building Angular apps](https://angular.dev/tools/cli/build)\n  - [Serving Angular apps for development](https://angular.dev/tools/cli/serve)\n  - [Deployment](https://angular.dev/tools/cli/deployment)\n  - [End-to-End Testing](https://angular.dev/tools/cli/end-to-end)\n  - [Migrating to new build system](https://angular.dev/tools/cli/build-system-migration)\n  - [Build environments](https://angular.dev/tools/cli/environments)\n  - [Angular CLI builders](https://angular.dev/tools/cli/cli-builder)\n  - [Generating code using schematics](https://angular.dev/tools/cli/schematics)\n  - [Authoring schematics](https://angular.dev/tools/cli/schematics-authoring)\n  - [Schematics for libraries](https://angular.dev/tools/cli/schematics-for-libraries)\n  - [Template type checking](https://angular.dev/tools/cli/template-typecheck)\n  - [Ahead-of-time (AOT) compilation](https://angular.dev/tools/cli/aot-compiler)\n  - [AOT metadata errors](https://angular.dev/tools/cli/aot-metadata-errors)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nYou can serve your Angular CLI application with the `ng serve` command.\nThis will compile your application, skip unnecessary optimizations, start a devserver, and automatically rebuild and live reload any subsequent changes.\nYou can stop the server by pressing `Ctrl+C`.\n\n`ng serve` only executes the builder for the `serve` target in the default project as specified in `angular.json`.\nWhile any builder can be used here, the most common (and default) builder is `@angular-devkit/build-angular:dev-server`.\n\nYou can determine which builder is being used for a particular project by looking up the `serve` target for that project.\n\n```\n      {  \"projects\": {    \"my-app\": {      \"architect\": {        // `ng serve` invokes the Architect target named `serve`.        \"serve\": {          \"builder\": \"@angular-devkit/build-angular:dev-server\",          // ...        },        \"build\": { /* ... */ }        \"test\": { /* ... */ }      }    }  }}\n\n```\n\ncheck\n\nThis page discusses usage and options of `@angular-devkit/build-angular:dev-server`.\n\n## [Proxying to a backend server](https://angular.dev/tools/cli/serve\\#proxying-to-a-backend-server)\n\nUse [proxying support](https://webpack.js.org/configuration/dev-server/#devserverproxy) to divert certain URLs to a backend server, by passing a file to the `--proxy-config` build option.\nFor example, to divert all calls for `http://localhost:4200/api` to a server running on `http://localhost:3000/api`, take the following steps.\n\n1. Create a file `proxy.conf.json` in your project's `src/` folder.\n\n2. Add the following content to the new proxy file:\n\n\n\n```\n         {   \"/api\": {     \"target\": \"http://localhost:3000\",     \"secure\": false   } }\n\n```\n\ncheck\n\n3. In the CLI configuration file, `angular.json`, add the `proxyConfig` option to the `serve` target:\n\n\n\n```\n         {   \"projects\": {     \"my-app\": {       \"architect\": {         \"serve\": {           \"builder\": \"@angular-devkit/build-angular:dev-server\",           \"options\": {             \"proxyConfig\": \"src/proxy.conf.json\"           }         }       }     }   } }\n\n```\n\ncheck\n\n4. To run the development server with this proxy configuration, call `ng serve`.\n\n\nEdit the proxy configuration file to add configuration options; following are some examples.\nFor a detailed description of all options, refer to the [webpack DevServer documentation](https://webpack.js.org/configuration/dev-server/#devserverproxy) when using `@angular-devkit/build-angular:browser`, or the [Vite DevServer documentation](https://vite.dev/config/server-options#server-proxy) when using `@angular-devkit/build-angular:browser-esbuild` or `@angular-devkit/build-angular:application`.\n\n**NOTE:** If you edit the proxy configuration file, you must relaunch the `ng serve` process to make your changes effective.\n\n## [`localhost` resolution](https://angular.dev/tools/cli/serve\\#localhost-resolution)\n\nAs of Node version 17, Node will _not_ always resolve `http://localhost:<port>` to `http://127.0.0.1:<port>`\ndepending on each machine's configuration.\n\nIf you get an `ECONNREFUSED` error using a proxy targeting a `localhost` URL,\nyou can fix this issue by updating the target from `http://localhost:<port>` to `http://127.0.0.1:<port>`.\n\nSee [the `http-proxy-middleware` documentation](https://github.com/chimurai/http-proxy-middleware#nodejs-17-econnrefused-issue-with-ipv6-and-localhost-705)\nfor more information.",
  "title": "Serving Angular apps for development \u2022 Angular",
  "description": "The web development framework for building modern apps.",
  "keywords": [
    "angular",
    "https",
    "dev",
    "cli",
    "tools",
    "build",
    "serve",
    "server",
    "proxy",
    "http"
  ],
  "sourceURL": "https://angular.dev/tools/cli/serve"
}