{
  "content": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for checkbox\n\n`<mat-checkbox>` provides the same functionality as a native `<input type=\"checkbox\">`\nenhanced with Material Design styling and animations.\n\nBasic checkboxes\n\nlinkcodeopen\\_in\\_new\n\nCheck me!\n\nDisabled\n\nParent task\n\n- Child task 1\n\n- Child task 2\n\n- Child task 3\n\n\n### [link](https://material.angular.io/components/checkbox/overview\\#checkbox-label)  Checkbox label\n\nThe checkbox label is provided as the content to the `<mat-checkbox>` element. The label can be\npositioned before or after the checkbox by setting the `labelPosition` property to `'before'` or\n`'after'`.\n\nIf you don't want the label to appear next to the checkbox, you can use\n[`aria-label`](https://www.w3.org/TR/wai-aria/states_and_properties#aria-label) or\n[`aria-labelledby`](https://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby) to\nspecify an appropriate label.\n\n### [link](https://material.angular.io/components/checkbox/overview\\#use-with-angularforms)  Use with `@angular/forms`\n\n`<mat-checkbox>` is compatible with `@angular/forms` and supports both `FormsModule`\nand `ReactiveFormsModule`.\n\n### [link](https://material.angular.io/components/checkbox/overview\\#indeterminate-state)  Indeterminate state\n\n`<mat-checkbox>` supports an `indeterminate` state, similar to the native `<input type=\"checkbox\">`.\nWhile the `indeterminate` property of the checkbox is true, it will render as indeterminate\nregardless of the `checked` value. Any interaction with the checkbox by a user (i.e., clicking) will\nremove the indeterminate state.\n\n### [link](https://material.angular.io/components/checkbox/overview\\#click-action-config)  Click action config\n\nWhen user clicks on the `mat-checkbox`, the default behavior is toggle `checked` value and set\n`indeterminate` to `false`. This behavior can be customized by\n[providing a new value](https://angular.dev/guide/di/dependency-injection)\nof `MAT_CHECKBOX_DEFAULT_OPTIONS` to the checkbox.\n\n```\nproviders: [\\\n  {provide: MAT_CHECKBOX_DEFAULT_OPTIONS, useValue: { clickAction: 'noop' } as MatCheckboxDefaultOptions}\\\n]\n\n```\n\nThe possible values are:\n\n#### [link](https://material.angular.io/components/checkbox/overview\\#noop) `noop`\n\nDo not change the `checked` value or `indeterminate` value. Developers have the power to\nimplement customized click actions.\n\n#### [link](https://material.angular.io/components/checkbox/overview\\#check) `check`\n\nToggle `checked` value of the checkbox, ignore `indeterminate` value. If the\ncheckbox is in `indeterminate` state, the checkbox will display as an `indeterminate` checkbox\nregardless the `checked` value.\n\n#### [link](https://material.angular.io/components/checkbox/overview\\#check-indeterminate) `check-indeterminate`\n\nDefault behavior of `mat-checkbox`. Always set `indeterminate` to `false`\nwhen user click on the `mat-checkbox`.\nThis matches the behavior of native `<input type=\"checkbox\">`.\n\n### [link](https://material.angular.io/components/checkbox/overview\\#accessibility)  Accessibility\n\n`MatCheckbox` uses an internal `<input type=\"checkbox\">` to provide an accessible experience.\nThis internal checkbox receives focus and is automatically labelled by the text content of the\n`<mat-checkbox>` element. Avoid adding other interactive controls into the content of\n`<mat-checkbox>`, as this degrades the experience for users of assistive technology.\n\nAlways provide an accessible label via `aria-label` or `aria-labelledby` for checkboxes without\ndescriptive text content. For dynamic labels, `MatCheckbox` provides input properties for binding\n`aria-label` and `aria-labelledby`. This means that you should not use the `attr.` prefix when\nbinding these properties, as demonstrated below.\n\n```html\n<mat-checkbox [aria-label]=\"isSubscribedToEmailsMessage\">\n</mat-checkbox>\n\n```\n\nAdditionally, `MatCheckbox` now supports the following accessibility properties:\n\n- **`aria-expanded`**: Indicates whether the checkbox controls the visibility of another element. This should be a boolean value ( `true` or `false`).\n- **`aria-controls`**: Specifies the ID of the element that the checkbox controls.\n- **`aria-owns`**: Specifies the ID of the element that the checkbox visually owns.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic checkboxes example in StackBlitz\n\nCopy link to example\n\nView code",
  "title": "Checkbox | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/components/checkbox/overview"
}