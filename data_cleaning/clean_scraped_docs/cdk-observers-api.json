{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\nAPI for observers\n\n## API reference for Angular CDK observers\n\n`\n          import {ObserversModule} from '@angular/cdk/observers';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/cdk/observers/api\\#services)  Services\n\n#### [link](https://material.angular.io/cdk/observers/api\\#ContentObserver) `ContentObserver`\n\nAn injectable service that allows watching elements for changes to their content.\n\n##### Methods\n\n| observe |\n| --- |\n| Observe content changes on an element. |\n| Parameters |\n| --- |\n| element<br> `Element` | The element to observe for content changes. |\n| Returns |\n| --- |\n| `Observable<MutationRecord[]>` |  |\n\n| observe |\n| --- |\n| Observe content changes on an element. |\n| Parameters |\n| --- |\n| element<br> `ElementRef<Element>` | The element to observe for content changes. |\n| Returns |\n| --- |\n| `Observable<MutationRecord[]>` |  |\n\n### [link](https://material.angular.io/cdk/observers/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/cdk/observers/api\\#CdkObserveContent) `CdkObserveContent`\n\nDirective that triggers a callback whenever the content of\nits associated element has changed.\n\nSelector:\\[cdkObserveContent\\]\n\nExported as:cdkObserveContent\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input()<br>`debounce: number` | Debounce interval for emitting the changes. |\n| @Input({ alias: 'cdkObserveContentDisabled', transform: booleanAttribute })<br> <br>`disabled: boolean` | Whether observing content is disabled. This option can be used<br>to disconnect the underlying MutationObserver until it is needed. |\n| @Output('cdkObserveContent')<br> <br>`event: EventEmitter<MutationRecord[]>` | Event emitted for each change in the element's content. |\n\nObservers\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
  "title": "Observers | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/observers/api"
}