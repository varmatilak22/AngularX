{
  "content": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\nAPI for listbox\n\n## API reference for Angular CDK listbox\n\n`\n          import {CdkListboxModule} from '@angular/cdk/listbox';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/cdk/listbox/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/cdk/listbox/api\\#CdkOption) `CdkOption`\n\nA selectable option in a listbox.\n\nSelector:\\[cdkOption\\]\n\nExported as:cdkOption\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input({ alias: 'cdkOptionDisabled', transform: booleanAttribute })<br> <br>`disabled: boolean` | Whether this option is disabled. |\n| @Input('tabindex')<br> <br>`enabledTabIndex: ` | The tabindex of the option when it is enabled. |\n| @Input()<br>`id: ` | The id of the option's host element. |\n| @Input('cdkOptionTypeaheadLabel')<br> <br>`typeaheadLabel: string | null` | The text used to locate this item during listbox typeahead. If not specified,<br>the `textContent` of the item will be used. |\n| @Input('cdkOption')<br> <br>`value: T` | The value of this option. |\n| `destroyed: Subject<void>` | Emits when the option is destroyed. |\n| `element: HTMLElement` | The option's host element |\n| `listbox: CdkListbox<T>` | The parent listbox this option belongs to. |\n\n##### Methods\n\n| deselect |\n| --- |\n| Deselect this option if it is selected. |\n\n| focus |\n| --- |\n| Focus this option. |\n\n| getLabel |\n| --- |\n| Get the label for this element which is required by the FocusableOption interface. |\n\n| isActive |\n| --- |\n| Whether this option is active. |\n\n| isSelected |\n| --- |\n| Whether this option is selected. |\n\n| select |\n| --- |\n| Select this option if it is not selected. |\n\n| toggle |\n| --- |\n| Toggle the selected state of this option. |\n\n#### [link](https://material.angular.io/cdk/listbox/api\\#CdkListbox) `CdkListbox`\n\nSelector:\\[cdkListbox\\]\n\nExported as:cdkListbox\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input('cdkListboxCompareWith')<br> <br>`compareWith: undefined | ((o1: T, o2: T) => boolean)` | The function used to compare option values. |\n| @Input({ alias: 'cdkListboxDisabled', transform: booleanAttribute })<br> <br>`disabled: boolean` | Whether the listbox is disabled. |\n| @Input('tabindex')<br> <br>`enabledTabIndex: ` | The tabindex to use when the listbox is enabled. |\n| @Input()<br>`id: ` | The id of the option's host element. |\n| @Input({ alias: 'cdkListboxMultiple', transform: booleanAttribute })<br> <br>`multiple: boolean` | Whether the listbox allows multiple options to be selected. If the value switches from `true`<br>to `false`, and more than one option is selected, all options are deselected. |\n| @Input({ alias: 'cdkListboxNavigatesDisabledOptions', transform: booleanAttribute })<br> <br>`navigateDisabledOptions: boolean` | Whether keyboard navigation should skip over disabled items. |\n| @Input({ alias: 'cdkListboxNavigationWrapDisabled', transform: booleanAttribute })<br> <br>`navigationWrapDisabled: boolean` | Whether the keyboard navigation should wrap when the user presses arrow down on the last item<br>or arrow up on the first item. |\n| @Input('cdkListboxOrientation')<br> <br>`orientation: \"horizontal\" | \"vertical\"` | The orientation of the listbox. Only affects keyboard interaction, not visual layout. |\n| @Input({ alias: 'cdkListboxUseActiveDescendant', transform: booleanAttribute })<br> <br>`useActiveDescendant: boolean` | Whether the listbox will use active descendant or will move focus onto the options. |\n| @Input('cdkListboxValue')<br> <br>`value: readonly T[]` | The value selected in the listbox, represented as an array of option values. |\n| @Output('cdkListboxValueChange')<br> <br>`valueChange: Subject<ListboxValueChangeEvent<T>>` | Emits when the selected value(s) in the listbox change. |\n| `changeDetectorRef: inject(ChangeDetectorRef)` | The change detector for this listbox. |\n| `destroyed: Subject<void>` | Emits when the listbox is destroyed. |\n| `element: HTMLElement` | The host element of the listbox. |\n| `listKeyManager: ActiveDescendantKeyManager<CdkOption<T>>` | The key manager that manages keyboard navigation for this listbox. |\n| `ngZone: inject(NgZone)` | The Angular zone. |\n| `options: QueryList<CdkOption<T>>` | The child options in this listbox. |\n| `selectionModel: ListboxSelectionModel<T>` | The selection model used by the listbox. |\n\n##### Methods\n\n| deselect |\n| --- |\n| Deselect the given option. |\n| Parameters |\n| --- |\n| option<br> `CdkOption<T>` | The option to deselect |\n\n| deselectValue |\n| --- |\n| Deselect the given value. |\n| Parameters |\n| --- |\n| value<br> `T` | The value to deselect |\n\n| focus |\n| --- |\n| Focus the listbox's host element. |\n\n| isActive |\n| --- |\n| Get whether the given option is active. |\n| Parameters |\n| --- |\n| option<br> `CdkOption<T>` | The option to get the active state of |\n| Returns |\n| --- |\n| `boolean` |  |\n\n| isSelected |\n| --- |\n| Get whether the given option is selected. |\n| Parameters |\n| --- |\n| option<br> `CdkOption<T>` | The option to get the selected state of |\n\n| isValueSelected |\n| --- |\n| Get whether the given value is selected. |\n| Parameters |\n| --- |\n| value<br> `T` | The value to get the selected state of |\n\n| select |\n| --- |\n| Select the given option. |\n| Parameters |\n| --- |\n| option<br> `CdkOption<T>` | The option to select |\n\n| selectValue |\n| --- |\n| Select the given value. |\n| Parameters |\n| --- |\n| value<br> `T` | The value to select |\n\n| setAllSelected |\n| --- |\n| Set the selected state of all options. |\n| Parameters |\n| --- |\n| isSelected<br> `boolean` | The new selected state to set |\n\n| toggle |\n| --- |\n| Toggle the selected state of the given option. |\n| Parameters |\n| --- |\n| option<br> `CdkOption<T>` | The option to toggle |\n\n| toggleValue |\n| --- |\n| Toggle the selected state of the given value. |\n| Parameters |\n| --- |\n| value<br> `T` | The value to toggle |\n\n| triggerOption |\n| --- |\n| Triggers the given option in response to user interaction.<br>- In single selection mode: selects the option and deselects any other selected option.<br>- In multi selection mode: toggles the selected state of the option. |\n| Parameters |\n| --- |\n| option<br> `CdkOption<T>` | The option to trigger |\n\n| triggerRange |\n| --- |\n| Trigger the given range of options in response to user interaction.<br>Should only be called in multi-selection mode. |\n| Parameters |\n| --- |\n| trigger<br> `CdkOption<T>` | The option that was triggered |\n| from<br> `number` | The start index of the options to toggle |\n| to<br> `number` | The end index of the options to toggle |\n| on<br> `boolean` | Whether to toggle the option range on |\n\n### [link](https://material.angular.io/cdk/listbox/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/cdk/listbox/api\\#ListboxValueChangeEvent) `ListboxValueChangeEvent`\n\nChange event that is fired whenever the value of the listbox changes.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `listbox: CdkListbox<T>` | Reference to the listbox that emitted the event. |\n| `option: CdkOption<T> | null` | Reference to the option that was triggered. |\n| `value: readonly T[]` | The new value of the listbox. |\n\nListbox\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
  "title": "Listbox | Angular Material",
  "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
  "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
  "sourceURL": "https://material.angular.io/cdk/listbox/api"
}