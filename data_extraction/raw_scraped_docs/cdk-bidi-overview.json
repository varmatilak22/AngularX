{
  "scrapeId": "f9b6df26-0eb5-48c1-a137-4ec4a1ebe296",
  "sourceURL": "https://material.angular.io/cdk/bidi/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\n## Overview for bidi\n\nThe `bidi` package provides a common system for components to get and respond to change in the\napplication's LTR/RTL layout direction.\n\n### [link](https://material.angular.io/cdk/bidi/overview\\#directionality)  Directionality\n\nWhen including the CDK's `BidiModule`, components can inject `Directionality` to get the current\ntext direction (RTL or LTR);\n\n#### [link](https://material.angular.io/cdk/bidi/overview\\#example)  Example\n\n```ts\n@Component({ ... })\nexport class MyWidget implements OnDestroy {\n\n  /** Whether the widget is in RTL mode or not. */\n  private isRtl: boolean;\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  constructor(dir: Directionality) {\n    this.isRtl = dir.value === 'rtl';\n\n    this._dirChangeSubscription = dir.change.subscribe(() => {\n      this.flipDirection();\n    });\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n  }\n}\n\n```\n\n### [link](https://material.angular.io/cdk/bidi/overview\\#the-dir-directive)  The `Dir` directive\n\nThe `BidiModule` also includes a directive that matches any elements with a `dir` attribute. This\ndirective has the same API as Directionality and provides itself _as_ `Directionality`. By doing\nthis, any component that injects `Directionality` will get the closest ancestor layout direction\ncontext.\n\n### [link](https://material.angular.io/cdk/bidi/overview\\#interpreting-the-auto-value)  Interpreting the `auto` value\n\nThe CDK also supports the native `auto` value for the `dir` attribute, however there's a difference\nin how it is interpreted. Some parts of the CDK, like overlays and keyboard navigation, need to know\nif the element is in an RTL or LTR layout in order to work correctly. For performance reasons, we\nresolve the `auto` value by looking at the browser's language ( `navigator.language`) and matching\nit against a set of known RTL locales. This differs from the way the browser handles it, which is\nbased on the text content of the element.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-37b42c53-62e6-4e86-8fb4-2e92fe37a6d4.png"
  },
  "metadata": {
    "twitter:title": "Angular Material",
    "apple-mobile-web-app-capable": "yes",
    "favicon": "https://material.angular.io/cdk/bidi/assets/img/favicon.ico?v=19.1.0",
    "og:image:width": "1339",
    "og:type": "website",
    "viewport": "width=device-width, initial-scale=1",
    "twitter:site": "@Angular",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:title": "Angular Material",
    "mobile-web-app-capable": "yes",
    "title": "Bidirectionality | Angular Material",
    "author": "Angular Components Team",
    "ogSiteName": "Angular Material",
    "twitter:card": "summary",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "ogLocale": "en_US",
    "language": "en-US",
    "ogTitle": "Angular Material",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "theme-color": "#d7e3ff",
    "og:site_name": "Angular Material",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:creator": "@Angular",
    "og:url": "https://material.angular.io/",
    "ogUrl": "https://material.angular.io/",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "og:image:type": "image/png",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:height": "943",
    "og:locale": "en_US",
    "scrapeId": "f9b6df26-0eb5-48c1-a137-4ec4a1ebe296",
    "sourceURL": "https://material.angular.io/cdk/bidi/overview",
    "url": "https://material.angular.io/cdk/bidi/overview",
    "statusCode": 200
  }
}