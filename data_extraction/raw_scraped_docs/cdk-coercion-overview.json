{
  "scrapeId": "e8256094-0590-4a15-95c2-86e331acd40e",
  "sourceURL": "https://material.angular.io/cdk/coercion/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Accessibility](https://material.angular.io/cdk/a11y) [Accordion](https://material.angular.io/cdk/accordion) [Bidirectionality](https://material.angular.io/cdk/bidi) [Clipboard](https://material.angular.io/cdk/clipboard) [Coercion](https://material.angular.io/cdk/coercion) [Collections](https://material.angular.io/cdk/collections) [Component Harnesses](https://material.angular.io/cdk/testing) [Dialog](https://material.angular.io/cdk/dialog) [Drag and Drop](https://material.angular.io/cdk/drag-drop) [Layout](https://material.angular.io/cdk/layout) [Listbox](https://material.angular.io/cdk/listbox) [Menu](https://material.angular.io/cdk/menu) [Observers](https://material.angular.io/cdk/observers) [Overlay](https://material.angular.io/cdk/overlay) [Platform](https://material.angular.io/cdk/platform) [Portal](https://material.angular.io/cdk/portal) [Scrolling](https://material.angular.io/cdk/scrolling) [Stepper](https://material.angular.io/cdk/stepper) [Table](https://material.angular.io/cdk/table) [Text field](https://material.angular.io/cdk/text-field) [Tree](https://material.angular.io/cdk/tree)\n\n## Overview for coercion\n\nUtility functions for coercing `@Input` s into specific types.\n\n### [link](https://material.angular.io/cdk/coercion/overview\\#example)  Example\n\n```ts\nimport {Directive, ElementRef} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  BooleanInput,\n  NumberInput,\n  coerceNumberProperty,\n  coerceElement,\n} from '@angular/cdk/coercion';\n\n@Directive({\n  selector: 'my-button',\n  host: {\n    '[disabled]': 'disabled',\n    '(click)': 'greet()',\n  }\n})\nclass MyButton {\n  // Using `coerceBooleanProperty` allows for the disabled value of a button to be set as\n  // `<my-button disabled></my-button>` instead of `<my-button [disabled]=\"true\"></my-button>`.\n  // It also allows for a string to be passed like `<my-button disabled=\"true\"></my-button>`.\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  // `coerceNumberProperty` turns any value coming in from the view into a number, allowing the\n  // consumer to use a shorthand string while storing the parsed number in memory. E.g. the consumer can write:\n  // `<my-button greetDelay=\"500\"></my-button>` instead of `<my-button [greetDelay]=\"500\"></my-button>`.\n  // The second parameter specifies a fallback value to be used if the value can't be\n  // parsed to a number.\n  @Input()\n  get greetDelay() { return this._greetDelay; }\n  set greetDelay(value: NumberInput) {\n    this._greetDelay = coerceNumberProperty(value, 0);\n  }\n  private _greetDelay = 0;\n\n  greet() {\n    setTimeout(() => alert('Hello!'), this.greetDelay);\n  }\n\n  // `coerceElement` allows you to accept either an `ElementRef`\n  // or a raw DOM node and to always return a DOM node.\n  getElement(elementOrRef: ElementRef<HTMLElement> | HTMLElement): HTMLElement {\n    return coerceElement(elementOrRef);\n  }\n}\n\n```\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-9da51967-eb7b-4013-8e2a-46b30391c0ba.png"
  },
  "metadata": {
    "title": "Coercion | Angular Material",
    "og:site_name": "Angular Material",
    "og:url": "https://material.angular.io/",
    "favicon": "https://material.angular.io/cdk/coercion/assets/img/favicon.ico?v=19.1.0",
    "ogSiteName": "Angular Material",
    "ogLocale": "en_US",
    "twitter:title": "Angular Material",
    "ogUrl": "https://material.angular.io/",
    "theme-color": "#d7e3ff",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "og:title": "Angular Material",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:locale": "en_US",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "twitter:card": "summary",
    "author": "Angular Components Team",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:width": "1339",
    "og:image:height": "943",
    "mobile-web-app-capable": "yes",
    "apple-mobile-web-app-capable": "yes",
    "twitter:creator": "@Angular",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:image:type": "image/png",
    "language": "en-US",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "og:type": "website",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "twitter:site": "@Angular",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "viewport": "width=device-width, initial-scale=1",
    "ogTitle": "Angular Material",
    "scrapeId": "e8256094-0590-4a15-95c2-86e331acd40e",
    "sourceURL": "https://material.angular.io/cdk/coercion/overview",
    "url": "https://material.angular.io/cdk/coercion/overview",
    "statusCode": 200
  }
}