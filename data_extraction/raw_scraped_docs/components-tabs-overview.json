{
  "scrapeId": "88fd1e1d-08b7-4837-a7e8-1baa029448d1",
  "sourceURL": "https://material.angular.io/components/tabs/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for tabs\n\nAngular Material tabs organize content into separate views where only one view can be\nvisible at a time. Each tab's label is shown in the tab header and the active\ntab's label is designated with the animated ink bar. When the list of tab labels exceeds the width\nof the header, pagination controls appear to let the user scroll left and right across the labels.\n\nThe active tab may be set using the `selectedIndex` input or when the user selects one of the\ntab labels in the header.\n\nBasic use of the tab group\n\nlinkcodeopen\\_in\\_new\n\nFirst\n\nSecond\n\nThird\n\nContent 1\n\n### [link](https://material.angular.io/components/tabs/overview\\#events)  Events\n\nThe `selectedTabChange` output event is emitted when the active tab changes.\n\nThe `focusChange` output event is emitted when the user puts focus on any of the tab labels in\nthe header, usually through keyboard navigation.\n\n### [link](https://material.angular.io/components/tabs/overview\\#labels)  Labels\n\nIf a tab's label is only text then the simple tab-group API can be used.\n\ncontent\\_copy\n\n```\n<mat-tab-group>\n  <mat-tab label=\"First\"> Content 1 </mat-tab>\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\n  <mat-tab label=\"Third\"> Content 3 </mat-tab>\n</mat-tab-group>\n\n```\n\nFor more complex labels, add a template with the `mat-tab-label` directive inside the `mat-tab`.\n\ncontent\\_copy\n\n```\n<ng-template mat-tab-label>\n  <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n  First\n</ng-template>\n```\n\n### [link](https://material.angular.io/components/tabs/overview\\#dynamic-height)  Dynamic Height\n\nBy default, the tab group will not change its height to the height of the currently active tab. To\nchange this, set the `dynamicHeight` input to true. The tab body will animate its height according\nto the height of the active tab.\n\ncontent\\_copy\n\n```\n<mat-tab-group dynamicHeight>\n```\n\n### [link](https://material.angular.io/components/tabs/overview\\#tabs-and-navigation)  Tabs and navigation\n\nWhile `<mat-tab-group>` is used to switch between views within a single route, `<nav mat-tab-nav-bar>`\nprovides a tab-like UI for navigating between routes.\n\ncontent\\_copy\n\n```\n<nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n  @for (link of links; track link) {\n    <a mat-tab-link\n      (click)=\"activeLink = link\"\n      [active]=\"activeLink == link\"> {{link}} </a>\n  }\n  <a mat-tab-link disabled>Disabled Link</a>\n</nav>\n<mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\n```\n\nThe `mat-tab-nav-bar` is not tied to any particular router; it works with normal `<a>` elements and\nuses the `active` property to determine which tab is currently active. The corresponding\n`<router-outlet>` must be wrapped in an `<mat-tab-nav-panel>` component and should typically be\nplaced relatively close to the `mat-tab-nav-bar` (see [Accessibility](https://material.angular.io/components/tabs/overview#accessibility)).\n\n### [link](https://material.angular.io/components/tabs/overview\\#lazy-loading)  Lazy Loading\n\nBy default, the tab contents are eagerly loaded. Eagerly loaded tabs\nwill initialize the child components but not inject them into the DOM\nuntil the tab is activated.\n\nIf the tab contains several complex child components or the tab's contents\nrely on DOM calculations during initialization, it is advised\nto lazy load the tab's content.\n\nTab contents can be lazy loaded by declaring the body in a `ng-template`\nwith the `matTabContent` attribute.\n\ncontent\\_copy\n\n```\n<mat-tab label=\"First\">\n  <ng-template matTabContent>\n    Content 1 - Loaded: {{getTimeLoaded(1) | date:'medium'}}\n  </ng-template>\n</mat-tab>\n```\n\n### [link](https://material.angular.io/components/tabs/overview\\#label-alignment)  Label alignment\n\nIf you want to align the tab labels in the center or towards the end of the container, you can\ndo so using the `[mat-align-tabs]` attribute.\n\ncontent\\_copy\n\n```\n<mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\n```\n\n### [link](https://material.angular.io/components/tabs/overview\\#controlling-the-tab-animation)  Controlling the tab animation\n\nYou can control the duration of the tabs' animation using the `animationDuration` input. If you\nwant to disable the animation completely, you can do so by setting the properties to `0ms`. The\nduration can be configured globally using the `MAT_TABS_CONFIG` injection token.\n\ncontent\\_copy\n\n```\n<mat-tab-group animationDuration=\"2000ms\">\n```\n\n### [link](https://material.angular.io/components/tabs/overview\\#keeping-the-tab-content-inside-the-dom-while-its-off-screen)  Keeping the tab content inside the DOM while it's off-screen\n\nBy default the `<mat-tab-group>` will remove the content of off-screen tabs from the DOM until they\ncome into the view. This is optimal for most cases since it keeps the DOM size smaller, but it\nisn't great for others like when a tab has an `<audio>` or `<video>` element, because the content\nwill be re-initialized whenever the user navigates to the tab. If you want to keep the content of\noff-screen tabs in the DOM, you can set the `preserveContent` input to `true`.\n\nTab group that keeps its content inside the DOM when it's off-screen.\n\nlinkcodeopen\\_in\\_new\n\nStart the video in the first tab and navigate to the second one to see how it keeps playing.\n\nFirst\n\nSecond\n\nHow to stay fast and fresh with Angular - YouTube\n\nChrome for Developers\n\n780K subscribers\n\n[How to stay fast and fresh with Angular](https://www.youtube.com/watch?v=B-lipaiZII8)\n\nChrome for Developers\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nMore videos\n\n## More videos\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=B-lipaiZII8&embeds_referring_euri=https%3A%2F%2Fmaterial.angular.io%2F)\n\n0:00\n\n0:00 / 20:15•Live\n\n•\n\n[Watch on YouTube](https://www.youtube.com/watch?v=B-lipaiZII8 \"Watch on YouTube\")\n\n### [link](https://material.angular.io/components/tabs/overview\\#accessibility)  Accessibility\n\n`MatTabGroup` and `MatTabNavBar` both implement the\n[ARIA Tabs design pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel). Both components\ncompose `tablist`, `tab`, and `tabpanel` elements with handling for keyboard inputs and focus\nmanagement.\n\nWhen using `MatTabNavBar`, you should place the `<mat-tab-nav-panel>` component relatively close to\nif not immediately adjacent to the `<nav mat-tab-nav-bar>` component so that it's easy for screen\nreader users to identify the association.\n\n#### [link](https://material.angular.io/components/tabs/overview\\#labels-1)  Labels\n\nAlways provide an accessible label via `aria-label` or `aria-describedby` for tabs without\ndescriptive text content.\n\nWhen using `MatTabNavGroup`, always specify a label for the `<nav>` element.\n\n#### [link](https://material.angular.io/components/tabs/overview\\#keyboard-interaction)  Keyboard interaction\n\n`MatTabGroup` and `MatTabNavBar` both implement the following keyboard interactions:\n\n| Shortcut | Action |\n| --- | --- |\n| `LEFT_ARROW` | Move focus to previous tab |\n| `RIGHT_ARROW` | Move focus to next tab |\n| `HOME` | Move focus to first tab |\n| `END` | Move focus to last tab |\n| `SPACE` or `ENTER` | Switch to focused tab |\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic use of the tab group example in StackBlitz\n\nCopy link to example\n\nView code\n\nCopy snippet\n\nView full example\n\nEdit Tab group that keeps its content inside the DOM when it's off-screen. example in StackBlitz",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-dc734de5-ac43-47a6-b8d3-259383d34923.png"
  },
  "metadata": {
    "title": "Tabs | Angular Material",
    "language": "en-US",
    "og:type": "website",
    "author": "Angular Components Team",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "viewport": [
      "width=device-width, initial-scale=1",
      "width=device-width, initial-scale=1"
    ],
    "og:url": "https://material.angular.io/",
    "ogLocale": "en_US",
    "og:site_name": "Angular Material",
    "og:image:type": "image/png",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "ogUrl": "https://material.angular.io/",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:title": "Angular Material",
    "og:image:height": "943",
    "ogTitle": "Angular Material",
    "apple-mobile-web-app-capable": "yes",
    "twitter:card": "summary",
    "mobile-web-app-capable": "yes",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:creator": "@Angular",
    "og:locale": "en_US",
    "ogSiteName": "Angular Material",
    "favicon": "https://material.angular.io/assets/img/favicon.ico?v=19.1.0",
    "og:title": "Angular Material",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:image:width": "1339",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "theme-color": "#d7e3ff",
    "twitter:site": "@Angular",
    "scrapeId": "88fd1e1d-08b7-4837-a7e8-1baa029448d1",
    "sourceURL": "https://material.angular.io/components/tabs/overview",
    "url": "https://material.angular.io/components/tabs/overview",
    "statusCode": 200
  }
}