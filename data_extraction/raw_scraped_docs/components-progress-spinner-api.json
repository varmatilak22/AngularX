{
  "scrapeId": "f27c43af-13b1-43a9-8394-402a0b2050e3",
  "sourceURL": "https://material.angular.io/components/progress-spinner/api",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\nAPI for progress-spinner\n\n## API reference for Angular Material progress-spinner\n\n`\n          import {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/progress-spinner/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/components/progress-spinner/api\\#MatProgressSpinner) `MatProgressSpinner`\n\nSelector:mat-progress-spinnermat-spinner\n\nExported as:matProgressSpinner\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input()<br>`color: string` | Theme color of the progress spinner. This API is supported in M2 themes only, it<br>has no effect in M3 themes. For color customization in M3, see [https://material.angular.io/components/progress-spinner/styling](https://material.angular.io/components/progress-spinner/styling).<br>For information on applying color variants in M3, see<br>[https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants](https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants) |\n| @Input({ transform: numberAttribute })<br> <br>`diameter: number` | The diameter of the progress spinner (will set width and height of svg). |\n| @Input()<br>`mode: ProgressSpinnerMode` | Mode of the progress bar.<br>Input must be one of these values: determinate, indeterminate, buffer, query, defaults to<br>'determinate'.<br>Mirrored to mode attribute. |\n| @Input({ transform: numberAttribute })<br> <br>`strokeWidth: number` | Stroke width of the progress spinner. |\n| @Input({ transform: numberAttribute })<br> <br>`value: number` | Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. |\n\n### [link](https://material.angular.io/components/progress-spinner/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/progress-spinner/api\\#MatProgressSpinnerDefaultOptions) `MatProgressSpinnerDefaultOptions`\n\nDefault `mat-progress-spinner` options that can be overridden.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `color: ThemePalette` | Default theme color of the progress spinner. This API is supported in M2 themes only, it<br>has no effect in M3 themes. For color customization in M3, see [https://material.angular.io/components/progress-spinner/styling](https://material.angular.io/components/progress-spinner/styling).<br>For information on applying color variants in M3, see<br>[https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants](https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants) |\n| `diameter: number` | Diameter of the spinner. |\n| `strokeWidth: number` | Width of the spinner's stroke. |\n\n### [link](https://material.angular.io/components/progress-spinner/api\\#type_aliases)  Type aliases\n\n#### [link](https://material.angular.io/components/progress-spinner/api\\#ProgressSpinnerMode) `ProgressSpinnerMode`\n\nPossible mode for a progress spinner.\n\n```docs-markdown-code\ntype ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\n```\n\n### [link](https://material.angular.io/components/progress-spinner/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/components/progress-spinner/api\\#MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS) `MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS`\n\nInjection token to be used to override the default options for `mat-progress-spinner`.\n\n```docs-markdown-code\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS: InjectionToken<MatProgressSpinnerDefaultOptions>;\n\n```\n\n#### [link](https://material.angular.io/components/progress-spinner/api\\#MatSpinner) `MatSpinner`\n\nDeprecated\n\n```docs-markdown-code\nconst MatSpinner: typeof MatProgressSpinner;\n\n```\n\n## API reference for Angular Material progress-spinner-testing\n\n`\n          import {MatProgressSpinnerHarness} from '@angular/material/progress-spinner/testing';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/progress-spinner/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/components/progress-spinner/api\\#MatProgressSpinnerHarness) `MatProgressSpinnerHarness`extends [ComponentHarness](https://material.angular.io/components/progress-spinner/cdk/testing/api\\#ComponentHarness)\n\nHarness for interacting with a MDC based mat-progress-spinner in tests.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `staticÂ hostSelector: '.mat-mdc-progress-spinner'` | The selector for the host element of a `MatProgressSpinner` instance. |\n\n##### Methods\n\n| async<br> <br>getMode |\n| --- |\n| Gets the progress spinner's mode. |\n| Returns |\n| --- |\n| `Promise<ProgressSpinnerMode>` |  |\n\n| async<br> <br>getValue |\n| --- |\n| Gets the progress spinner's value. |\n| Returns |\n| --- |\n| `Promise<number | null>` |  |\n\n| async<br> <br>host |\n| --- |\n| Gets a `Promise` for the `TestElement` representing the host element of the component. |\n| Returns |\n| --- |\n| `Promise<TestElement>` |  |\n\n| static<br> <br>with |\n| --- |\n| Gets a `HarnessPredicate` that can be used to search for a progress spinnner with specific<br>attributes. |\n| Parameters |\n| --- |\n| options<br> `ProgressSpinnerHarnessFilters = {}` | Options for filtering which progress spinner instances are considered a match. |\n| Returns |\n| --- |\n| `HarnessPredicate<T>` | a `HarnessPredicate` configured with the given options. |\n\n### [link](https://material.angular.io/components/progress-spinner/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/progress-spinner/api\\#ProgressSpinnerHarnessFilters) `ProgressSpinnerHarnessFilters`\n\nA set of criteria that can be used to filter a list of `MatProgressSpinnerHarness` instances.\n\nProgress spinner\n\nTesting\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nImport Progress Spinner instead. Note that the\n\\`mat-spinner\\` selector isn't deprecated. Will be removed in v16.0.0 or later.\n\nCopy import to the clipboard",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-34651564-2225-4da2-ada5-46dd9b04d133.png"
  },
  "metadata": {
    "author": "Angular Components Team",
    "title": "Progress spinner | Angular Material",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:width": "1339",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "favicon": "https://material.angular.io/components/progress-spinner/assets/img/favicon.ico?v=19.1.0",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "ogTitle": "Angular Material",
    "twitter:creator": "@Angular",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "twitter:site": "@Angular",
    "ogLocale": "en_US",
    "og:site_name": "Angular Material",
    "apple-mobile-web-app-capable": "yes",
    "og:type": "website",
    "mobile-web-app-capable": "yes",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "viewport": "width=device-width, initial-scale=1",
    "og:image:type": "image/png",
    "theme-color": "#d7e3ff",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "twitter:title": "Angular Material",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:url": "https://material.angular.io/",
    "ogUrl": "https://material.angular.io/",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:card": "summary",
    "language": "en-US",
    "og:locale": "en_US",
    "og:title": "Angular Material",
    "ogSiteName": "Angular Material",
    "og:image:height": "943",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "scrapeId": "f27c43af-13b1-43a9-8394-402a0b2050e3",
    "sourceURL": "https://material.angular.io/components/progress-spinner/api",
    "url": "https://material.angular.io/components/progress-spinner/api",
    "statusCode": 200
  }
}