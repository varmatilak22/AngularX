{
  "scrapeId": "e6e9584c-6425-43dd-8b79-b9b4d05ad0d0",
  "sourceURL": "https://material.angular.io/components/grid-list/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for grid-list\n\n`mat-grid-list` is a two-dimensional list view that arranges cells into grid-based layout.\nSee Material Design spec [here](https://material.io/design/components/image-lists.html).\n\nBasic grid-list\n\nlinkcodeopen\\_in\\_new\n\n1\n\n2\n\n3\n\n4\n\n### [link](https://material.angular.io/components/grid-list/overview\\#setting-the-number-of-columns)  Setting the number of columns\n\nAn `mat-grid-list` must specify a `cols` attribute which sets the number of columns in the grid. The\nnumber of rows will be automatically determined based on the number of columns and the number of\nitems.\n\n### [link](https://material.angular.io/components/grid-list/overview\\#setting-the-row-height)  Setting the row height\n\nThe height of the rows in a grid list can be set via the `rowHeight` attribute. Row height for the\nlist can be calculated in three ways:\n\n1. **Fixed height**: The height can be in `px`, `em`, or `rem`. If no units are specified, `px`\nunits are assumed (e.g. `100px`, `5em`, `250`).\n\n2. **Ratio**: This ratio is column-width:row-height, and must be passed in with a colon, not a\ndecimal (e.g. `4:3`).\n\n3. **Fit**: Setting `rowHeight` to `fit` This mode automatically divides the available height by\nthe number of rows. Please note the height of the grid-list or its container must be set.\n\n\nIf `rowHeight` is not specified, it defaults to a `1:1` ratio of width:height.\n\n### [link](https://material.angular.io/components/grid-list/overview\\#setting-the-gutter-size)  Setting the gutter size\n\nThe gutter size can be set to any `px`, `em`, or `rem` value with the `gutterSize` property. If no\nunits are specified, `px` units are assumed. By default the gutter size is `1px`.\n\n### [link](https://material.angular.io/components/grid-list/overview\\#adding-tiles-that-span-multiple-rows-or-columns)  Adding tiles that span multiple rows or columns\n\nIt is possible to set the rowspan and colspan of each `mat-grid-tile` individually, using the\n`rowspan` and `colspan` properties. If not set, they both default to `1`. The `colspan` must not\nexceed the number of `cols` in the `mat-grid-list`. There is no such restriction on the `rowspan`\nhowever, more rows will simply be added for it the tile to fill.\n\n### [link](https://material.angular.io/components/grid-list/overview\\#tile-headers-and-footers)  Tile headers and footers\n\nA header and footer can be added to an `mat-grid-tile` using the `mat-grid-tile-header` and\n`mat-grid-tile-footer` elements respectively.\n\n### [link](https://material.angular.io/components/grid-list/overview\\#accessibility)  Accessibility\n\nBy default, the grid-list assumes that it will be used in a purely decorative fashion and thus sets\nno roles, ARIA attributes, or keyboard shortcuts. This is equivalent to having a sequence of `<div>`\nelements on the page. Any interactive content within the grid-list should be given an appropriate\naccessibility treatment based on the specific workflow of your application.\n\nIf the grid-list is used to present a list of _non-interactive_ content items, then the grid-list\nelement should be given `role=\"list\"` and each tile should be given `role=\"listitem\"`.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic grid-list example in StackBlitz\n\nCopy link to example\n\nView code",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-de8284af-655b-43ab-88a5-0c9922f629b5.png"
  },
  "metadata": {
    "og:url": "https://material.angular.io/",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "apple-mobile-web-app-capable": "yes",
    "ogSiteName": "Angular Material",
    "og:type": "website",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:title": "Angular Material",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "og:image:width": "1339",
    "ogUrl": "https://material.angular.io/",
    "twitter:creator": "@Angular",
    "ogLocale": "en_US",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "viewport": "width=device-width, initial-scale=1",
    "og:site_name": "Angular Material",
    "og:image:type": "image/png",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "favicon": "https://material.angular.io/components/grid-list/assets/img/favicon.ico?v=19.1.0",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "mobile-web-app-capable": "yes",
    "og:locale": "en_US",
    "language": "en-US",
    "og:title": "Angular Material",
    "theme-color": "#d7e3ff",
    "title": "Grid list | Angular Material",
    "author": "Angular Components Team",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "ogTitle": "Angular Material",
    "twitter:site": "@Angular",
    "og:image:height": "943",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "twitter:card": "summary",
    "scrapeId": "e6e9584c-6425-43dd-8b79-b9b4d05ad0d0",
    "sourceURL": "https://material.angular.io/components/grid-list/overview",
    "url": "https://material.angular.io/components/grid-list/overview",
    "statusCode": 200
  }
}