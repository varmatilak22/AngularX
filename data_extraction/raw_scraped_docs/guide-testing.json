{
  "scrapeId": "6c5605ba-f7e3-4ef5-9b85-78db0ae7ceea",
  "sourceURL": "https://angular.dev/guide/testing",
  "statusCode": 200,
  "data": {
    "markdown": "Skip to main content\n\nmenu\n\nmenuDocs\n\n- Introduction\n\n  - [What is Angular?](https://angular.dev/overview)\n  - [Installation](https://angular.dev/installation)\n  - Essentials\n  - [Start coding! ðŸš€](https://angular.dev/tutorials/learn-angular)\n- In-depth Guides\n\n  - Signals\n  - Components\n  - Templates\n  - Directives\n  - Dependency Injection\n  - Routing\n  - Forms\n  - HTTP Client\n  - Server-side & hybrid-rendering\n  - Testing\n  - Internationalization\n  - Experimental features\n- Developer Tools\n\n  - Angular CLI\n  - Libraries\n  - [DevTools](https://angular.dev/tools/devtools)\n  - [Language Service](https://angular.dev/tools/language-service)\n- Best Practices\n\n  - [Style Guide](https://angular.dev/style-guide)\n  - [Security](https://angular.dev/best-practices/security)\n  - [Accessibility](https://angular.dev/best-practices/a11y)\n  - Performance\n  - [Keeping up-to-date](https://angular.dev/update)\n- Extended Ecosystem\n\n  - [NgModules](https://angular.dev/guide/ngmodules/overview)\n  - Animations\n  - Using RxJS with Angular\n  - Service Workers & PWAs\n  - [Web workers](https://angular.dev/ecosystem/web-workers)\n  - [Custom build pipeline](https://angular.dev/ecosystem/custom-build-pipeline)\n  - [Angular Fire](https://github.com/angular/angularfire#readme)\n  - [Google Maps](https://github.com/angular/components/tree/main/src/google-maps#readme)\n  - [Google Pay](https://github.com/google-pay/google-pay-button#angular)\n  - [YouTube player](https://github.com/angular/components/blob/main/src/youtube-player/README.md)\n  - [Angular CDK](https://material.angular.io/cdk/categories)\n  - [Angular Material](https://material.angular.io/)\n\n- arrow\\_backTesting\n  - [Overview](https://angular.dev/guide/testing)\n  - [Code coverage](https://angular.dev/guide/testing/code-coverage)\n  - [Testing services](https://angular.dev/guide/testing/services)\n  - [Basics of testing components](https://angular.dev/guide/testing/components-basics)\n  - [Component testing scenarios](https://angular.dev/guide/testing/components-scenarios)\n  - [Testing attribute directives](https://angular.dev/guide/testing/attribute-directives)\n  - [Testing pipes](https://angular.dev/guide/testing/pipes)\n  - [Debugging tests](https://angular.dev/guide/testing/debugging)\n  - [Testing utility APIs](https://angular.dev/guide/testing/utility-apis)\n  - [Component harnesses overview](https://angular.dev/guide/testing/component-harnesses-overview)\n  - [Using component harnesses in tests](https://angular.dev/guide/testing/using-component-harnesses)\n  - [Creating harnesses for your components](https://angular.dev/guide/testing/creating-component-harnesses)\n  - [Adding harness support for additional testing environments](https://angular.dev/guide/testing/component-harnesses-testing-environments)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nTesting your Angular application helps you check that your application is working as you expect.\n\n## [Set up testing](https://angular.dev/guide/testing\\#set-up-testing)\n\nThe Angular CLI downloads and installs everything you need to test an Angular application with [Jasmine testing framework](https://jasmine.github.io/).\n\nThe project you create with the CLI is immediately ready to test.\nJust run the [`ng test`](https://angular.dev/guide/cli/test) CLI command:\n\n```\n      ng test\n\n```\n\ncheck\n\nThe `ng test` command builds the application in _watch mode_,\nand launches the [Karma test runner](https://karma-runner.github.io/).\n\nThe console output looks like below:\n\n```\n      02 11 2022 09:08:28.605:INFO [karma-server]: Karma v6.4.1 server started at http://localhost:9876/02 11 2022 09:08:28.607:INFO [launcher]: Launching browsers Chrome with concurrency unlimited02 11 2022 09:08:28.620:INFO [launcher]: Starting browser Chrome02 11 2022 09:08:31.312:INFO [Chrome]: Connected on socket -LaEYvD2R7MdcS0-AAAB with id 31534482Chrome: Executed 3 of 3 SUCCESS (0.193 secs / 0.172 secs)TOTAL: 3 SUCCESS\n\n```\n\ncheck\n\nThe last line of the log shows that Karma ran three tests that all passed.\n\nThe test output is displayed in the browser using [Karma Jasmine HTML Reporter](https://github.com/dfederm/karma-jasmine-html-reporter).\n\n![Jasmine HTML Reporter in the browser](https://angular.dev/guide/assets/images/guide/testing/initial-jasmine-html-reporter.png)\n\nClick on a test row to re-run just that test or click on a description to re-run the tests in the selected test group (\"test suite\").\n\nMeanwhile, the `ng test` command is watching for changes.\n\nTo see this in action, make a small change to `app.component.ts` and save.\nThe tests run again, the browser refreshes, and the new test results appear.\n\n## [Configuration](https://angular.dev/guide/testing\\#configuration)\n\nThe Angular CLI takes care of Jasmine and Karma configuration for you. It constructs the full configuration in memory, based on options specified in the `angular.json` file.\n\nIf you want to customize Karma, you can create a `karma.conf.js` by running the following command:\n\n```\n      ng generate config karma\n\n```\n\ncheck\n\n**HELPFUL:** Read more about Karma configuration in the [Karma configuration guide](http://karma-runner.github.io/6.4/config/configuration-file.html).\n\n### [Other test frameworks](https://angular.dev/guide/testing\\#other-test-frameworks)\n\nYou can also unit test an Angular application with other testing libraries and test runners.\nEach library and runner has its own distinctive installation procedures, configuration, and syntax.\n\n### [Test file name and location](https://angular.dev/guide/testing\\#test-file-name-and-location)\n\nInside the `src/app` folder the Angular CLI generated a test file for the `AppComponent` named `app.component.spec.ts`.\n\n**IMPORTANT:** The test file extension **must be `.spec.ts`** so that tooling can identify it as a file with tests (also known as a _spec_ file).\n\nThe `app.component.ts` and `app.component.spec.ts` files are siblings in the same folder.\nThe root file names ( `app.component`) are the same for both files.\n\nAdopt these two conventions in your own projects for _every kind_ of test file.\n\n#### [Place your spec file next to the file it tests](https://angular.dev/guide/testing\\#place-your-spec-file-next-to-the-file-it-tests)\n\nIt's a good idea to put unit test spec files in the same folder\nas the application source code files that they test:\n\n- Such tests are painless to find\n- You see at a glance if a part of your application lacks tests\n- Nearby tests can reveal how a part works in context\n- When you move the source (inevitable), you remember to move the test\n- When you rename the source file (inevitable), you remember to rename the test file\n\n#### [Place your spec files in a test folder](https://angular.dev/guide/testing\\#place-your-spec-files-in-a-test-folder)\n\nApplication integration specs can test the interactions of multiple parts\nspread across folders and modules.\nThey don't really belong to any part in particular, so they don't have a\nnatural home next to any one file.\n\nIt's often better to create an appropriate folder for them in the `tests` directory.\n\nOf course specs that test the test helpers belong in the `test` folder,\nnext to their corresponding helper files.\n\n## [Testing in continuous integration](https://angular.dev/guide/testing\\#testing-in-continuous-integration)\n\nOne of the best ways to keep your project bug-free is through a test suite, but you might forget to run tests all the time.\n\nContinuous integration (CI) servers let you set up your project repository so that your tests run on every commit and pull request.\n\nTo test your Angular CLI application in Continuous integration (CI) run the following command:\n\n```\n      ng test --no-watch --no-progress --browsers=ChromeHeadless\n\n```\n\ncheck\n\n## [More information on testing](https://angular.dev/guide/testing\\#more-information-on-testing)\n\nAfter you've set up your application for testing, you might find the following testing guides useful.\n\n|  | Details |\n| :-- | :-- |\n| [Code coverage](https://angular.dev/guide/guide/testing/code-coverage) | How much of your app your tests are covering and how to specify required amounts. |\n| [Testing services](https://angular.dev/guide/guide/testing/services) | How to test the services your application uses. |\n| [Basics of testing components](https://angular.dev/guide/guide/testing/components-basics) | Basics of testing Angular components. |\n| [Component testing scenarios](https://angular.dev/guide/guide/testing/components-scenarios) | Various kinds of component testing scenarios and use cases. |\n| [Testing attribute directives](https://angular.dev/guide/guide/testing/attribute-directives) | How to test your attribute directives. |\n| [Testing pipes](https://angular.dev/guide/guide/testing/pipes) | How to test pipes. |\n| [Debugging tests](https://angular.dev/guide/guide/testing/debugging) | Common testing bugs. |\n| [Testing utility APIs](https://angular.dev/guide/guide/testing/utility-apis) | Angular testing features. |",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-ca7fe2e1-fa02-4917-a05d-0e0e620e5043.png"
  },
  "metadata": {
    "ogDescription": "The web development framework for building modern apps.",
    "description": "The web development framework for building modern apps.",
    "msapplication-TileColor": "#e90464",
    "theme-color": "#ffffff",
    "application-name": "Angular",
    "og:title": "Angular",
    "og:description": "The web development framework for building modern apps.",
    "ogTitle": "Angular",
    "language": "en",
    "favicon": "https://angular.dev/assets/icons/favicon-48x48.png",
    "og:url": "https://angular.dev/",
    "og:type": "website",
    "ogImage": "https://angular.dev/assets/images/ng-image.jpg",
    "og:image": "https://angular.dev/assets/images/ng-image.jpg",
    "twitter:card": "summary_large_image",
    "twitter:url": "https://angular.dev/",
    "twitter:title": "Angular",
    "twitter:description": "The web development framework for building modern apps.",
    "title": "Testing â€¢ Overview â€¢ Angular",
    "twitter:image": "https://angular.dev/assets/images/ng-image.jpg",
    "apple-mobile-web-app-title": "Angular",
    "ogUrl": "https://angular.dev/",
    "msapplication-config": "/assets/icons/browserconfig.xml",
    "viewport": "width=device-width, initial-scale=1",
    "scrapeId": "6c5605ba-f7e3-4ef5-9b85-78db0ae7ceea",
    "sourceURL": "https://angular.dev/guide/testing",
    "url": "https://angular.dev/guide/testing",
    "statusCode": 200
  }
}