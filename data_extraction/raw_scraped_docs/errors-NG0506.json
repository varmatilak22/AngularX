{
  "scrapeId": "a26847e3-bb26-48c6-9600-961add835c2a",
  "sourceURL": "https://angular.dev/errors/NG0506",
  "statusCode": 200,
  "data": {
    "markdown": "Skip to main content\n\nmenu\n\nmenuAPI\n\n- [Roadmap](https://angular.dev/roadmap)\n- [Get involved](https://github.com/angular/angular/blob/main/CONTRIBUTING.md)\n- API Reference\n- CLI Reference\n- Error Encyclopedia\n- Extended Diagnostics\n- [Versioning and releases](https://angular.dev/reference/releases)\n- [Version compatibility](https://angular.dev/reference/versions)\n- [Update guide](https://angular.dev/update-guide)\n- Configurations\n- Migrations\n\n- arrow\\_backError Encyclopedia\n  - [Overview](https://angular.dev/errors)\n  - [NG0100: Expression Changed After Checked](https://angular.dev/errors/NG0100)\n  - [NG01101: Wrong Async Validator Return Type](https://angular.dev/errors/NG01101)\n  - [NG01203: Missing value accessor](https://angular.dev/errors/NG01203)\n  - [NG0200: Circular Dependency in DI](https://angular.dev/errors/NG0200)\n  - [NG0201: No Provider Found](https://angular.dev/errors/NG0201)\n  - [NG0203: \\`inject()\\` must be called from an injection context](https://angular.dev/errors/NG0203)\n  - [NG0209: Invalid multi provider](https://angular.dev/errors/NG0209)\n  - [NG02200: Missing Iterable Differ](https://angular.dev/errors/NG02200)\n  - [NG02800: JSONP support in HttpClient configuration](https://angular.dev/errors/NG02800)\n  - [NG0300: Selector Collision](https://angular.dev/errors/NG0300)\n  - [NG0301: Export Not Found](https://angular.dev/errors/NG0301)\n  - [NG0302: Pipe Not Found](https://angular.dev/errors/NG0302)\n  - [NG0403: Bootstrapped NgModule doesn't specify which component to initialize](https://angular.dev/errors/NG0403)\n  - [NG0500: Hydration Node Mismatch](https://angular.dev/errors/NG0500)\n  - [NG05000: Hydration with unsupported Zone.js instance](https://angular.dev/errors/NG05000)\n  - [NG0501: Hydration Missing Siblings](https://angular.dev/errors/NG0501)\n  - [NG0502: Hydration Missing Node](https://angular.dev/errors/NG0502)\n  - [NG0503: Hydration Unsupported Projection of DOM Nodes](https://angular.dev/errors/NG0503)\n  - [NG0504: Skip hydration flag is applied to an invalid node](https://angular.dev/errors/NG0504)\n  - [NG0505: No hydration info in server response](https://angular.dev/errors/NG0505)\n  - [NG0506: Application remains unstable](https://angular.dev/errors/NG0506)\n  - [NG0507: HTML content was altered after server-side rendering](https://angular.dev/errors/NG0507)\n  - [NG05104: Root element was not found](https://angular.dev/errors/NG05104)\n  - [NG0602: Disallowed function call inside reactive context](https://angular.dev/errors/NG0602)\n  - [NG0750: @defer dependencies failed to load](https://angular.dev/errors/NG0750)\n  - [NG0751: @defer behavior when HMR is enabled](https://angular.dev/errors/NG0751)\n  - [NG0910: Unsafe bindings on an iframe element](https://angular.dev/errors/NG0910)\n  - [NG0912: Component ID generation collision](https://angular.dev/errors/NG0912)\n  - [NG0913: Runtime Performance Warnings](https://angular.dev/errors/NG0913)\n  - [NG0950: Required input is accessed before a value is set.](https://angular.dev/errors/NG0950)\n  - [NG0951: Child query result is required but no value is available.](https://angular.dev/errors/NG0951)\n  - [NG0955: Track expression resulted in duplicated keys for a given collection.](https://angular.dev/errors/NG0955)\n  - [NG0956: Tracking expression caused re-creation of the DOM structure.](https://angular.dev/errors/NG0956)\n  - [NG1001: Argument Not Literal](https://angular.dev/errors/NG1001)\n  - [NG2003: Missing Token](https://angular.dev/errors/NG2003)\n  - [NG2009: Invalid Shadow DOM selector](https://angular.dev/errors/NG2009)\n  - [NG3003: Import Cycle Detected](https://angular.dev/errors/NG3003)\n  - [NG6100: NgModule.id Set to module.id anti-pattern](https://angular.dev/errors/NG6100)\n  - [NG8001: Invalid Element](https://angular.dev/errors/NG8001)\n  - [NG8002: Invalid Attribute](https://angular.dev/errors/NG8002)\n  - [NG8003: Missing Reference Target](https://angular.dev/errors/NG8003)\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nThis warning only appears in the browser during the hydration process when it's enabled on the client but the application remains unstable for an extended period of time (over 10 seconds).\n\nTypically that happens when there are some pending microtasks or macrotasks on a page.\n\nAngular Hydration relies on a signal from `ApplicationRef.isStable` when it becomes stable inside an application:\n\n- during the server-side rendering (SSR) to start the serialization process\n- in a browser this signal is used to start the post-hydration cleanup to remove DOM nodes that remained unclaimed\n\nThis warning is displayed when `ApplicationRef.isStable` does not emit `true` within 10 seconds. If this behavior is intentional and your application stabilizes later, you could choose to ignore this warning.\n\n## [Applications that use zone.js](https://angular.dev/errors/NG0506\\#applications-that-use-zonejs)\n\nApplications that use zone.js may have various factors contributing to delays in stability. These may include pending HTTP requests, timers ( `setInterval`, `setTimeout`) or some logic that continuously invokes `requestAnimationFrame`.\n\n### [Macrotasks](https://angular.dev/errors/NG0506\\#macrotasks)\n\nMacrotasks include functions like `setInterval`, `setTimeout`, `requestAnimationFrame`, etc.\nIf one of these functions is called during the initialization phase of the application or in bootstrapped components, it may delay the moment when the application becomes stable.\n\n```\n      @Component({  selector: 'app',  template: ``,})class SimpleComponent {  constructor() {    setInterval(() => { ... }, 1000)    // or    setTimeout(() => { ... }, 10_000)  }}\n\n```\n\nIf these functions must be called during the initialization phase, invoking them outside the Angular zone resolves the problem:\n\n```\n      class SimpleComponent {  constructor() {    const ngZone = inject(NgZone);    ngZone.runOutsideAngular(() => {      setInterval(() => {}, 1000);    });  }}\n\n```\n\n### [Third-party libraries](https://angular.dev/errors/NG0506\\#third-party-libraries)\n\nSome third-party libraries can also produce long-running asynchronous tasks, which may delay application stability. The recommendation is to invoke relevant library code outside of the zone as described above.\n\n### [Running code after an application becomes stable](https://angular.dev/errors/NG0506\\#running-code-after-an-application-becomes-stable)\n\nYou can run a code that sets up asynchronous tasks once an application becomes stable:\n\n```\n      class SimpleComponent {  constructor() {    const applicationRef = inject(ApplicationRef);    applicationRef.isStable.pipe( first((isStable) => isStable) ).subscribe(() => {      // Note that we don't need to use `runOutsideAngular` because `isStable`      // emits events outside of the Angular zone when it's truthy (falsy values      // are emitted inside the Angular zone).      setTimeout(() => { ... });    });  }}\n\n```\n\n## [Zoneless applications](https://angular.dev/errors/NG0506\\#zoneless-applications)\n\nIn zoneless scenarios, stability might be delayed by an application code inside of an `effect` running in an infinite loop (potentially because signals used in effect functions keep changing) or a pending HTTP request.\n\nDevelopers may also explicitly contribute to indicating the application's stability by using the [`PendingTasks`](https://angular.dev/api/core/PendingTasks) service. If you use the mentioned APIs in your application, make sure you invoke a function to mark the task as completed.",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-2debf4d6-77f4-4a48-986a-2436823197cd.png"
  },
  "metadata": {
    "apple-mobile-web-app-title": "Angular",
    "og:type": "website",
    "og:image": "https://angular.dev/assets/images/ng-image.jpg",
    "twitter:url": "https://angular.dev/",
    "ogUrl": "https://angular.dev/",
    "theme-color": "#ffffff",
    "ogDescription": "The web development framework for building modern apps.",
    "twitter:card": "summary_large_image",
    "application-name": "Angular",
    "og:url": "https://angular.dev/",
    "twitter:description": "The web development framework for building modern apps.",
    "viewport": "width=device-width, initial-scale=1",
    "twitter:image": "https://angular.dev/assets/images/ng-image.jpg",
    "msapplication-TileColor": "#e90464",
    "ogTitle": "Angular",
    "og:title": "Angular",
    "favicon": "https://angular.dev/assets/icons/favicon-48x48.png",
    "title": "NG0506: Application remains unstable â€¢ Angular",
    "description": "The web development framework for building modern apps.",
    "ogImage": "https://angular.dev/assets/images/ng-image.jpg",
    "msapplication-config": "/assets/icons/browserconfig.xml",
    "twitter:title": "Angular",
    "og:description": "The web development framework for building modern apps.",
    "language": "en",
    "scrapeId": "a26847e3-bb26-48c6-9600-961add835c2a",
    "sourceURL": "https://angular.dev/errors/NG0506",
    "url": "https://angular.dev/errors/NG0506",
    "statusCode": 200
  }
}