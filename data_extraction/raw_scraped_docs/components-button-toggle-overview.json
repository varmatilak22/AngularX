{
  "scrapeId": "745aff38-186d-4d80-ab3d-2269187f45be",
  "sourceURL": "https://material.angular.io/components/button-toggle/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for button-toggle\n\n`<mat-button-toggle>` are on/off toggles with the appearance of a button. These toggles can be\nconfigured to behave as either radio-buttons or checkboxes. While they can be standalone, they are\ntypically part of a `mat-button-toggle-group`.\n\nBasic button-toggles\n\nlinkcodeopen\\_in\\_new\n\nBold\n\nItalic\n\nUnderline\n\n### [link](https://material.angular.io/components/button-toggle/overview\\#exclusive-selection-vs-multiple-selection)  Exclusive selection vs. multiple selection\n\nBy default, `mat-button-toggle-group` acts like a radio-button group- only one item can be selected.\nIn this mode, the `value` of the `mat-button-toggle-group` will reflect the value of the selected\nbutton and `ngModel` is supported.\n\nAdding the `multiple` attribute allows multiple items to be selected (checkbox behavior). In this\nmode the values of the toggles are not used, the `mat-button-toggle-group` does not have a value,\nand `ngModel` is not supported.\n\nButton toggle selection mode\n\nlinkcodeopen\\_in\\_new\n\nHide Single Selection Indicator\n\nHide Multiple Selection Indicator\n\n### Single selection\n\nRed\n\nGreen\n\nBlue\n\n### Multiple selection\n\nFlour\n\nEggs\n\nSugar\n\n### [link](https://material.angular.io/components/button-toggle/overview\\#appearance)  Appearance\n\nBy default, the appearance of `mat-button-toggle-group` and `mat-button-toggle` will follow the\nlatest Material Design guidelines. If you want to, you can switch back to the appearance that was\nfollowing a previous Material Design spec by using the `appearance` input. The `appearance` can\nbe configured globally using the `MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS` injection token.\n\nButton toggle appearance\n\nlinkcodeopen\\_in\\_new\n\nDefault appearance:\n\nBold\n\nItalic\n\nUnderline\n\nLegacy appearance:\n\nBold\n\nItalic\n\nUnderline\n\n### [link](https://material.angular.io/components/button-toggle/overview\\#use-with-angularforms)  Use with `@angular/forms`\n\n`<mat-button-toggle-group>` is compatible with `@angular/forms` and supports both `FormsModule`\nand `ReactiveFormsModule`.\n\n### [link](https://material.angular.io/components/button-toggle/overview\\#orientation)  Orientation\n\nThe button-toggles can be rendered in a vertical orientation by adding the `vertical` attribute.\n\n### [link](https://material.angular.io/components/button-toggle/overview\\#accessibility)  Accessibility\n\n`MatButtonToggle` internally uses native `button` elements with `aria-pressed` to convey toggle\nstate. If a toggle contains only an icon, you should specify a meaningful label via `aria-label`\nor `aria-labelledby`. For dynamic labels, `MatButtonToggle` provides input properties for binding\n`aria-label` and `aria-labelledby`. This means that you should not use the `attr.` prefix when\nbinding these properties, as demonstrated below.\n\n```html\n<mat-button-toggle [aria-label]=\"alertsEnabled ? 'Disable alerts' : 'Enable alerts'\">\n  <mat-icon>notifications</mat-icon>\n</mat-button-toggle>\n\n```\n\nThe `MatButtonToggleGroup` surrounding the individual buttons applies\n`role=\"group\"` to convey the association between the individual toggles. Each\n`<mat-button-toggle-group>` element should be given a label with `aria-label` or `aria-labelledby`\nthat communicates the collective meaning of all toggles. For example, if you have toggles for\n\"Bold\", \"Italic\", and \"Underline\", you might label the parent group \"Font styles\".\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic button-toggles example in StackBlitz\n\nCopy link to example\n\nView code\n\nEdit Button toggle selection mode example in StackBlitz\n\nEdit Button toggle appearance example in StackBlitz",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-9df6dca3-1df4-4b0f-828a-6e8e52d2c8c7.png"
  },
  "metadata": {
    "og:title": "Angular Material",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "mobile-web-app-capable": "yes",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "apple-mobile-web-app-capable": "yes",
    "og:locale": "en_US",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:title": "Angular Material",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "og:url": "https://material.angular.io/",
    "og:site_name": "Angular Material",
    "twitter:site": "@Angular",
    "theme-color": "#d7e3ff",
    "title": "Button toggle | Angular Material",
    "og:image:height": "943",
    "og:image:width": "1339",
    "og:type": "website",
    "ogLocale": "en_US",
    "og:image:type": "image/png",
    "twitter:card": "summary",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "favicon": "https://material.angular.io/components/button-toggle/assets/img/favicon.ico?v=19.1.0",
    "ogSiteName": "Angular Material",
    "ogTitle": "Angular Material",
    "viewport": "width=device-width, initial-scale=1",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "twitter:creator": "@Angular",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "author": "Angular Components Team",
    "language": "en-US",
    "ogUrl": "https://material.angular.io/",
    "scrapeId": "745aff38-186d-4d80-ab3d-2269187f45be",
    "sourceURL": "https://material.angular.io/components/button-toggle/overview",
    "url": "https://material.angular.io/components/button-toggle/overview",
    "statusCode": 200
  }
}