{
  "scrapeId": "2190d353-86dc-48d2-8f2e-e082bbd1383f",
  "sourceURL": "https://angular.dev/tutorials/learn-angular/23-pipes-format-data",
  "statusCode": 200,
  "data": {
    "markdown": "Skip to main content\n\nmenu\n\nThis site uses cookies from Google to deliver its services and to analyze traffic.\n\n[Learn more](https://policies.google.com/technologies/cookies) Ok, Got it\n\nunfold\\_more\nLearn AngularFormatting data with pipes\nReveal Answer\n\n[chevron\\_left](https://angular.dev/tutorials/learn-angular/22-pipes) [chevron\\_right](https://angular.dev/tutorials/learn-angular/24-create-a-pipe)\n\nReveal Answer\n\nunfold\\_more\nLearn AngularFormatting data with pipes\nReveal Answer\n\n[chevron\\_left](https://angular.dev/tutorials/learn-angular/22-pipes) [chevron\\_right](https://angular.dev/tutorials/learn-angular/24-create-a-pipe)\n\nReveal Answer\n\nYou can take your use of pipes even further by configuring them. Pipes can be configured by passing options to them.\n\nNote: Learn more about [formatting data with pipes in the in-depth guide](https://angular.dev/guide/templates/pipes).\n\nIn this activity, you will work with some pipes and pipe parameters.\n\n* * *\n\nTo pass parameters to a pipe, use the `:` syntax followed by the parameter value. Here's an example:\n\n```\n      template: `{{ date | date:'medium' }}`;\n\n```\n\ncheck\n\nThe output is `Jun 15, 2015, 9:43:11 PM`.\n\nTime to customize some pipe output:\n\n1. ### [Format a number with `DecimalPipe`](https://angular.dev/tutorials/learn-angular/23-pipes-format-data\\#format-a-number-with-decimalpipe)\n\n\nIn `app.component.ts`, update the template to include parameter for the `decimal` pipe.\n\n\n\n```\n         template: `    ...    <li>Number with \"decimal\" {{ num | number:\"3.2-2\" }}</li>`\n\n```\n\ncheck\n\nNOTE: What's that format? The parameter for the `DecimalPipe` is called `digitsInfo`, this parameter uses the format: `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`\n\n2. ### [Format a date with `DatePipe`](https://angular.dev/tutorials/learn-angular/23-pipes-format-data\\#format-a-date-with-datepipe)\n\n\nNow, update the template to use the `date` pipe.\n\n\n\n```\n         template: `    ...    <li>Date with \"date\" {{ birthday | date: 'medium' }}</li>`\n\n```\n\ncheck\n\nFor extra fun, try some different parameters for `date`. More information can be found in the [Angular docs](https://angular.dev/guide/templates/pipes).\n\n3. ### [Format a currency with `CurrencyPipe`](https://angular.dev/tutorials/learn-angular/23-pipes-format-data\\#format-a-currency-with-currencypipe)\n\n\nFor your last task, update the template to use the `currency` pipe.\n\n\n\n```\n         template: `    ...    <li>Currency with \"currency\" {{ cost | currency }}</li>`\n\n```\n\ncheck\n\nYou can also try different parameters for `currency`. More information can be found in the [Angular docs](https://angular.dev/guide/templates/pipes).\n\n\nGreat work with pipes. You've made some great progress so far.\n\nThere are even more built-in pipes that you can use in your applications. You can find the list in the [Angular documentation](https://angular.dev/guide/templates/pipes).\n\nIn the case that the built-in pipes don't cover your needs, you can also create a custom pipe. Check out the next lesson to find out more.\n\napp/app.component.ts\n\nadd\n\nlaunchdownload\n\n99\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n›\n\n⌄\n\nimport{Component}from'@angular/core';\n\nimport{DecimalPipe,DatePipe,CurrencyPipe}from'@angular/common';\n\n@Component({\n\nselector:'app-root',\n\ntemplate:\\`\n\n<ul>\n\n<li>Number with \"decimal\" {{num}}</li>\n\n<li>Date with \"date\" {{birthday}}</li>\n\n<li>Currency with \"currency\" {{cost}}</li>\n\n</ul>\n\n\\`,\n\nimports:\\[DecimalPipe,DatePipe,CurrencyPipe\\],\n\n})\n\nexportclassAppComponent{\n\nnum=103.1234;\n\nbirthday=newDate(2023,3,2);\n\ncost=4560.34;\n\n}\n\nPreview\n\nBooting\n\nConsole\n\nTerminal\n\nrefresh\n\nStackBlitz",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-bb0b51a1-60d5-464b-9a43-9879846f6f5f.png"
  },
  "metadata": {
    "ogUrl": "https://angular.dev/",
    "og:image": "https://angular.dev/assets/images/ng-image.jpg",
    "ogDescription": "The web development framework for building modern apps.",
    "apple-mobile-web-app-title": "Angular",
    "og:type": "website",
    "description": "The web development framework for building modern apps.",
    "title": "Formatting data with pipes • Angular",
    "ogTitle": "Angular",
    "ogImage": "https://angular.dev/assets/images/ng-image.jpg",
    "language": "en",
    "twitter:card": "summary_large_image",
    "twitter:title": "Angular",
    "favicon": "https://angular.dev/assets/icons/favicon-48x48.png",
    "og:title": "Angular",
    "twitter:description": "The web development framework for building modern apps.",
    "msapplication-TileColor": "#e90464",
    "msapplication-config": "/assets/icons/browserconfig.xml",
    "og:url": "https://angular.dev/",
    "og:description": "The web development framework for building modern apps.",
    "twitter:image": "https://angular.dev/assets/images/ng-image.jpg",
    "viewport": "width=device-width, initial-scale=1",
    "application-name": "Angular",
    "twitter:url": "https://angular.dev/",
    "theme-color": "#ffffff",
    "scrapeId": "2190d353-86dc-48d2-8f2e-e082bbd1383f",
    "sourceURL": "https://angular.dev/tutorials/learn-angular/23-pipes-format-data",
    "url": "https://angular.dev/tutorials/learn-angular/23-pipes-format-data",
    "statusCode": 200
  }
}