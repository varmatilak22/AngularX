{
  "scrapeId": "177cf21a-c3ec-40e6-a7b7-ffc14d141da5",
  "sourceURL": "https://material.angular.io/components/tooltip/api",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\nAPI for tooltip\n\n## API reference for Angular Material tooltip\n\n`\n          import {MatTooltipModule} from '@angular/material/tooltip';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/tooltip/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/components/tooltip/api\\#MatTooltip) `MatTooltip`\n\nDirective that attaches a material design tooltip to the host element. Animates the showing and\nhiding of a tooltip provided position (defaults to below the element).\n\n[https://material.io/design/components/tooltips.html](https://material.io/design/components/tooltips.html)\n\nSelector:\\[matTooltip\\]\n\nExported as:matTooltip\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input('matTooltipDisabled')<br> <br>`disabled: boolean` | Disables the display of the tooltip. |\n| @Input('matTooltipHideDelay')<br> <br>`hideDelay: number` | The default delay in ms before hiding the tooltip after hide is called |\n| @Input('matTooltip')<br> <br>`message: string` | The message to be displayed in the tooltip |\n| @Input('matTooltipPosition')<br> <br>`position: TooltipPosition` | Allows the user to define the position of the tooltip relative to the parent element |\n| @Input('matTooltipPositionAtOrigin')<br> <br>`positionAtOrigin: boolean` | Whether tooltip should be relative to the click or touch origin<br>instead of outside the element bounding box. |\n| @Input('matTooltipShowDelay')<br> <br>`showDelay: number` | The default delay in ms before showing the tooltip after show is called |\n| @Input('matTooltipClass')<br> <br>`tooltipClass: any` | Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. |\n| @Input('matTooltipTouchGestures')<br> <br>`touchGestures: TooltipTouchGestures` | How touch gestures should be handled by the tooltip. On touch devices the tooltip directive<br>uses a long press gesture to show and hide, however it can conflict with the native browser<br>gestures. To work around the conflict, Angular Material disables native gestures on the<br>trigger, but that might not be desirable on particular elements (e.g. inputs and draggable<br>elements). The different values for this option configure the touch event handling as follows:<br>- `auto` \\- Enables touch gestures for all elements, but tries to avoid conflicts with native<br>  browser gestures on particular elements. In particular, it allows text selection on inputs<br>  and textareas, and preserves the native browser dragging on elements marked as `draggable`.<br>- `on` \\- Enables touch gestures for all elements and disables native<br>  browser gestures with no exceptions.<br>- `off` \\- Disables touch gestures. Note that this will prevent the tooltip from<br>  showing on touch devices. |\n\n##### Methods\n\n| hide |\n| --- |\n| Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input |\n| Parameters |\n| --- |\n| delay<br> `number = this.hideDelay` |  |\n\n| show |\n| --- |\n| Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input |\n| Parameters |\n| --- |\n| delay<br> `number = this.showDelay` |  |\n| origin?<br> `{ x: number; y: number; }` |  |\n\n| toggle |\n| --- |\n| Shows/hides the tooltip |\n| Parameters |\n| --- |\n| origin?<br> `{ x: number; y: number; }` |  |\n\n### [link](https://material.angular.io/components/tooltip/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/tooltip/api\\#MatTooltipDefaultOptions) `MatTooltipDefaultOptions`\n\nDefault `matTooltip` options that can be overridden.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `disableTooltipInteractivity: boolean` | Disables the ability for the user to interact with the tooltip element. |\n| `hideDelay: number` | Default delay when the tooltip is hidden. |\n| `position: TooltipPosition` | Default position for tooltips. |\n| `positionAtOrigin: boolean` | Default value for whether tooltips should be positioned near the click or touch origin<br>instead of outside the element bounding box. |\n| `showDelay: number` | Default delay when the tooltip is shown. |\n| `tooltipClass: string | string[]` | Default classes to be applied to the tooltip. These default classes will not be applied if<br>`tooltipClass` is defined directly on the tooltip element, as it will override the default. |\n| `touchGestures: TooltipTouchGestures` | Default touch gesture handling for tooltips. |\n| `touchLongPressShowDelay: number` | Time between the user putting the pointer on a tooltip trigger and the long press event being fired on a touch device. |\n| `touchendHideDelay: number` | Default delay when hiding the tooltip on a touch device. |\n\n### [link](https://material.angular.io/components/tooltip/api\\#type_aliases)  Type aliases\n\n#### [link](https://material.angular.io/components/tooltip/api\\#TooltipPosition) `TooltipPosition`\n\nPossible positions for a tooltip.\n\n```docs-markdown-code\ntype TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n```\n\n#### [link](https://material.angular.io/components/tooltip/api\\#TooltipTouchGestures) `TooltipTouchGestures`\n\nOptions for how the tooltip trigger should handle touch gestures.\nSee `MatTooltip.touchGestures` for more information.\n\n```docs-markdown-code\ntype TooltipTouchGestures = 'auto' | 'on' | 'off';\n\n```\n\n#### [link](https://material.angular.io/components/tooltip/api\\#TooltipVisibility) `TooltipVisibility`\n\nPossible visibility states of a tooltip.\n\n```docs-markdown-code\ntype TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n```\n\n### [link](https://material.angular.io/components/tooltip/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/components/tooltip/api\\#SCROLL_THROTTLE_MS) `SCROLL_THROTTLE_MS`\n\nTime in ms to throttle repositioning after scroll events.\n\n```docs-markdown-code\nconst SCROLL_THROTTLE_MS: 20;\n\n```\n\n#### [link](https://material.angular.io/components/tooltip/api\\#MAT_TOOLTIP_SCROLL_STRATEGY) `MAT_TOOLTIP_SCROLL_STRATEGY`\n\nInjection token that determines the scroll handling while a tooltip is visible.\n\n```docs-markdown-code\nconst MAT_TOOLTIP_SCROLL_STRATEGY: InjectionToken<() => ScrollStrategy>;\n\n```\n\n#### [link](https://material.angular.io/components/tooltip/api\\#MAT_TOOLTIP_DEFAULT_OPTIONS) `MAT_TOOLTIP_DEFAULT_OPTIONS`\n\nInjection token to be used to override the default options for `matTooltip`.\n\n```docs-markdown-code\nconst MAT_TOOLTIP_DEFAULT_OPTIONS: InjectionToken<MatTooltipDefaultOptions>;\n\n```\n\n#### [link](https://material.angular.io/components/tooltip/api\\#TOOLTIP_PANEL_CLASS) `TOOLTIP_PANEL_CLASS`\n\nDeprecated\n\nCSS class that will be attached to the overlay panel.\n\n```docs-markdown-code\nconst TOOLTIP_PANEL_CLASS: \"mat-mdc-tooltip-panel\";\n\n```\n\n## API reference for Angular Material tooltip-testing\n\n`\n          import {MatTooltipHarness} from '@angular/material/tooltip/testing';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/tooltip/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/components/tooltip/api\\#MatTooltipHarness) `MatTooltipHarness`extends [ComponentHarness](https://material.angular.io/components/tooltip/cdk/testing/api\\#ComponentHarness)\n\nHarness for interacting with a mat-tooltip in tests.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `staticÂ hostSelector: '.mat-mdc-tooltip-trigger'` |  |\n\n##### Methods\n\n| async<br> <br>getTooltipText |\n| --- |\n| Gets a promise for the tooltip panel's text. |\n| Returns |\n| --- |\n| `Promise<string>` |  |\n\n| async<br> <br>hide |\n| --- |\n| Hides the tooltip. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| async<br> <br>host |\n| --- |\n| Gets a `Promise` for the `TestElement` representing the host element of the component. |\n| Returns |\n| --- |\n| `Promise<TestElement>` |  |\n\n| async<br> <br>isDisabled |\n| --- |\n| Gets whether the tooltip is disabled |\n| Returns |\n| --- |\n| `Promise<boolean>` |  |\n\n| async<br> <br>isOpen |\n| --- |\n| Gets whether the tooltip is open. |\n| Returns |\n| --- |\n| `Promise<boolean>` |  |\n\n| async<br> <br>show |\n| --- |\n| Shows the tooltip. |\n| Returns |\n| --- |\n| `Promise<void>` | Promise that resolves when the action completes. |\n\n| static<br> <br>with |\n| --- |\n| Gets a `HarnessPredicate` that can be used to search for a tooltip trigger with specific<br>attributes. |\n| Parameters |\n| --- |\n| options<br> `TooltipHarnessFilters = {}` | Options for narrowing the search. |\n| Returns |\n| --- |\n| `HarnessPredicate<T>` | a `HarnessPredicate` configured with the given options. |\n\n### [link](https://material.angular.io/components/tooltip/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/tooltip/api\\#TooltipHarnessFilters) `TooltipHarnessFilters`\n\nA set of criteria that can be used to filter a list of `MatTooltipHarness` instances.\n\nTooltip\n\nTesting\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-421f2baf-ba52-410b-9dc5-332f99dfb890.png"
  },
  "metadata": {
    "theme-color": "#d7e3ff",
    "ogLocale": "en_US",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:site_name": "Angular Material",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "favicon": "https://material.angular.io/components/tooltip/assets/img/favicon.ico?v=19.1.0",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "twitter:card": "summary",
    "twitter:creator": "@Angular",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "ogTitle": "Angular Material",
    "author": "Angular Components Team",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "ogUrl": "https://material.angular.io/",
    "og:image:height": "943",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "apple-mobile-web-app-capable": "yes",
    "twitter:title": "Angular Material",
    "mobile-web-app-capable": "yes",
    "og:url": "https://material.angular.io/",
    "og:image:type": "image/png",
    "og:locale": "en_US",
    "ogSiteName": "Angular Material",
    "twitter:site": "@Angular",
    "og:title": "Angular Material",
    "og:type": "website",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:width": "1339",
    "title": "Tooltip | Angular Material",
    "language": "en-US",
    "viewport": "width=device-width, initial-scale=1",
    "scrapeId": "177cf21a-c3ec-40e6-a7b7-ffc14d141da5",
    "sourceURL": "https://material.angular.io/components/tooltip/api",
    "url": "https://material.angular.io/components/tooltip/api",
    "statusCode": 200
  }
}