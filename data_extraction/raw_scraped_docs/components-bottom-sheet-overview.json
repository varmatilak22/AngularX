{
  "scrapeId": "a8786134-a315-4371-acf6-4cfa5bc89107",
  "sourceURL": "https://material.angular.io/components/bottom-sheet/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for bottom-sheet\n\nThe `MatBottomSheet` service can be used to open Material Design panels to the bottom of the screen.\nThese panels are intended primarily as an interaction on mobile devices where they can be used as an\nalternative to dialogs and menus.\n\nBottom Sheet Overview\n\nlinkcodeopen\\_in\\_new\n\nYou have received a file called \"cat-picture.jpeg\".\n\nOpen file\n\nYou can open a bottom sheet by calling the `open` method with a component to be loaded and an\noptional config object. The `open` method will return an instance of `MatBottomSheetRef`:\n\n```ts\nconst bottomSheetRef = bottomSheet.open(SocialShareComponent, {\n  ariaLabel: 'Share on social media'\n});\n\n```\n\nThe `MatBottomSheetRef` is a reference to the currently-opened bottom sheet and can be used to close\nit or to subscribe to events. Note that only one bottom sheet can be open at a time. Any component\ncontained inside of a bottom sheet can inject the `MatBottomSheetRef` as well.\n\n```ts\nbottomSheetRef.afterDismissed().subscribe(() => {\n  console.log('Bottom sheet has been dismissed.');\n});\n\nbottomSheetRef.dismiss();\n\n```\n\n### [link](https://material.angular.io/components/bottom-sheet/overview\\#sharing-data-with-the-bottom-sheet-component)  Sharing data with the bottom sheet component.\n\nIf you want to pass in some data to the bottom sheet, you can do so using the `data` property:\n\n```ts\nconst bottomSheetRef = bottomSheet.open(HobbitSheet, {\n  data: { names: ['Frodo', 'Bilbo'] },\n});\n\n```\n\nAfterwards you can access the injected data using the `MAT_BOTTOM_SHEET_DATA` injection token:\n\n```ts\nimport {Component, Inject} from '@angular/core';\nimport {MAT_BOTTOM_SHEET_DATA} from '../bottom-sheet';\n\n@Component({\n  selector: 'hobbit-sheet',\n  template: 'passed in {{ data.names }}',\n})\nexport class HobbitSheet {\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: {names: string[]}) { }\n}\n\n```\n\n### [link](https://material.angular.io/components/bottom-sheet/overview\\#specifying-global-configuration-defaults)  Specifying global configuration defaults\n\nDefault bottom sheet options can be specified by providing an instance of `MatBottomSheetConfig`\nfor `MAT_BOTTOM_SHEET_DEFAULT_OPTIONS` in your application's root module.\n\n```ts\n@NgModule({\n  providers: [\\\n    {provide: MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, useValue: {hasBackdrop: false}}\\\n  ]\n})\n\n```\n\n### [link](https://material.angular.io/components/bottom-sheet/overview\\#accessibility)  Accessibility\n\n`MatBottomSheet` creates modal dialogs that implement the ARIA `role=\"dialog\"` pattern. This root\ndialog element should be given an accessible label via the `ariaLabel` property of\n`MatBottomSheetConfig`.\n\n#### [link](https://material.angular.io/components/bottom-sheet/overview\\#keyboard-interaction)  Keyboard interaction\n\nBy default, the escape key closes `MatBottomSheet`. While you can disable this behavior by using\nthe `disableClose` property of `MatBottomSheetConfig`, doing this breaks the expected interaction\npattern for the ARIA `role=\"dialog\"` pattern.\n\n#### [link](https://material.angular.io/components/bottom-sheet/overview\\#focus-management)  Focus management\n\nWhen opened, `MatBottomSheet` traps browser focus such that it cannot escape the root\n`role=\"dialog\"` element. By default, the first tabbable element in the bottom sheet receives focus.\nYou can customize which element receives focus with the `autoFocus` property of\n`MatBottomSheetConfig`, which supports the following values.\n\n| Value | Behavior |\n| --- | --- |\n| `first-tabbable` | Focus the first tabbable element. This is the default setting. |\n| `first-header` | Focus the first header element ( `role=\"heading\"`, `h1` through `h6`) |\n| `dialog` | Focus the root `role=\"dialog\"` element. |\n| Any CSS selector | Focus the first element matching the given selector. |\n\nWhile the default setting applies the best behavior for most applications, special cases may benefit\nfrom these alternatives. Always test your application to verify the behavior that works best for\nyour users.\n\n#### [link](https://material.angular.io/components/bottom-sheet/overview\\#focus-restoration)  Focus restoration\n\nWhen closed, `MatBottomSheet` restores focus to the element that previously held focus when the\nbottom sheet opened. However, if that previously focused element no longer exists, you must\nadd additional handling to return focus to an element that makes sense for the user's workflow.\nOpening a bottom sheet from a menu is one common pattern that causes this situation. The menu\ncloses upon clicking an item, thus the focused menu item is no longer in the DOM when the bottom\nsheet attempts to restore focus.\n\nYou can add handling for this situation with the `afterDismissed()` observable from\n`MatBottomSheetRef`.\n\n```typescript\nconst bottomSheetRef = bottomSheet.open(FileTypeChooser);\nbottomSheetRef.afterDismissed().subscribe(() => {\n  // Restore focus to an appropriate element for the user's workflow here.\n});\n\n```\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Bottom Sheet Overview example in StackBlitz\n\nCopy link to example\n\nView code",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-7b7d3350-77a2-4331-b2a3-1e382fa2faa5.png"
  },
  "metadata": {
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "og:type": "website",
    "title": "Bottom Sheet | Angular Material",
    "ogTitle": "Angular Material",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "apple-mobile-web-app-capable": "yes",
    "ogLocale": "en_US",
    "og:image:width": "1339",
    "og:image:type": "image/png",
    "author": "Angular Components Team",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "theme-color": "#d7e3ff",
    "viewport": "width=device-width, initial-scale=1",
    "language": "en-US",
    "og:locale": "en_US",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:site_name": "Angular Material",
    "ogSiteName": "Angular Material",
    "og:image:height": "943",
    "og:title": "Angular Material",
    "twitter:creator": "@Angular",
    "twitter:card": "summary",
    "twitter:site": "@Angular",
    "og:url": "https://material.angular.io/",
    "twitter:title": "Angular Material",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "ogUrl": "https://material.angular.io/",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "mobile-web-app-capable": "yes",
    "favicon": "https://material.angular.io/components/bottom-sheet/assets/img/favicon.ico?v=19.1.0",
    "scrapeId": "a8786134-a315-4371-acf6-4cfa5bc89107",
    "sourceURL": "https://material.angular.io/components/bottom-sheet/overview",
    "url": "https://material.angular.io/components/bottom-sheet/overview",
    "statusCode": 200
  }
}