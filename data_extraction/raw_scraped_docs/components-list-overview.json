{
  "scrapeId": "59cd8e07-06fa-4295-89a6-b46e3efb1252",
  "sourceURL": "https://material.angular.io/components/list/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for list\n\n`<mat-list>` is a container component that wraps and formats a series of `<mat-list-item>`. As the\nbase list component, it provides Material Design styling, but no behavior of its own.\n\nBasic list\n\nlinkcodeopen\\_in\\_new\n\nItem 1\n\nItem 2\n\nItem 3\n\nList items can be constructed in two ways depending the content they need to show:\n\n### [link](https://material.angular.io/components/list/overview\\#simple-lists)  Simple lists\n\nIf a list item needs to show a single line of textual information, the text can be inserted\ndirectly into the `<mat-list-item>` element.\n\n```html\n<mat-list>\n <mat-list-item>Pepper</mat-list-item>\n <mat-list-item>Salt</mat-list-item>\n <mat-list-item>Paprika</mat-list-item>\n</mat-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#multi-line-lists)  Multi-line lists\n\nList items that have more than one line of text have to use the `matListItemTitle` directive to\nindicate their title text for accessibility purposes, in addition to the `matListItemLine` directive\nfor each subsequent line of text.\n\n```html\n<mat-list>\n  <mat-list-item>\n    <span matListItemTitle>Pepper</span>\n    <span matListItemLine>Produced by a plant</span>\n  </mat-list-item>\n  <mat-list-item>\n    <span matListItemTitle>Salt</span>\n    <span matListItemLine>Extracted from sea water</span>\n  </mat-list-item>\n  <mat-list-item>\n    <span matListItemTitle>Paprika</span>\n    <span matListItemLine>Produced by dried and ground red peppers</span>\n  </mat-list-item>\n</mat-list>\n\n```\n\nTo activate text wrapping, the `lines` input has to be set on the `<mat-list-item>` indicating the\nnumber of lines of text.\n\nThe following directives can be used to style the content of a list item:\n\n| Directive | Description |\n| --- | --- |\n| `matListItemTitle` | Indicates the title of the list item. Required for multi-line list items. |\n| `matListItemLine` | Wraps a line of text within a list item. |\n| `matListItemIcon` | Icon typically placed at the beginning of a list item. |\n| `matListItemAvatar` | Image typically placed at the beginning of a list item. |\n| `matListItemMeta` | Inserts content in the meta section at the end of a list item. |\n\n### [link](https://material.angular.io/components/list/overview\\#navigation-lists)  Navigation lists\n\nUse `mat-nav-list` tags for navigation lists (i.e. lists that have anchor tags).\n\nSimple navigation lists can use the `mat-list-item` attribute on anchor tag elements directly:\n\n```html\n<mat-nav-list>\n  @for (link of list; track link) {\n    <a mat-list-item href=\"...\" [activated]=\"link.isActive\">{{ link }}</a>\n  }\n</mat-nav-list>\n\n```\n\nFor more complex navigation lists (e.g. with more than one target per item), wrap the anchor\nelement in an `<mat-list-item>`.\n\n```html\n<mat-nav-list>\n  @for (link of links; track link) {\n    <mat-list-item [activated]=\"link.isActive\">\n       <a matListItemTitle href=\"...\">{{ link }}</a>\n       <button mat-icon-button (click)=\"showInfo(link)\" matListItemMeta>\n          <mat-icon>info</mat-icon>\n       </button>\n    </mat-list-item>\n  }\n</mat-nav-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#action-lists)  Action lists\n\nUse the `<mat-action-list>` element when each item in the list performs some _action_. Each item\nin an action list is a `<button>` element.\n\nSimple action lists can use the `mat-list-item` attribute on button tag elements directly:\n\n```html\n<mat-action-list>\n  <button mat-list-item (click)=\"save()\">Save</button>\n  <button mat-list-item (click)=\"undo()\">Undo</button>\n</mat-action-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#selection-lists)  Selection lists\n\nA selection list provides an interface for selecting values, where each list item is an option.\n\nList with selection\n\nlinkcodeopen\\_in\\_new\n\nBoots\n\nClogs\n\nLoafers\n\nMoccasins\n\nSneakers\n\nOptions selected: 0\n\nThe options within a selection-list should not contain further interactive controls, such\nas buttons and anchors.\n\n### [link](https://material.angular.io/components/list/overview\\#multi-line-lists-1)  Multi-line lists\n\nFor lists that require multiple lines per item, annotate each line with an `matListItemLine`\nattribute. Whichever heading tag is appropriate for your DOM hierarchy should be used\n(not necessarily `<h3>` as shown in the example).\n\n```html\n<!-- two line list -->\n<mat-list>\n  @for (message of messages; track message) {\n    <mat-list-item>\n      <h3 matListItemTitle>{{message.from}}</h3>\n      <p matListItemLine>\n        <span>{{message.subject}}</span>\n        <span class=\"demo-2\"> -- {{message.content}}</span>\n      </p>\n    </mat-list-item>\n  }\n</mat-list>\n\n<!-- three line list -->\n<mat-list>\n  @for (message of messages; track message) {\n    <mat-list-item>\n      <h3 matListItemTitle>{{message.from}}</h3>\n      <p matListItemLine>{{message.subject}}</p>\n      <p matListItemLine class=\"demo-2\">{{message.content}}</p>\n    </mat-list-item>\n  }\n</mat-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#lists-with-icons)  Lists with icons\n\nTo add an icon to your list item, use the `matListItemIcon` attribute.\n\n```html\n<mat-list>\n  @for (message of messages; track message) {\n    <mat-list-item>\n      <mat-icon matListItemIcon>folder</mat-icon>\n      <h3 matListItemTitle>{{message.from}}</h3>\n      <p matListItemLine>\n        <span>{{message.subject}}</span>\n        <span class=\"demo-2\"> -- {{message.content}}</span>\n      </p>\n    </mat-list-item>\n  }\n</mat-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#lists-with-meta-section-icons)  Lists with meta section icons\n\nTo add a meta icon to your list item, use the `matListItemMeta` directive. This allows you to display an icon or any other content in the meta section of the list item.\n\n```html\n<mat-list>\n  @for (message of messages; track message) {\n    <mat-list-item>\n      <div matListItemMeta>\n        <mat-icon>folder</mat-icon>\n      </div>\n      <h3 matListItemTitle>{{message.from}}</h3>\n      <p matListItemLine>\n        <span>{{message.subject}}</span>\n        <span class=\"demo-2\"> -- {{message.content}}</span>\n      </p>\n    </mat-list-item>\n  }\n</mat-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#lists-with-avatars)  Lists with avatars\n\nTo include an avatar image, add an image tag with an `matListItemAvatar` attribute.\n\n```html\n<mat-list>\n  @for (message of messages; track message) {\n    <mat-list-item>\n      <img matListItemAvatar src=\"...\" alt=\"...\">\n      <h3 matListItemTitle>{{message.from}}</h3>\n      <p matListItemLine>\n        <span>{{message.subject}}</span>\n        <span class=\"demo-2\"> -- {{message.content}}</span>\n      </p>\n    </mat-list-item>\n  }\n</mat-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#lists-with-multiple-sections)  Lists with multiple sections\n\nSubheaders can be added to a list by annotating a heading tag with an `matSubheader` attribute.\nTo add a divider, use `<mat-divider>`.\n\n```html\n<mat-list>\n   <h3 matSubheader>Folders</h3>\n   @for (folder of folders; track folder) {\n     <mat-list-item>\n        <mat-icon matListIcon>folder</mat-icon>\n        <h4 matListItemTitle>{{folder.name}}</h4>\n        <p matListItemLine class=\"demo-2\"> {{folder.updated}} </p>\n     </mat-list-item>\n   }\n   <mat-divider></mat-divider>\n   <h3 matSubheader>Notes</h3>\n   @for (note of notes; track note) {\n     <mat-list-item>\n        <mat-icon matListIcon>note</mat-icon>\n        <h4 matListItemTitle>{{note.name}}</h4>\n        <p matListItemLine class=\"demo-2\"> {{note.updated}} </p>\n     </mat-list-item>\n   }\n</mat-list>\n\n```\n\n### [link](https://material.angular.io/components/list/overview\\#accessibility)  Accessibility\n\nAngular Material offers multiple varieties of list so that you can choose the type that best applies\nto your use-case.\n\n#### [link](https://material.angular.io/components/list/overview\\#navigation)  Navigation\n\nYou should use `MatNavList` when every item in the list is an anchor that navigate to another URL.\nThe root `<mat-nav-list>` element sets `role=\"navigation\"` and should contain only anchor elements\nwith the `mat-list-item` attribute. You should not nest any interactive elements inside these\nanchors, including buttons and checkboxes.\n\nAlways provide an accessible label for the `<mat-nav-list>` element via `aria-label` or\n`aria-labelledby`.\n\nTo provide the best screen reader experience for a list, wrap each anchor element with a `<li>` or `<div role=\"listitem\">` element and wrap all of the anchor elements with a `<ul>` element or `<div role=\"list\">` element.\n\n```html\n<mat-nav-list aria-label=\"Select a folder\">\n  <ul>\n    @for (link of list; track link) {\n    <li>\n      <a mat-list-item href=\"...\" [activated]=\"link.isActive\">{{ link }}</a>\n    </li>\n    }\n  </ul>\n</mat-nav-list>\n\n```\n\n#### [link](https://material.angular.io/components/list/overview\\#action)  Action\n\nTo provide the best screen reader experience for a list, wrap each button element with a `<li>` or `<div role=\"listitem\">` element and add `role=\"list\"` to `<mat-action-list>`.\n\n```html\n<mat-action-list role=\"list\" aria-label=\"Post actions\">\n  <li>\n    <button mat-list-item (click)=\"save()\">Save</button>\n  </li>\n  <li>\n    <button mat-list-item (click)=\"undo()\">Undo</button>\n  </li>\n</mat-action-list>\n\n```\n\n#### [link](https://material.angular.io/components/list/overview\\#selection)  Selection\n\nYou should use `MatSelectionList` and `MatListOption` for lists that allow the user to select one\nor more values. This list variant uses the `role=\"listbox\"` interaction pattern, handling all\nassociated keyboard input and focus management. You should not nest any interactive elements inside\nthese options, including buttons and anchors.\n\nAlways provide an accessible label for the `<mat-selection-list>` element via `aria-label` or\n`aria-labelledby` that describes the selection being made.\n\nBy default, `MatSelectionList` displays radio or checkmark indicators to identify selected items.\nWhile you can hide the radio indicator for single-selection via `hideSingleSelectionIndicator`, this\nmakes the component less accessible by making it harder or impossible for users to visually identify\nselected items.\n\n#### [link](https://material.angular.io/components/list/overview\\#custom-scenarios)  Custom scenarios\n\nBy default, the list assumes that it will be used in a purely decorative fashion and thus it sets no\nroles, ARIA attributes, or keyboard shortcuts. This is equivalent to having a sequence of `<div>`\nelements on the page. Any interactive content within the list should be given an appropriate\naccessibility treatment based on the specific workflow of your application.\n\nIf the list is used to present a list of non-interactive content items, then the list element should\nbe given `role=\"list\"` and each list item should be given `role=\"listitem\"`.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic list example in StackBlitz\n\nCopy link to example\n\nView code\n\nEdit List with selection example in StackBlitz",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-ddb9711b-f399-4cc1-a165-1c61483486dc.png"
  },
  "metadata": {
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "og:image:width": "1339",
    "ogTitle": "Angular Material",
    "ogLocale": "en_US",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "ogUrl": "https://material.angular.io/",
    "author": "Angular Components Team",
    "twitter:title": "Angular Material",
    "theme-color": "#d7e3ff",
    "language": "en-US",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "favicon": "https://material.angular.io/components/list/assets/img/favicon.ico?v=19.1.0",
    "og:type": "website",
    "og:url": "https://material.angular.io/",
    "title": "List | Angular Material",
    "og:locale": "en_US",
    "og:image:height": "943",
    "og:site_name": "Angular Material",
    "ogSiteName": "Angular Material",
    "mobile-web-app-capable": "yes",
    "twitter:creator": "@Angular",
    "og:title": "Angular Material",
    "og:image:type": "image/png",
    "twitter:card": "summary",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "viewport": "width=device-width, initial-scale=1",
    "apple-mobile-web-app-capable": "yes",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:site": "@Angular",
    "scrapeId": "59cd8e07-06fa-4295-89a6-b46e3efb1252",
    "sourceURL": "https://material.angular.io/components/list/overview",
    "url": "https://material.angular.io/components/list/overview",
    "statusCode": 200
  }
}