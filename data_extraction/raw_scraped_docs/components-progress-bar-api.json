{
  "scrapeId": "3e004bca-a640-44a1-8f5b-00645ad28896",
  "sourceURL": "https://material.angular.io/components/progress-bar/api",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\nAPI for progress-bar\n\n## API reference for Angular Material progress-bar\n\n`\n          import {MatProgressBarModule} from '@angular/material/progress-bar';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/progress-bar/api\\#directives)  Directives\n\n#### [link](https://material.angular.io/components/progress-bar/api\\#MatProgressBar) `MatProgressBar`\n\nSelector:mat-progress-bar\n\nExported as:matProgressBar\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| @Input({ transform: numberAttribute })<br> <br>`bufferValue: number` | Buffer value of the progress bar. Defaults to zero. |\n| @Input()<br>`color: string` | Theme color of the progress bar. This API is supported in M2 themes only, it<br>has no effect in M3 themes. For color customization in M3, see [https://material.angular.io/components/progress-bar/styling](https://material.angular.io/components/progress-bar/styling).<br>For information on applying color variants in M3, see<br>[https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants](https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants) |\n| @Input()<br>`mode: ProgressBarMode` | Mode of the progress bar.<br>Input must be one of these values: determinate, indeterminate, buffer, query, defaults to<br>'determinate'.<br>Mirrored to mode attribute. |\n| @Input({ transform: numberAttribute })<br> <br>`value: number` | Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. |\n| @Output()<br>`animationEnd: EventEmitter<ProgressAnimationEnd>` | Event emitted when animation of the primary progress bar completes. This event will not<br>be emitted when animations are disabled, nor will it be emitted for modes with continuous<br>animations (indeterminate and query). |\n\n### [link](https://material.angular.io/components/progress-bar/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/progress-bar/api\\#ProgressAnimationEnd) `ProgressAnimationEnd`\n\nLast animation end data.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `value: number` |  |\n\n#### [link](https://material.angular.io/components/progress-bar/api\\#MatProgressBarDefaultOptions) `MatProgressBarDefaultOptions`\n\nDefault `mat-progress-bar` options that can be overridden.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `color: ThemePalette` | Default theme color of the progress bar. This API is supported in M2 themes only,<br>it has no effect in M3 themes. For color customization in M3, see [https://material.angular.io/components/progress-bar/styling](https://material.angular.io/components/progress-bar/styling).<br>For information on applying color variants in M3, see<br>[https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants](https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants) |\n| `mode: ProgressBarMode` | Default mode of the progress bar. |\n\n### [link](https://material.angular.io/components/progress-bar/api\\#type_aliases)  Type aliases\n\n#### [link](https://material.angular.io/components/progress-bar/api\\#ProgressBarMode) `ProgressBarMode`\n\n```docs-markdown-code\ntype ProgressBarMode = 'determinate' | 'indeterminate' | 'buffer' | 'query';\n\n```\n\n### [link](https://material.angular.io/components/progress-bar/api\\#constants)  Constants\n\n#### [link](https://material.angular.io/components/progress-bar/api\\#MAT_PROGRESS_BAR_DEFAULT_OPTIONS) `MAT_PROGRESS_BAR_DEFAULT_OPTIONS`\n\nInjection token to be used to override the default options for `mat-progress-bar`.\n\n```docs-markdown-code\nconst MAT_PROGRESS_BAR_DEFAULT_OPTIONS: InjectionToken<MatProgressBarDefaultOptions>;\n\n```\n\n## API reference for Angular Material progress-bar-testing\n\n`\n          import {MatProgressBarHarness} from '@angular/material/progress-bar/testing';\n        `\n\ncontent\\_copy\n\n### [link](https://material.angular.io/components/progress-bar/api\\#classes)  Classes\n\n#### [link](https://material.angular.io/components/progress-bar/api\\#MatProgressBarHarness) `MatProgressBarHarness`extends [ComponentHarness](https://material.angular.io/components/progress-bar/cdk/testing/api\\#ComponentHarness)\n\nHarness for interacting with a `mat-progress-bar` in tests.\n\n##### Properties\n\n| Name | Description |\n| --- | --- |\n| `staticÂ hostSelector: '.mat-mdc-progress-bar'` |  |\n\n##### Methods\n\n| async<br> <br>getMode |\n| --- |\n| Gets a promise for the progress bar's mode. |\n| Returns |\n| --- |\n| `Promise<string | null>` |  |\n\n| async<br> <br>getValue |\n| --- |\n| Gets a promise for the progress bar's value. |\n| Returns |\n| --- |\n| `Promise<number | null>` |  |\n\n| async<br> <br>host |\n| --- |\n| Gets a `Promise` for the `TestElement` representing the host element of the component. |\n| Returns |\n| --- |\n| `Promise<TestElement>` |  |\n\n| static<br> <br>with |\n| --- |\n| Gets a `HarnessPredicate` that can be used to search for a progress bar with specific<br>attributes. |\n| Parameters |\n| --- |\n| options<br> `ProgressBarHarnessFilters = {}` | Options for filtering which progress bar instances are considered a match. |\n| Returns |\n| --- |\n| `HarnessPredicate<T>` | a `HarnessPredicate` configured with the given options. |\n\n### [link](https://material.angular.io/components/progress-bar/api\\#interfaces)  Interfaces\n\n#### [link](https://material.angular.io/components/progress-bar/api\\#ProgressBarHarnessFilters) `ProgressBarHarnessFilters`\n\nA set of criteria that can be used to filter a list of `MatProgressBarHarness` instances.\n\nProgress bar\n\nTesting\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nCopy import to the clipboard",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-78d9a420-e39b-43e9-8c00-479a9052e7ca.png"
  },
  "metadata": {
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "twitter:title": "Angular Material",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "twitter:card": "summary",
    "title": "Progress bar | Angular Material",
    "apple-mobile-web-app-capable": "yes",
    "favicon": "https://material.angular.io/components/progress-bar/assets/img/favicon.ico?v=19.1.0",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "twitter:creator": "@Angular",
    "og:image:height": "943",
    "language": "en-US",
    "ogSiteName": "Angular Material",
    "og:site_name": "Angular Material",
    "author": "Angular Components Team",
    "theme-color": "#d7e3ff",
    "og:image:width": "1339",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "ogLocale": "en_US",
    "twitter:site": "@Angular",
    "og:url": "https://material.angular.io/",
    "og:type": "website",
    "mobile-web-app-capable": "yes",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "og:locale": "en_US",
    "viewport": "width=device-width, initial-scale=1",
    "ogUrl": "https://material.angular.io/",
    "ogTitle": "Angular Material",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "og:title": "Angular Material",
    "og:image:type": "image/png",
    "scrapeId": "3e004bca-a640-44a1-8f5b-00645ad28896",
    "sourceURL": "https://material.angular.io/components/progress-bar/api",
    "url": "https://material.angular.io/components/progress-bar/api",
    "statusCode": 200
  }
}