{
  "scrapeId": "c845255e-d7ca-4a73-bf32-0af60c58a42b",
  "sourceURL": "https://material.angular.io/components/button/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for button\n\nAngular Material buttons are native `<button>` or `<a>` elements enhanced with Material Design\nstyling and ink ripples.\n\nBasic buttons\n\nlinkcodeopen\\_in\\_new\n\nBasic\n\nBasicDisabled [Link](https://www.google.com/)\n\nRaised\n\nBasicDisabled [Link](https://www.google.com/)\n\nStroked\n\nBasicDisabled [Link](https://www.google.com/)\n\nFlat\n\nBasicDisabled [Link](https://www.google.com/)\n\nIcon\n\nmore\\_vertopen\\_in\\_new\n\nFAB\n\ndelete\n\nfavorite\n\nMini FAB\n\nmenu\n\nhome\n\nExtended Fab\n\nfavorite Basic\n\nfavorite Disabled\n\nfavorite Link\n\nNative `<button>` and `<a>` elements are always used in order to provide the most straightforward\nand accessible experience for users. A `<button>` element should be used whenever some _action_\nis performed. An `<a>` element should be used whenever the user will _navigate_ to another view.\n\nThere are several button variants, each applied as an attribute:\n\n| Attribute | Description |\n| --- | --- |\n| `mat-button` | Rectangular text button w/ no elevation and rounded corners |\n| `mat-raised-button` | Rectangular contained button w/ elevation and rounded corners |\n| `mat-flat-button` | Rectangular contained button w/ no elevation and rounded corners |\n| `mat-stroked-button` | Rectangular outlined button w/ no elevation and rounded corners |\n| `mat-icon-button` | Circular button with a transparent background, meant to contain an icon |\n| `mat-fab` | Square button w/ elevation and rounded corners, meant to contain an icon. Can be [extended](https://material.angular.io/components/button/overview#extended-fab-buttons) to a rectangle to also fit a label |\n| `mat-mini-fab` | Same as `mat-fab` but smaller |\n\n### [link](https://material.angular.io/components/button/overview\\#extended-fab-buttons)  Extended fab buttons\n\nTraditional fab buttons are circular and only have space for a single icon. However, you can add the\n`extended` attribute to allow the fab to expand into a rounded rectangle shape with space for a text\nlabel in addition to the icon. Only full sized fabs support the `extended` attribute, mini fabs do\nnot.\n\n```html\n<button mat-fab extended>\n  <mat-icon>home</mat-icon>\n  Home\n</button>\n\n```\n\n### [link](https://material.angular.io/components/button/overview\\#interactive-disabled-buttons)  Interactive disabled buttons\n\nNative disabled `<button>` elements cannot receive focus and do not dispatch any events. This can\nbe problematic in some cases because it can prevent the app from telling the user why the button is\ndisabled. You can use the `disabledInteractive` input to style the button as disabled but allow for\nit to receive focus and dispatch events. The button will have `aria-disabled=\"true\"` for assistive\ntechnology. The behavior can be configured globally through the `MAT_BUTTON_CONFIG` injection token.\n\n**Note:** Using the `disabledInteractive` input can result in buttons that previously prevented\nactions to no longer do so, for example a submit button in a form. When using this input, you should\nguard against such cases in your component.\n\nInteractive disabled buttons\n\nlinkcodeopen\\_in\\_new\n\nDisabled button allowing interactivityDefault disabled button\n\n### [link](https://material.angular.io/components/button/overview\\#accessibility)  Accessibility\n\nAngular Material uses native `<button>` and `<a>` elements to ensure an accessible experience by\ndefault. A `<button>` element should be used for any interaction that _performs an action on the_\n_current page_. An `<a>` element should be used for any interaction that _navigates to another_\n_URL_. All standard accessibility best practices for buttons and anchors apply to `MatButton`.\n\n#### [link](https://material.angular.io/components/button/overview\\#capitalization)  Capitalization\n\nUsing ALL CAPS in the button text itself causes issues for screen-readers, which\nwill read the text character-by-character. It can also cause issues for localization.\nWe recommend not changing the default capitalization for the button text.\n\n#### [link](https://material.angular.io/components/button/overview\\#disabling-anchors)  Disabling anchors\n\n`MatAnchor` supports disabling an anchor in addition to the features provided by the native\n`<a>` element. When you disable an anchor, the component sets `aria-disabled=\"true\"` and\n`tabindex=\"-1\"`. Always test disabled anchors in your application to ensure compatibility\nwith any assistive technology your application supports.\n\n#### [link](https://material.angular.io/components/button/overview\\#buttons-with-icons)  Buttons with icons\n\nButtons or links containing only icons (such as `mat-fab`, `mat-mini-fab`, and `mat-icon-button`)\nshould be given a meaningful label via `aria-label` or `aria-labelledby`. [See the documentation\\\\\nfor `MatIcon`](https://material.angular.io/components/icon) for more\ninformation on using icons in buttons. Additionally, to be fully accessible the icon should have a minimum touch-target of 48x48 to ensure that the icon is easily clickable particularly on mobile devices and small screens.\n\n#### [link](https://material.angular.io/components/button/overview\\#toggle-buttons)  Toggle buttons\n\n[See the documentation for `MatButtonToggle`](https://material.angular.io/components/button-toggle)\nfor information on stateful toggle buttons.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic buttons example in StackBlitz\n\nCopy link to example\n\nView code\n\nEdit Interactive disabled buttons example in StackBlitz\n\nThis is a tooltip!",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-9a0c3e96-0c6c-42d9-802b-7817a69a0833.png"
  },
  "metadata": {
    "ogSiteName": "Angular Material",
    "twitter:title": "Angular Material",
    "og:url": "https://material.angular.io/",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "author": "Angular Components Team",
    "og:image:height": "943",
    "theme-color": "#d7e3ff",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:site_name": "Angular Material",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "language": "en-US",
    "ogLocale": "en_US",
    "viewport": "width=device-width, initial-scale=1",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "apple-mobile-web-app-capable": "yes",
    "favicon": "https://material.angular.io/components/button/assets/img/favicon.ico?v=19.1.0",
    "og:image:width": "1339",
    "ogUrl": "https://material.angular.io/",
    "og:title": "Angular Material",
    "title": "Button | Angular Material",
    "twitter:site": "@Angular",
    "og:locale": "en_US",
    "og:image:type": "image/png",
    "mobile-web-app-capable": "yes",
    "ogTitle": "Angular Material",
    "twitter:creator": "@Angular",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:card": "summary",
    "og:type": "website",
    "scrapeId": "c845255e-d7ca-4a73-bf32-0af60c58a42b",
    "sourceURL": "https://material.angular.io/components/button/overview",
    "url": "https://material.angular.io/components/button/overview",
    "statusCode": 200
  }
}