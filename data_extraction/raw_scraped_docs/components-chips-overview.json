{
  "scrapeId": "742083ad-12af-4590-8e4d-8e981cbbeaf1",
  "sourceURL": "https://material.angular.io/components/chips/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for chips\n\nChips allow users to view information, make selections, filter content, and enter data.\n\n### [link](https://material.angular.io/components/chips/overview\\#static-chips)  Static Chips\n\nChips are always used inside a container. To create chips, start with a `<mat-chip-set>` element. Then, nest `<mat-chip>` elements inside the `<mat-chip-set>`.\n\nBasic chips\n\nlinkcodeopen\\_in\\_new\n\nOne fishTwo fishThree fishFour fish\n\nBy default, `<mat-chip>` renders a chip with Material Design styles applied. For a chip with no styles applied, use `<mat-basic-chip>`.\n\n#### [link](https://material.angular.io/components/chips/overview\\#disabled-appearance)  Disabled appearance\n\nAlthough `<mat-chip>` is not interactive, you can set the `disabled` Input to give it disabled appearance.\n\n```html\n<mat-chip disabled>Orange</mat-chip>\n\n```\n\n### [link](https://material.angular.io/components/chips/overview\\#selection-chips)  Selection Chips\n\nUse `<mat-chip-listbox>` and `<mat-chip-option>` for selecting one or many items from a list. Start with creating a `<mat-chip-listbox>` element. If the user may select more than one option, add the `multiple` attribute. Nest a `<mat-chip-option>` element inside the `<mat-chip-listbox>` for each available option.\n\n#### [link](https://material.angular.io/components/chips/overview\\#disabled-mat-chip-option)  Disabled `<mat-chip-option>`\n\nUse the `disabled` Input to disable a `<mat-chip-option>`. This gives the `<mat-chip-option>` a disabled appearance and prevents the user from interacting with it.\n\n```html\n<mat-chip-option disabled>Orange</mat-chip-option>\n\n```\n\n#### [link](https://material.angular.io/components/chips/overview\\#keyboard-interactions)  Keyboard Interactions\n\nUsers can move through the chips using the arrow keys and select/deselect them with space. Chips also gain focus when clicked, ensuring keyboard navigation starts at the currently focused chip.\n\n### [link](https://material.angular.io/components/chips/overview\\#chips-connected-to-an-input-field)  Chips connected to an input field\n\nUse `<mat-chip-grid>` and `<mat-chip-row>` for assisting users with text entry.\n\nChips are always used inside a container. To create chips connected to an input field, start by creating a `<mat-chip-grid>` as the container. Add an `<input/>` element, and register it to the `<mat-chip-grid>` by passing the `matChipInputFor` Input. Always use an `<input/>` element with `<mat-chip-grid>`. Nest a `<mat-chip-row>` element inside the `<mat-chip-grid>` for each piece of data entered by the user. An example of using chips for text input.\n\nChips with input\n\nlinkcodeopen\\_in\\_new\n\nFavorite Fruits\n\nLemon cancelpress enter to edit Lemon Lime cancelpress enter to edit Lime Apple cancelpress enter to edit Apple\n\n### [link](https://material.angular.io/components/chips/overview\\#use-with-angularforms)  Use with `@angular/forms`\n\nChips are compatible with `@angular/forms` and supports both `FormsModule`\nand `ReactiveFormsModule`.\n\nChips in template-driven forms\n\nlinkcodeopen\\_in\\_new\n\n#### Chips inside of a Template-driven form\n\nVideo keywords\n\nangular cancel how-to cancel tutorial cancel accessibility cancel\n\nChips in reactive forms\n\nlinkcodeopen\\_in\\_new\n\n#### Chips inside of a Reactive form\n\nVideo keywords\n\nangular cancel how-to cancel tutorial cancel accessibility cancel\n\n#### [link](https://material.angular.io/components/chips/overview\\#disabled-mat-chip-row)  Disabled `<mat-chip-row>`\n\nUse the `disabled` Input to disable a `<mat-chip-row>`. This gives the `<mat-chip-row>` a disabled appearance and prevents the user from interacting with it.\n\n```html\n<mat-chip-row disabled>Orange</mat-chip-row>\n\n```\n\n#### [link](https://material.angular.io/components/chips/overview\\#keyboard-interactions-1)  Keyboard Interactions\n\nUsers can move through the chips using the arrow keys and select/deselect them with the space. Chips also gain focus when clicked, ensuring keyboard navigation starts at the appropriate chip.\n\nUsers can press delete to remove a chip. Pressing delete triggers the `removed` Output on the chip, so be sure to implement `removed` if you require that functionality.\n\n#### [link](https://material.angular.io/components/chips/overview\\#autocomplete)  Autocomplete\n\nA `<mat-chip-grid>` can be combined with `<mat-autocomplete>` to enable free-form chip input with suggestions.\n\nChips Autocomplete\n\nlinkcodeopen\\_in\\_new\n\nFavorite Fruits\n\nLemon cancel\n\n### [link](https://material.angular.io/components/chips/overview\\#icons)  Icons\n\nYou can add icons to chips to identify entities (like individuals) and provide additional functionality.\n\n#### [link](https://material.angular.io/components/chips/overview\\#adding-up-to-two-icons-with-content-projection)  Adding up to two icons with content projection\n\nYou can add two additional icons to an individual chip. A chip has two slots to display icons using content projection. All variants of chips support adding icons including `<mat-chip>`, `<mat-chip-option>`, and `<mat-chip-row>`.\n\nA chip has a front slot for adding an avatar image. To add an avatar, nest an element with `matChipAvatar` attribute inside of `<mat-chip>`.\n\nChips avatar\n\nlinkcodeopen\\_in\\_new\n\n![Photo of a Shiba Inu](https://material.angular.io/assets/img/examples/shiba1.jpg) Dog one ![Photo of a Shiba Inu](https://material.angular.io/assets/img/examples/shiba1.jpg) Dog two ![Photo of a Shiba Inu](https://material.angular.io/assets/img/examples/shiba1.jpg) Dog three\n\nYou can add an additional icon to the back slot by nesting an element with either the `matChipTrailingIcon` or `matChipRemove` attribute.\n\n#### [link](https://material.angular.io/components/chips/overview\\#remove-button)  Remove Button\n\nSometimes the end user would like the ability to remove a chip. You can provide that functionality using `matChipRemove`. `matChipRemove` renders to the back slot of a chip and triggers the `removed` Output when clicked.\n\nTo create a remove button, nest a `<button>` element with `matChipRemove` attribute inside the `<mat-chip-option>`. Be sure to implement the `removed` Output.\n\n```html\n <mat-chip-option>\n  Orange\n  <button matChipRemove aria-label=\"Remove orange\">\n    <mat-icon>cancel</mat-icon>\n  </button>\n</mat-chip-option>\n\n```\n\nSee the [accessibility](https://material.angular.io/components/chips/overview#accessibility) section for best practices on implementing the `removed` Output and creating accessible icons.\n\n### [link](https://material.angular.io/components/chips/overview\\#orientation)  Orientation\n\nBy default, chips are displayed horizontally. To stack chips vertically, apply the `mat-mdc-chip-set-stacked` class to `<mat-chip-set>`, `<mat-chip-listbox>` or `<mat-chip-grid>`.\n\nStacked chips\n\nlinkcodeopen\\_in\\_new\n\nSamoyedAkita InuAlaskan MalamuteSiberian Husky\n\n### [link](https://material.angular.io/components/chips/overview\\#specifying-global-configuration-defaults)  Specifying global configuration defaults\n\nUse the `MAT_CHIPS_DEFAULT_OPTIONS` token to specify default options for the chips module.\n\n```html\n@NgModule({\n  providers: [\\\n    {\\\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\\\n      useValue: {\\\n        separatorKeyCodes: [COMMA, SPACE]\\\n      }\\\n    }\\\n  ]\n})\n\n```\n\n### [link](https://material.angular.io/components/chips/overview\\#interaction-patterns)  Interaction Patterns\n\nThe chips components support 3 user interaction patterns, each with its own container and chip elements:\n\n#### [link](https://material.angular.io/components/chips/overview\\#listbox)  Listbox\n\n`<mat-chip-listbox>` and `<mat-chip-option>` : These elements implement a listbox accessibility pattern. Use them to present set of user selectable options.\n\n```html\n<mat-chip-listbox aria-label=\"select a shirt size\">\n  <mat-chip-option> Small </mat-chip-option>\n  <mat-chip-option> Medium </mat-chip-option>\n  <mat-chip-option> Large </mat-chip-option>\n</mat-chip-listbox>\n\n```\n\n#### [link](https://material.angular.io/components/chips/overview\\#text-entry)  Text Entry\n\n`<mat-chip-grid>` and `<mat-chip-row>` : These elements implement a grid accessibility pattern. Use them as part of a free form input that allows users to enter text to add chips.\n\nNote : be sure to have the input element be a sibling of mat-chip-grid to ensure accessibility of the input element by accessibility devices such as Voice Control. It is also recommended to apply an appropriate `aria-label` to the input to optimize accessibility of the input.\n\n```html\n<mat-form-field>\n  <mat-chip-grid #myChipGrid [(ngModel)]=\"mySelection\"\n    aria-label=\"enter sandwich fillings\">\n    @for (filling of fillings; track filling) {\n      <mat-chip-row (removed)=\"remove(filling)\">\n        {{filling.name}}\n        <button matChipRemove>\n          <mat-icon>cancel</mat-icon>\n        </button>\n      </mat-chip-row>\n    }\n  </mat-chip-grid>\n  <input [matChipInputFor]=\"myChipGrid\"\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n          (matChipInputTokenEnd)=\"add($event)\"\n          aria-label=\"Add sandwich fillings...\" />\n</mat-form-field>\n\n```\n\n#### [link](https://material.angular.io/components/chips/overview\\#static-content)  Static Content\n\n`<mat-chip-set>` and `<mat-chip>` as an unordered list : Present a list of items that are not interactive. This interaction pattern mimics using `ul` and `li` elements. Apply role=\"list\" to the `<mat-list>`. Apply role=\"listitem\" to each `<mat-list-item>`.\n\n```html\n<mat-chip-set role=\"list\">\n  <mat-chip role=\"listitem\"> Sugar </mat-chip>\n  <mat-chip role=\"listitem\"> Spice </mat-chip>\n  <mat-chip role=\"listitem\"> Everything Nice </mat-chip>\n</mat-chip-set>\n\n```\n\n`<mat-chip-set>` and `<mat-chip>` : These elements do not implement any specific accessibility pattern. Add the appropriate accessibility depending on the context. Note that Angular Material does not intend `<mat-chip>`, `<mat-basic-chip>`, and `<mat-chip-set>` to be interactive.\n\n```html\n<mat-chip-set>\n  <mat-chip> John </mat-chip>\n  <mat-chip> Paul </mat-chip>\n  <mat-chip> James </mat-chip>\n</mat-chip-set>\n\n```\n\n### [link](https://material.angular.io/components/chips/overview\\#accessibility)  Accessibility\n\nThe [Interaction Patterns](https://material.angular.io/components/chips/overview#interaction-patterns) section describes the three variants of chips available. Choose the chip variant that best matches your use case.\n\nFor both MatChipGrid and MatChipListbox, always apply an accessible label to the control via `aria-label` or `aria-labelledby`.\n\nAlways apply MatChipRemove to a `<button>` element, never a `<mat-icon>` element.\n\nWhen using MatChipListbox, never nest other interactive controls inside of the `<mat-chip-option>` element. Nesting controls degrades the experience for assistive technology users.\n\nBy default, `MatChipListbox` displays a checkmark to identify selected items. While you can hide the checkmark indicator for single-selection via `hideSingleSelectionIndicator`, this makes the component less accessible by making it harder or impossible for users to visually identify selected items.\n\nWhen a chip is editable, provide instructions to assistive technology how to edit the chip using a keyboard. One way to accomplish this is adding an `aria-description` attribute with instructions to press enter to edit the chip.\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic chips example in StackBlitz\n\nCopy link to example\n\nView code\n\nEdit Chips with input example in StackBlitz\n\nEdit Chips in template-driven forms example in StackBlitz\n\nEdit Chips in reactive forms example in StackBlitz\n\nEdit Chips Autocomplete example in StackBlitz\n\nEdit Chips avatar example in StackBlitz\n\nEdit Stacked chips example in StackBlitz",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-574e97e1-8a6e-4c33-bb98-f5ceb421c517.png"
  },
  "metadata": {
    "og:image:width": "1339",
    "ogUrl": "https://material.angular.io/",
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:title": "Angular Material",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "ogLocale": "en_US",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "ogTitle": "Angular Material",
    "og:title": "Angular Material",
    "og:locale": "en_US",
    "favicon": "https://material.angular.io/components/chips/assets/img/favicon.ico?v=19.1.0",
    "language": "en-US",
    "theme-color": "#d7e3ff",
    "viewport": "width=device-width, initial-scale=1",
    "og:url": "https://material.angular.io/",
    "twitter:card": "summary",
    "og:image:type": "image/png",
    "title": "Chips | Angular Material",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "apple-mobile-web-app-capable": "yes",
    "ogSiteName": "Angular Material",
    "twitter:site": "@Angular",
    "twitter:creator": "@Angular",
    "og:site_name": "Angular Material",
    "og:type": "website",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "og:image:height": "943",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "author": "Angular Components Team",
    "mobile-web-app-capable": "yes",
    "scrapeId": "742083ad-12af-4590-8e4d-8e981cbbeaf1",
    "sourceURL": "https://material.angular.io/components/chips/overview",
    "url": "https://material.angular.io/components/chips/overview",
    "statusCode": 200
  }
}