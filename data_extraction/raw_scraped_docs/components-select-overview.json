{
  "scrapeId": "8f85e8a5-a5e2-4601-828e-a7eb0a89aced",
  "sourceURL": "https://material.angular.io/components/select/overview",
  "statusCode": 200,
  "data": {
    "markdown": "[Autocomplete](https://material.angular.io/components/autocomplete) [Badge](https://material.angular.io/components/badge) [Bottom Sheet](https://material.angular.io/components/bottom-sheet) [Button](https://material.angular.io/components/button) [Button toggle](https://material.angular.io/components/button-toggle) [Card](https://material.angular.io/components/card) [Checkbox](https://material.angular.io/components/checkbox) [Chips](https://material.angular.io/components/chips) [Core](https://material.angular.io/components/core) [Datepicker](https://material.angular.io/components/datepicker) [Dialog](https://material.angular.io/components/dialog) [Divider](https://material.angular.io/components/divider) [Expansion Panel](https://material.angular.io/components/expansion) [Form field](https://material.angular.io/components/form-field) [Grid list](https://material.angular.io/components/grid-list) [Icon](https://material.angular.io/components/icon) [Input](https://material.angular.io/components/input) [List](https://material.angular.io/components/list) [Menu](https://material.angular.io/components/menu) [Paginator](https://material.angular.io/components/paginator) [Progress bar](https://material.angular.io/components/progress-bar) [Progress spinner](https://material.angular.io/components/progress-spinner) [Radio button](https://material.angular.io/components/radio) [Ripples](https://material.angular.io/components/ripple) [Select](https://material.angular.io/components/select) [Sidenav](https://material.angular.io/components/sidenav) [Slide toggle](https://material.angular.io/components/slide-toggle) [Slider](https://material.angular.io/components/slider) [Snackbar](https://material.angular.io/components/snack-bar) [Sort header](https://material.angular.io/components/sort) [Stepper](https://material.angular.io/components/stepper) [Table](https://material.angular.io/components/table) [Tabs](https://material.angular.io/components/tabs) [Timepicker](https://material.angular.io/components/timepicker) [Toolbar](https://material.angular.io/components/toolbar) [Tooltip](https://material.angular.io/components/tooltip) [Tree](https://material.angular.io/components/tree)\n\n## Overview for select\n\n`<mat-select>` is a form control for selecting a value from a set of options, similar to the native\n`<select>` element. You can read more about selects in the\n[Material Design spec](https://material.io/design/components/menus.html). It is designed to work\ninside of a [`<mat-form-field>`](https://material.angular.io/components/form-field/overview)\nelement.\n\nTo add options to the select, add `<mat-option>` elements to the `<mat-select>`. Each `<mat-option>`\nhas a `value` property that can be used to set the value that will be selected if the user chooses\nthis option. The content of the `<mat-option>` is what will be shown to the user.\n\nAngular Material also supports use of the native `<select>` element inside of\n`<mat-form-field>`. The native control has several performance, accessibility,\nand usability advantages. See [the documentation for\\\\\nform-field](https://material.angular.io/components/form-field) for more information.\n\nTo use a native select inside `<mat-form-field>`, import `MatInputModule` and add the\n`matNativeControl` attribute to the `<select>` element.\n\nBasic select\n\nlinkcodeopen\\_in\\_new\n\n#### Basic mat-select\n\nFavorite food\n\n#### Basic native select\n\nCarsVolvoSaabMercedesAudi\n\n### [link](https://material.angular.io/components/select/overview\\#getting-and-setting-the-select-value)  Getting and setting the select value\n\nThe `<mat-select>` supports 2-way binding to the `value` property without the need for Angular\nforms.\n\nSelect with 2-way value binding\n\nlinkcodeopen\\_in\\_new\n\nSelect an option\n\nOption 2\n\nYou selected: option2\n\nBoth `<mat-select>` and `<select>` support all of the form directives from the core `FormsModule` ( `NgModel`) and\n`ReactiveFormsModule` ( `FormControl`, `FormGroup`, etc.) As with native `<select>`, `<mat-select>`\nalso supports a `compareWith` function. (Additional information about using a custom `compareWith`\nfunction can be found in the\n[Angular forms documentation](https://angular.dev/api/forms/SelectControlValueAccessor#compareWith)).\n\nSelect in a form\n\nlinkcodeopen\\_in\\_new\n\n#### mat-select\n\nFavorite food\n\nSelected food:\n\n#### native html select\n\nFavorite carVolvoSaabMercedes\n\nSelected car:\n\n### [link](https://material.angular.io/components/select/overview\\#form-field-features)  Form field features\n\nThere are a number of `<mat-form-field>` features that can be used with both `<select>` and `<mat-select>`. These\ninclude error messages, hint text, prefix & suffix, and theming. For additional information about\nthese features, see the\n[form field documentation](https://material.angular.io/components/form-field/overview).\n\nSelect with form field features\n\nlinkcodeopen\\_in\\_new\n\n#### mat select\n\nFavorite animal\n\n#### native html select\n\nSelect your car (required)SaabMercedesAudi\n\nYou can pick up your favorite car here\n\n### [link](https://material.angular.io/components/select/overview\\#setting-a-static-placeholder)  Setting a static placeholder\n\nThe placeholder is text shown when the `<mat-form-field>` label is floating but the `<mat-select>`\nis empty. It is used to give the user an additional hint about the value they should select. The\nplaceholder can be specified by setting the `placeholder` attribute on the `<mat-select>` element.\nIn some cases that `<mat-form-field>` may use the placeholder as the label (see the\n[form field label documentation](https://material.angular.io/components/form-field/overview#floating-label)).\n\n### [link](https://material.angular.io/components/select/overview\\#disabling-the-select-or-individual-options)  Disabling the select or individual options\n\nIt is possible to disable the entire select or individual options in the select by using the\ndisabled property on the `<select>` or `<mat-select>` and the `<option>` or `<mat-option>` elements respectively.\nWhen working with Reactive Forms, the select component can be disabled/enabled via form controls.\nThis can be accomplished by creating a `FormControl` with the disabled property\n`FormControl({value: '', disabled: true})` or using `FormControl.enable()`, `FormControl.disable()`.\n\nDisabled select\n\nlinkcodeopen\\_in\\_new\n\nDisable select\n\n#### mat-select\n\nChoose an option\n\n#### native html select\n\nChoose an optionVolvoSaabMercedesAudi\n\n### [link](https://material.angular.io/components/select/overview\\#resetting-the-select-value)  Resetting the select value\n\nIf you want one of your options to reset the select's value, you can omit specifying its value.\n\nSelect with reset option\n\nlinkcodeopen\\_in\\_new\n\n#### mat-select\n\nState\n\n#### native html select\n\nSelect your carVolvoSaabMercedesAudi\n\n### [link](https://material.angular.io/components/select/overview\\#allowing-nullable-options-to-be-selected)  Allowing nullable options to be selected\n\nBy default any options with a `null` or `undefined` value will reset the select's value. If instead\nyou want the nullable options to be selectable, you can enable the `canSelectNullableOptions` input.\nThe default value for the input can be controlled application-wide through the `MAT_SELECT_CONFIG`\ninjection token.\n\nSelect with selectable null options\n\nlinkcodeopen\\_in\\_new\n\n#### mat-select allowing selection of nullable options\n\nState\n\nNone\n\n#### mat-select with default configuration\n\nState\n\n### [link](https://material.angular.io/components/select/overview\\#creating-groups-of-options)  Creating groups of options\n\nThe `<mat-optgroup>` element can be used to group common options under a subheading. The name of the\ngroup can be set using the `label` property of `<mat-optgroup>`. Like individual `<mat-option>`\nelements, an entire `<mat-optgroup>` can be disabled or enabled by setting the `disabled` property\non the group.\n\nSelect with option groups\n\nlinkcodeopen\\_in\\_new\n\n#### mat-select\n\nPokemon\n\n#### native html select\n\nCarsvolvoSaabMercedesAudi\n\n### [link](https://material.angular.io/components/select/overview\\#multiple-selection)  Multiple selection\n\n`<mat-select>` defaults to single-selection mode, but can be configured to allow multiple selection\nby setting the `multiple` property. This will allow the user to select multiple values at once. When\nusing the `<mat-select>` in multiple selection mode, its value will be a sorted list of all selected\nvalues rather than a single value.\n\nUsing multiple selection with a native select element ( `<select multiple>`) is discouraged\ninside `<mat-form-field>`, as the inline listbox appearance is inconsistent with other\nMaterial Design components.\n\nSelect with multiple selection\n\nlinkcodeopen\\_in\\_new\n\nToppings\n\n### [link](https://material.angular.io/components/select/overview\\#customizing-the-trigger-label)  Customizing the trigger label\n\nIf you want to display a custom trigger label inside a `<mat-select>`, you can use the\n`<mat-select-trigger>` element.\n\nSelect with custom trigger text\n\nlinkcodeopen\\_in\\_new\n\nToppings\n\n### [link](https://material.angular.io/components/select/overview\\#disabling-the-ripple-effect)  Disabling the ripple effect\n\nBy default, when a user clicks on a `<mat-option>`, a ripple animation is shown. This can be disabled\nby setting the `disableRipple` property on `<mat-select>`.\n\nSelect with no option ripple\n\nlinkcodeopen\\_in\\_new\n\nSelect an option\n\n### [link](https://material.angular.io/components/select/overview\\#adding-custom-styles-to-the-dropdown-panel)  Adding custom styles to the dropdown panel\n\nIn order to facilitate easily styling the dropdown panel, `<mat-select>` has a `panelClass` property\nwhich can be used to apply additional CSS classes to the dropdown panel.\n\nSelect with custom panel styling\n\nlinkcodeopen\\_in\\_new\n\nPanel color\n\nRed\n\n### [link](https://material.angular.io/components/select/overview\\#changing-when-error-messages-are-shown)  Changing when error messages are shown\n\nThe `<mat-form-field>` allows you to\n[associate error messages](https://material.angular.io/components/form-field/overview#error-messages)\nwith your `<select>` or `<mat-select>`. By default, these error messages are shown when the control is invalid and\neither the user has interacted with (touched) the element or the parent form has been submitted. If\nyou wish to override this behavior (e.g. to show the error as soon as the invalid control is dirty\nor when a parent form group is invalid), you can use the `errorStateMatcher` property of the\n`<mat-select>`. The property takes an instance of an `ErrorStateMatcher` object. An\n`ErrorStateMatcher` must implement a single method `isErrorState` which takes the `FormControl` for\nthis `<mat-select>` as well as the parent form and returns a boolean indicating whether errors\nshould be shown. ( `true` indicating that they should be shown, and `false` indicating that they\nshould not.)\n\nSelect with a custom ErrorStateMatcher\n\nlinkcodeopen\\_in\\_new\n\n#### mat-select\n\nChoose one\n\nValid option\n\nErrors appear instantly!\n\n#### native html select\n\nChoose oneValid optionInvalid option\n\nA global error state matcher can be specified by setting the `ErrorStateMatcher` provider. This\napplies to all inputs. For convenience, `ShowOnDirtyErrorStateMatcher` is available in order to\nglobally cause input errors to show when the input is dirty and invalid.\n\n```ts\n@NgModule({\n  providers: [\\\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}\\\n  ]\n})\n\n```\n\n### [link](https://material.angular.io/components/select/overview\\#keyboard-interaction)  Keyboard interaction\n\n| Keyboard shortcut | Action |\n| --- | --- |\n| `Down Arrow` | Navigate to the next option. |\n| `Up Arrow` | Navigate to the previous option. |\n| `Enter` | If closed, open the select panel. If open, selects the active option. |\n| `Escape` | Close the select panel. |\n| `Alt` \\+ `Up Arrow` | Close the select panel. |\n| `Alt` \\+ `Down Arrow` | Open the select panel if there are any matching options. |\n\n### [link](https://material.angular.io/components/select/overview\\#accessibility)  Accessibility\n\nWhen possible, prefer a native `<select>` element over `MatSelect`. The native control\nprovides the most accessible experience across the widest range of platforms.\n\n`MatSelect` implements the combobox pattern detailed in the [1.2 version of the ARIA\\\\\nspecification](https://www.w3.org/TR/wai-aria-1.2). The combobox trigger controls a `role=\"listbox\"`\nelement opened in a pop-up. Previous versions of the ARIA specification\nrequired that `role=\"combobox\"` apply to a text input control, but the 1.2 version of the\nspecification supports a wider variety of interaction patterns. This newer usage of ARIA works\nin all browser and screen-reader combinations supported by Angular Material.\n\nBecause the pop-up uses the `role=\"listbox\"` pattern, you should _not_ put other interactive\ncontrols, such as buttons or checkboxes, inside a select option. Nesting interactive controls like\nthis interferes with most assistive technology.\n\nAlways provide an accessible label for the select. This can be done by adding a `<mat-label>`\ninside of `<mat-form-field>`, the `aria-label` attribute, or the `aria-labelledby` attribute.\n\nBy default, `MatSelect` displays a checkmark to identify selected items. While you can hide the\ncheckmark indicator for single-selection via `hideSingleSelectionIndicator`, this makes the\ncomponent less accessible by making it harder or impossible for users to visually identify selected\nitems.\n\n### [link](https://material.angular.io/components/select/overview\\#troubleshooting)  Troubleshooting\n\n#### [link](https://material.angular.io/components/select/overview\\#error-cannot-change-multiple-mode-of-select-after-initialization)  Error: Cannot change `multiple` mode of select after initialization\n\nThis error is thrown if you attempt to bind the `multiple` property on `<mat-select>` to a dynamic\nvalue. (e.g. `[multiple]=\"isMultiple\"` where the value of `isMultiple` changes over the course of\nthe component's lifetime). If you need to change this dynamically, use `@if` or `@switch` instead:\n\n```html\n@if (isMultiple) {\n  <mat-select multiple>\n    ...\n  </mat-select>\n} @else {\n  <mat-select>\n    ...\n  </mat-select>\n}\n\n```\n\n#### [link](https://material.angular.io/components/select/overview\\#error-value-must-be-an-array-in-multiple-selection-mode)  Error: Value must be an array in multiple-selection mode\n\nThis error is thrown if you attempt to assign a value other than `null`, `undefined`, or an array to\na `<mat-select multiple>`. For example, something like `mySelect.value = 'option1'`. What you likely\nmeant to do was `mySelect.value = ['option1']`.\n\n#### [link](https://material.angular.io/components/select/overview\\#error-comparewith-must-be-a-function)  Error: `compareWith` must be a function\n\nThis error occurs if you attempt to assign something other than a function to the `compareWith`\nproperty. For more information on proper usage of `compareWith` see the\n[Angular forms documentation](https://angular.dev/api/forms/SelectControlValueAccessor#compareWith)).\n\nOverview Content\n\nAzure & Blue theme selected.\n\nSelect a version of the documentation\n\nSelect a theme for the documentation\n\nEdit Basic select example in StackBlitz\n\nCopy link to example\n\nView code\n\nEdit Select with 2-way value binding example in StackBlitz\n\nEdit Select in a form example in StackBlitz\n\nEdit Select with form field features example in StackBlitz\n\nEdit Disabled select example in StackBlitz\n\nEdit Select with reset option example in StackBlitz\n\nEdit Select with selectable null options example in StackBlitz\n\nEdit Select with option groups example in StackBlitz\n\nEdit Select with multiple selection example in StackBlitz\n\nEdit Select with custom trigger text example in StackBlitz\n\nEdit Select with no option ripple example in StackBlitz\n\nEdit Select with custom panel styling example in StackBlitz\n\nEdit Select with a custom ErrorStateMatcher example in StackBlitz",
    "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-0813a9e3-f2a7-48b0-baab-065d467a61e1.png"
  },
  "metadata": {
    "keywords": "angular, material design, material, angular material, web, ui, components, responsive, accessibility, typescript, css, mobile web, open source",
    "og:image:height": "943",
    "twitter:title": "Angular Material",
    "title": "Select | Angular Material",
    "og:title": "Angular Material",
    "ogSiteName": "Angular Material",
    "ogDescription": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:url": "https://material.angular.io/",
    "ogLocale": "en_US",
    "author": "Angular Components Team",
    "og:site_name": "Angular Material",
    "mobile-web-app-capable": "yes",
    "ogImage": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:site": "@Angular",
    "description": "UI component infrastructure and Material Design components for mobile and desktop Angular web applications.",
    "theme-color": "#d7e3ff",
    "apple-mobile-web-app-status-bar-style": "translucent",
    "og:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "favicon": "https://material.angular.io/components/select/assets/img/favicon.ico?v=19.1.0",
    "og:image:width": "1339",
    "twitter:description": "UI component infrastructure and Material Design components for Angular web applications.",
    "og:locale": "en_US",
    "og:image:secure_url": "https://material.angular.io/assets/img/site-preview.png",
    "viewport": "width=device-width, initial-scale=1",
    "twitter:image": "https://material.angular.io/assets/img/site-preview.png",
    "twitter:creator": "@Angular",
    "og:image": "https://material.angular.io/assets/img/site-preview.png",
    "og:type": "website",
    "language": "en-US",
    "og:image:type": "image/png",
    "ogTitle": "Angular Material",
    "twitter:card": "summary",
    "apple-mobile-web-app-capable": "yes",
    "ogUrl": "https://material.angular.io/",
    "scrapeId": "8f85e8a5-a5e2-4601-828e-a7eb0a89aced",
    "sourceURL": "https://material.angular.io/components/select/overview",
    "url": "https://material.angular.io/components/select/overview",
    "statusCode": 200
  }
}